#
# A fatal error has been detected by the Java Runtime Environment:
#
#  EXCEPTION_ACCESS_VIOLATION (0xc0000005) at pc=0x00007ffee9b5b440, pid=19244, tid=16776
#
# JRE version: OpenJDK Runtime Environment Temurin-21.0.3+9 (21.0.3+9) (build 21.0.3+9-LTS)
# Java VM: OpenJDK 64-Bit Server VM Temurin-21.0.3+9 (21.0.3+9-LTS, mixed mode, tiered, compressed oops, compressed class ptrs, g1 gc, windows-amd64)
# Problematic frame:
# C  [d3d9on12.dll+0x5b440]
#
# No core dump will be written. Minidumps are not enabled by default on client versions of Windows
#
# If you would like to submit a bug report, please visit:
#   https://github.com/adoptium/adoptium-support/issues
# The crash happened outside the Java Virtual Machine in native code.
# See problematic frame for where to report the bug.
#

---------------  S U M M A R Y ------------

Command Line: --module-path=H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\lib --add-modules=javafx.controls,javafx.graphics,javafx.fxml,javafx.media -Dfile.encoding=UTF-8 -Dstdout.encoding=UTF-8 -Dstderr.encoding=UTF-8 --module-path=C:\Users\CYTech Student\.p2\pool\plugins\org.eclipse.fx.ide.css.jfx8_3.8.0.202204150904.jar;H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\lib\javafx.base.jar;H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\lib\javafx.controls.jar;H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\lib\javafx.fxml.jar;H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\lib\javafx.graphics.jar;H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\lib\javafx.media.jar;H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\lib\javafx.swing.jar;H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\lib\javafx.web.jar;H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\lib\javafx-swt.jar -XX:+ShowCodeDetailsInExceptionMessages main.Main

Host: 13th Gen Intel(R) Core(TM) i5-1335U, 12 cores, 15G,  Windows 10 , 64 bit Build 19041 (10.0.19041.3636)
Time: Sun May 26 13:32:52 2024 Paris, Madrid (heure duild 19041 (10.0.19041.3636) elapsed time: 3573.279463 seconds (0d 0h 59m 33s)

---------------  T H R E A D  ---------------

Current thread (0x000001eb08686120):  JavaThread "QuantumRenderer-0" daemon [_thread_in_native, id=16776, stack(0x0000002cf1800000,0x0000002cf1900000) (1024K)]

Stack: [0x0000002cf1800000,0x0000002cf1900000],  sp=0x0000002cf18fe3a0,  free space=1016k
Native frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)
C  [d3d9on12.dll+0x5b440]

Java frames: (J=compiled Java code, j=interpreted, Vv=VM code)
J 3084  com.sun.prism.d3d.D3DSwapChain.nPresent(JJ)I javafx.graphics@22.0.1 (0 bytes) @ 0x000001eb74a2e31c [0x000001eb74a2e2c0+0x000000000000005c]
J 3623 c2 com.sun.javafx.tk.quantum.PresentingPainter.run()V javafx.graphics@22.0.1 (680 bytes) @ 0x000001eb74bc4d04 [0x000001eb74bc40c0+0x0000000000000c44]
J 3609% c2 java.util.concurrent.ThreadPoolExecutor.runWorker(Ljava/util/concurrent/ThreadPoolExecutor$Worker;)V java.base@21.0.3 (187 bytes) @ 0x000001eb74bbd18c [0x000001eb74bbcdc0+0x00000000000003cc]
j  java.util.concurrent.ThreadPoolExecutor$Worker.run()V+5 java.base@21.0.3
j  com.sun.javafx.tk.quantum.QuantumRenderer$PipelineRunnable.run()V+8 javafx.graphics@22.0.1
j  java.lang.Thread.runWith(Ljava/lang/Object;Ljava/lang/Runnable;)V+5 java.base@21.0.3
j  java.lang.Thread.run()V+19 java.base@21.0.3
v  ~StubRoutines::call_stub 0x000001eb7431100d

siginfo: EXCEPTION_ACCESS_VIOLATION (0xc0000005), reading address 0x0000000000000000


Registers:
RAX=0x0000000000000000, RBX=0x0000000000000000, RCX=0x000001eb0c0e53d0, RDX=0x0000000000000000
RSP=0x0000002cf18fe3a0, RBP=0x0000002cf18fe4a0, RSI=0x000001eb0c0e5398, RDI=0x0000002cf18fe550
R8 =0x0000000000000000, R9 =0x0000000000000000, R10=0x0000000000000000, R11=0x0000002cf18fe550
R12=0x0000000000000000, R13=0x0000000000000000, R14=0x000001eb0c06fd00, R15=0x0000000000000000
RIP=0x00007ffee9b5b440, EFLAGS=0x0000000000010246


Register to memory mapping:

RAX=0x0 is null
RBX=0x0 is null
RCX=0x000001eb0c0e53d0 points into unknown readable memory: 0x0000000000000000 | 00 00 00 00 00 00 00 00
RDX=0x0 is null
RSP=0x0000002cf18fe3a0 is pointing into the stack for thread: 0x000001eb08686120
RBP=0x0000002cf18fe4a0 is pointing into the stack for thread: 0x000001eb08686120
RSI=0x000001eb0c0e5398 points into unknown readable memory: 0x000001eb0c0e0f20 | 20 0f 0e 0c eb 01 00 00
RDI=0x0000002cf18fe550 is pointing into the stack for thread: 0x000001eb08686120
R8 =0x0 is null
R9 =0x0 is null
R10=0x0 is null
R11=0x0000002cf18fe550 is pointing into the stack for thread: 0x000001eb08686120
R12=0x0 is null
R13=0x0 is null
R14=0x000001eb0c06fd00 points into unknown readable memory: 0x0000000000000000 | 00 00 00 00 00 00 00 00
R15=0x0 is null

Top of Stack: (sp=0x0000002cf18fe3a0)
0x0000002cf18fe3a0:   0000000000000000 000001eb0c0e5398
0x0000002cf18fe3b0:   0000000000000000 0000000000000000
0x0000002cf18fe3c0:   0000000100000000 0000000100000000
0x0000002cf18fe3d0:   0000000100000000 0000ceaf7da1e234
0x0000002cf18fe3e0:   0000000000000000 00007fff24fd0000
0x0000002cf18fe3f0:   0000002cf18fe3a0 00007ffee8a3f1f0
0x0000002cf18fe400:   0000002cf18fe240 00007ffee9b4f909
0x0000002cf18fe410:   0000000000000000 ffffffffffffffff
0x0000002cf18fe420:   0000000000000000 000001eb00000000
0x0000002cf18fe430:   0000000000000000 0000000000000000
0x0000002cf18fe440:   00007ffe00000003 0000000000010000
0x0000002cf18fe450:   0000000000000310 00010001000002c7
0x0000002cf18fe460:   0000000100000057 0000000000000000
0x0000002cf18fe470:   0000000000000021 0000000000000000
0x0000002cf18fe480:   0000000000240000 0000000000000001
0x0000002cf18fe490:   0000000000000000 00007fff24ffb86b
0x0000002cf18fe4a0:   0000000000040003 0000000000000010
0x0000002cf18fe4b0:   000001eb0c81f9f0 0000ceaf7da1e374
0x0000002cf18fe4c0:   0000000000000003 000001eb0c06fd80
0x0000002cf18fe4d0:   0000000000000000 0000000000000000
0x0000002cf18fe4e0:   0000000000000000 000001eb08849080
0x0000002cf18fe4f0:   0000002cf18fe600 00007ffee9b1760c
0x0000002cf18fe500:   0000000000000650 000001eb0c430550
0x0000002cf18fe510:   0000002cf18fe660 0000000000000000
0x0000002cf18fe520:   0000000000000000 0000000000000640
0x0000002cf18fe530:   0000000000000638 0000000000000010
0x0000002cf18fe540:   000001eb66ff0000 0000002cf18fe609
0x0000002cf18fe550:   0000000000000000 0000000000000000
0x0000002cf18fe560:   0000000000000000 0000000000000000
0x0000002cf18fe570:   0000000000000000 0000000000000000
0x0000002cf18fe580:   0000000000000000 0000000000000000
0x0000002cf18fe590:   0000000000000000 0000000000000000 

Instructions: (pc=0x00007ffee9b5b440)
0x00007ffee9b5b340:   48 89 5c 24 08 48 89 74 24 10 57 48 83 ec 20 8b
0x00007ffee9b5b350:   f2 48 8b f9 48 8d 59 28 48 8b cb 48 ff 15 ee 6e
0x00007ffee9b5b360:   03 00 0f 1f 44 00 00 85 c0 74 0f 8b c8 48 ff 15
0x00007ffee9b5b370:   e4 6e 03 00 0f 1f 44 00 00 cc 48 8b 47 10 48 8b
0x00007ffee9b5b380:   3c f0 48 8b cb 48 ff 15 d4 6e 03 00 0f 1f 44 00
0x00007ffee9b5b390:   00 85 c0 74 0f 8b c8 48 ff 15 ba 6e 03 00 0f 1f
0x00007ffee9b5b3a0:   44 00 00 90 48 8b c7 48 8b 5c 24 30 48 8b 74 24
0x00007ffee9b5b3b0:   38 48 83 c4 20 5f c3 cc cc cc cc cc cc cc cc cc
0x00007ffee9b5b3c0:   48 89 5c 24 10 55 56 57 41 54 41 55 41 56 41 57
0x00007ffee9b5b3d0:   48 8d 6c 24 e0 48 81 ec 20 01 00 00 48 8b 05 cd
0x00007ffee9b5b3e0:   df 04 00 48 33 c4 48 89 45 18 49 8b f9 8b da 48
0x00007ffee9b5b3f0:   8b f1 45 33 e4 4d 85 c9 0f 84 5b 05 00 00 33 d2
0x00007ffee9b5b400:   45 8d 44 24 70 49 8b c9 e8 87 fc 02 00 8b d3 48
0x00007ffee9b5b410:   8b ce e8 29 ff ff ff 48 8b d8 48 89 44 24 70 48
0x00007ffee9b5b420:   85 c0 74 11 48 8b 00 48 8b cb 48 8b 40 08 ff 15
0x00007ffee9b5b430:   5c 6e 03 00 90 45 8a f4 4d 8b fc 4c 89 64 24 40
0x00007ffee9b5b440:   48 8b 03 4c 8d 44 24 40 48 8d 15 79 a5 03 00 48
0x00007ffee9b5b450:   8b cb 48 8b 00 ff 15 35 6e 03 00 41 bd 01 00 00
0x00007ffee9b5b460:   00 85 c0 78 4c 48 8b 06 44 39 a8 68 3e 00 00 0f
0x00007ffee9b5b470:   84 03 05 00 00 48 8b 4c 24 40 48 8b 01 48 8d 55
0x00007ffee9b5b480:   b0 48 8b 40 40 ff 15 05 6e 03 00 0f 10 00 0f 11
0x00007ffee9b5b490:   07 0f 10 48 10 0f 11 4f 10 0f 10 40 20 0f 11 47
0x00007ffee9b5b4a0:   20 44 89 67 60 44 8a 77 28 45 22 f5 4c 8b 7c 24
0x00007ffee9b5b4b0:   40 4c 89 64 24 38 48 8b 03 4c 8d 44 24 38 48 8d
0x00007ffee9b5b4c0:   15 03 b8 03 00 48 8b cb 48 8b 00 ff 15 bf 6d 03
0x00007ffee9b5b4d0:   00 48 8b 4c 24 38 85 c0 78 31 44 89 6f 60 48 8b
0x00007ffee9b5b4e0:   01 4c 8d 44 24 30 33 d2 48 8b 40 70 ff 15 9e 6d
0x00007ffee9b5b4f0:   03 00 85 c0 78 0a 44 84 6c 24 30 45 8a f5 75 03
0x00007ffee9b5b500:   45 8a f4 48 8b 4c 24 38 4c 8b f9 48 85 c9 75 0b
0x00007ffee9b5b510:   4c 39 64 24 40 0f 84 7c 04 00 00 45 84 f6 75 0f
0x00007ffee9b5b520:   66 44 89 67 66 44 88 67 65 4c 89 67 68 eb 64 48
0x00007ffee9b5b530:   8b 06 48 8b 48 28 48 8b 01 c7 44 24 20 04 00 00 


Stack slot to memory mapping:

stack at sp + 0 slots: 0x0 is null
stack at sp + 1 slots: 0x000001eb0c0e5398 points into unknown readable memory: 0x000001eb0c0e0f20 | 20 0f 0e 0c eb 01 00 00
stack at sp + 2 slots: 0x0 is null
stack at sp + 3 slots: 0x0 is null
stack at sp + 4 slots: 0x0000000100000000 is an unknown value
stack at sp + 5 slots: 0x0000000100000000 is an unknown value
stack at sp + 6 slots: 0x0000000100000000 is an unknown value
stack at sp + 7 slots: 0x0000ceaf7da1e234 is an unknown value


Compiled method (n/a) 3573308 3084     n 0       com.sun.prism.d3d.D3DSwapChain::nPresent (native)
 total in heap  [0x000001eb74a2e110,0x000001eb74a2e500] = 1008
 relocation     [0x000001eb74a2e270,0x000001eb74a2e2a8] = 56
 main code      [0x000001eb74a2e2c0,0x000001eb74a2e4f3] = 563
 stub code      [0x000001eb74a2e4f3,0x000001eb74a2e4f8] = 5
 oops           [0x000001eb74a2e4f8,0x000001eb74a2e500] = 8

[Constant Pool (empty)]

[MachCode]
[Entry Point]
  # {method} {0x000001eb0504dae8} 'nPresent' '(JJ)I' in 'com/sun/prism/d3d/D3DSwapChain'
  # parm0:    rdx:rdx   = long
  # parm1:    r8:r8     = long
  #           [sp+0x70]  (sp of caller)
  0x000001eb74a2e2c0: 448b 5208 | 49bb 0000 | 0000 0800 | 0000 4d03 | d349 3bc2 | 0f84 0600 

  0x000001eb74a2e2d8: ;   {runtime_call ic_miss_stub}
  0x000001eb74a2e2d8: 0000 e9a1 | 0493 ff90 
[Verified Entry Point]
  0x000001eb74a2e2e0: 8984 2400 | 80ff ff55 | 488b ec48 | 83ec 6090 | 4181 7f20 | 0100 0000 

  0x000001eb74a2e2f8: ;   {runtime_call StubRoutines (final stubs)}
  0x000001eb74a2e2f8: 7405 e861 | 6a91 ff4d | 8bc8 4c8b 

  0x000001eb74a2e304: ;   {oop(a 'java/lang/Class'{0x0000000706a1a6f0} = 'com/sun/prism/d3d/D3DSwapChain')}
  0x000001eb74a2e304: c249 bef0 | a6a1 0607 | 0000 004c | 8974 2450 | 4c8d 7424 | 5049 8bd6 

  0x000001eb74a2e31c: ;   {internal_word}
  0x000001eb74a2e31c: c5f8 7749 | ba1c e3a2 | 74eb 0100 | 004d 8997 | a003 0000 | 4989 a798 

  0x000001eb74a2e334: ;   {external_word}
  0x000001eb74a2e334: 0300 0049 | ba18 9a64 | cbfe 7f00 | 0041 803a | 000f 844e | 0000 0052 | 4150 4151 

  0x000001eb74a2e350: ;   {metadata({method} {0x000001eb0504dae8} 'nPresent' '(JJ)I' in 'com/sun/prism/d3d/D3DSwapChain')}
  0x000001eb74a2e350: 48ba e0da | 0405 eb01 | 0000 498b | cf48 83ec | 2040 f6c4 | 0f0f 8419 | 0000 0048 

  0x000001eb74a2e36c: ;   {runtime_call}
  0x000001eb74a2e36c: 83ec 0848 | b830 f10e | cbfe 7f00 | 00ff d048 | 83c4 08e9 | 0c00 0000 

  0x000001eb74a2e384: ;   {runtime_call}
  0x000001eb74a2e384: 48b8 30f1 | 0ecb fe7f | 0000 ffd0 | 4883 c420 | 4159 4158 | 5a49 8d8f | b803 0000 | 41c7 874c 
  0x000001eb74a2e3a4: 0400 0004 

  0x000001eb74a2e3a8: ;   {runtime_call}
  0x000001eb74a2e3a8: 0000 0048 | b8d0 42f1 | 0eff 7f00 | 00ff d0c5 | f877 41c7 | 874c 0400 | 0005 0000 | 00f0 8344 
  0x000001eb74a2e3c8: 24c0 0049 | 3baf 5004 | 0000 0f87 | 0e00 0000 | 4183 bf48 | 0400 0000 | 0f84 2b00 | 0000 c5f8 
  0x000001eb74a2e3e8: 7748 8945 | f849 8bcf | 4c8b e448 | 83ec 2048 

  0x000001eb74a2e3f8: ;   {runtime_call}
  0x000001eb74a2e3f8: 83e4 f048 | b810 8eda | cafe 7f00 | 00ff d049 | 8be4 4d33 | e448 8b45 | f841 c787 | 4c04 0000 
  0x000001eb74a2e418: 0800 0000 | 4183 bfc8 | 0400 0002 | 0f84 9c00 

  0x000001eb74a2e428: ;   {external_word}
  0x000001eb74a2e428: 0000 49ba | 189a 64cb | fe7f 0000 | 4180 3a00 | 0f84 4c00 | 0000 4889 

  0x000001eb74a2e440: ;   {metadata({method} {0x000001eb0504dae8} 'nPresent' '(JJ)I' in 'com/sun/prism/d3d/D3DSwapChain')}
  0x000001eb74a2e440: 45f8 48ba | e0da 0405 | eb01 0000 | 498b cf48 | 83ec 2040 | f6c4 0f0f | 8419 0000 | 0048 83ec 
  0x000001eb74a2e460: ;   {runtime_call}
  0x000001eb74a2e460: 0848 b830 | f10e cbfe | 7f00 00ff | d048 83c4 | 08e9 0c00 

  0x000001eb74a2e474: ;   {runtime_call}
  0x000001eb74a2e474: 0000 48b8 | 30f1 0ecb | fe7f 0000 | ffd0 4883 | c420 488b | 45f8 49c7 | 8798 0300 | 0000 0000 
  0x000001eb74a2e494: 0049 c787 | a003 0000 | 0000 0000 | c5f8 7749 | 8b8f 2804 | 0000 c781 | 0001 0000 | 0000 0000 
  0x000001eb74a2e4b4: c949 837f | 0800 0f85 | 0100 0000 

  0x000001eb74a2e4c0: ;   {runtime_call StubRoutines (initial stubs)}
  0x000001eb74a2e4c0: c3e9 3a2a | 8eff c5f8 | 7748 8945 | f84c 8be4 | 4883 ec20 | 4883 e4f0 

  0x000001eb74a2e4d8: ;   {runtime_call}
  0x000001eb74a2e4d8: 48b8 1029 | 0fcb fe7f | 0000 ffd0 | 498b e44d | 33e4 488b | 45f8 e937 | ffff fff4 | f4f4 f4f4 
[/MachCode]


Compiled method (c2) 3573313 3623   !   4       com.sun.javafx.tk.quantum.PresentingPainter::run (680 bytes)
 total in heap  [0x000001eb74bc3890,0x000001eb74bcae10] = 30080
 relocation     [0x000001eb74bc39f0,0x000001eb74bc40a0] = 1712
 constants      [0x000001eb74bc40a0,0x000001eb74bc40c0] = 32
 main code      [0x000001eb74bc40c0,0x000001eb74bc7db8] = 15608
 stub code      [0x000001eb74bc7db8,0x000001eb74bc8058] = 672
 oops           [0x000001eb74bc8058,0x000001eb74bc8088] = 48
 metadata       [0x000001eb74bc8088,0x000001eb74bc84e0] = 1112
 scopes data    [0x000001eb74bc84e0,0x000001eb74bc9718] = 4664
 scopes pcs     [0x000001eb74bc9718,0x000001eb74bca5f8] = 3808
 dependencies   [0x000001eb74bca5f8,0x000001eb74bca728] = 304
 handler table  [0x000001eb74bca728,0x000001eb74bcac20] = 1272
 nul chk table  [0x000001eb74bcac20,0x000001eb74bcae10] = 496


[Constant Pool]
             Address          hex4                    hex8      
  0x000001eb74bc40a0:   0x3f800000      0xf4f4f4f43f800000      
  0x000001eb74bc40a4:   0xf4f4f4f4                              
  0x000001eb74bc40a8:   0xf4f4f4f4      0xf4f4f4f4f4f4f4f4      
  0x000001eb74bc40ac:   0xf4f4f4f4                              
  0x000001eb74bc40b0:   0xf4f4f4f4      0xf4f4f4f4f4f4f4f4      
  0x000001eb74bc40b4:   0xf4f4f4f4                              
  0x000001eb74bc40b8:   0xf4f4f4f4      0xf4f4f4f4f4f4f4f4      
  0x000001eb74bc40bc:   0xf4f4f4f4                              

[MachCode]
[Entry Point]
  # {method} {0x000001eb04e6b788} 'run' '()V' in 'com/sun/javafx/tk/quantum/PresentingPainter'
  #           [sp+0x90]  (sp of caller)
  0x000001eb74bc40c0: ;   {no_reloc}
  0x000001eb74bc40c0: 448b 5208 | 49bb 0000 | 0000 0800 | 0000 4d03 | d349 3bc2 

  0x000001eb74bc40d4: ;   {runtime_call ic_miss_stub}
  0x000001eb74bc40d4: 0f85 a6a6 | 79ff 6690 | 0f1f 4000 
[Verified Entry Point]
  0x000001eb74bc40e0: 8984 2400 | 80ff ff55 | 4881 ec80 | 0000 0090 | 4181 7f20 | 0100 0000 | 0f85 b03c | 0000 488b 
  0x000001eb74bc4100: ;   {oop(a 'java/util/concurrent/locks/ReentrantLock'{0x0000000706a27c40})}
  0x000001eb74bc4100: ea49 ba40 | 7ca2 0607 | 0000 0041 | 8b5a 0c85 | db0f 84e1 | 1d00 0049 | 8d3c dc4d | 8b97 8003 
  0x000001eb74bc4120: 0000 498b | 3233 c041 | bb01 0000 | 00f0 450f | b15c dc10 | 410f 94c3 | 450f b6db | 4585 db0f 
  0x000001eb74bc4140: 84bc 1500 | 0041 807f | 4000 0f85 | f615 0000 | 4c8b d74c | 8bc6 49c1 | e803 4589 | 44dc 0c4c 
  0x000001eb74bc4160: 8bde 4d33 | da49 c1eb | 154d 85db | 741a 49c1 | ea09 48b9 | 0030 2f79 | eb01 0000 | 4903 ca80 
  0x000001eb74bc4180: 3902 0f85 | f615 0000 | 448b 4d28 

  0x000001eb74bc418c: ; implicit exception: dispatches to 0x000001eb74bc7090
  0x000001eb74bc418c: 478b 5ccc | 6445 85db | 0f84 5720 | 0000 478b | 54cc 684b | 8b4c d410 | 470f b644 | cc62 4585 
  0x000001eb74bc41ac: c00f 85d9 | 1f00 0047 | 8b44 cc2c | 4585 c00f | 8ee3 1f00 | 0047 8b5c | cc30 4585 | db0f 8eed 
  0x000001eb74bc41cc: 1f00 0044 | 895d 2044 | 895d 1844 | 8945 1444 | 8945 1c47 | 0fb6 44cc | 6045 85c0 | 0f84 1a20 
  0x000001eb74bc41ec: 0000 4889 | 7424 3048 | 896c 2428 | 470f b65c | cc61 4489 

  0x000001eb74bc4200: ;   {no_reloc}
  0x000001eb74bc4200: 4c24 3849 | b810 4ba5 | 0607 0000 

  0x000001eb74bc420c: ;   {oop([B{0x0000000706a54b10})}
  0x000001eb74bc420c: 0049 b910 | 4ba5 0607 | 0000 0049 | 83c1 104c | 894c 2440 | 4585 db0f | 84ec 0300 | 0045 33c0 
  0x000001eb74bc422c: ;   {oop([B{0x0000000706a54b10})}
  0x000001eb74bc422c: 488b d548 | bd10 4ba5 | 0607 0000 

  0x000001eb74bc4238: ;   {optimized virtual_call}
  0x000001eb74bc4238: 0066 90e8 

  0x000001eb74bc423c: ; ImmutableOopMap {rbp=Oop [64]=Derived_oop_rbp [40]=Oop [48]=Oop }
                      ;*invokevirtual paintImpl {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@37 (line 57)
  0x000001eb74bc423c: e097 0000 

  0x000001eb74bc4240: ;   {other}
  0x000001eb74bc4240: 0f1f 8400 | b009 0000 | 4c8b 5424 | 3045 8b5a | 3c43 8b5c | dc14 418b | 74dc 0c43 | 0fbe 6cdc 
  0x000001eb74bc4260: 10c4 6252 | f7d6 4183 | c2f1 4585 | d20f 8c45 | 2400 0085 | ed0f 85d9 | 2600 0085 | f60f 8695 
  0x000001eb74bc4280: 2400 0049 | 8d3c dc49 | 8d4c dc10 | 8039 510f | 8523 2400 | 0048 8b54 | 2440 41b8 | 0f00 0000 
  0x000001eb74bc42a0: 4533 c949 | ba40 4f34 | 74eb 0100 | 0041 ffd2 

  0x000001eb74bc42b0: ;   {other}
  0x000001eb74bc42b0: 0f1f 8400 | 0000 0000 | 85c0 0f8d | f823 0000 | 83c0 1083 | f80f 0f8d | 2014 0000 | 3bc6 0f83 
  0x000001eb74bc42d0: 6026 0000 | 83fe 0e0f | 8657 2600 | 0083 f80f | 0f83 4e26 | 0000 41ba | 0100 0000 

  0x000001eb74bc42ec: ;   {oop(a 'java/lang/NullPointerException'{0x0000000706370430})}
  0x000001eb74bc42ec: 49b8 3004 | 3706 0700 | 0000 448b | d84d 63cb | 420f be5c 

  0x000001eb74bc4300: ;   {oop([B{0x0000000706a54b10})}
  0x000001eb74bc4300: 0f10 48b9 | 104b a506 | 0700 0000 | 460f be4c | 0910 413b | d90f 8486 | 1300 0045 | 85db 0f8d 
  0x000001eb74bc4320: 9423 0000 

  0x000001eb74bc4324: ;   {oop(a 'java/lang/Class'{0x0000000706a1ad90} = 'com/sun/prism/impl/Disposer')}
  0x000001eb74bc4324: 458b da49 | ba90 ada1 | 0607 0000 | 0045 8b52 | 7045 85d2 | 0f84 9223 | 0000 4c89 | 4424 3844 
  0x000001eb74bc4344: 895c 2420 | 4f8d 1cd4 | 4c89 5c24 | 4844 8954 | 2440 488d | 5c24 7049 | 8b03 a802 | 0f85 2300 
  0x000001eb74bc4364: 0000 4883 | c801 4889 | 03f0 490f | b11b 0f84 | 3700 0000 | 482b c448 | 2507 f0ff | ff48 8903 
  0x000001eb74bc4384: e924 0000 | 004c 8bd0 | 4833 c0f0 | 4d0f b17a | 3e48 c703 | 0300 0000 | 7411 4c3b | f875 1549 
  0x000001eb74bc43a4: ff82 8600 | 0000 4833 | c075 0949 | ff87 5005 | 0000 33c0 | 0f85 7623 | 0000 448b | 5c24 4043 
  0x000001eb74bc43c4: 8b6c dc0c 

  0x000001eb74bc43c8: ; implicit exception: dispatches to 0x000001eb74bc7528
  0x000001eb74bc43c8: 458b 54ec 

  0x000001eb74bc43cc: ;   {metadata('java/lang/ref/ReferenceQueue')}
  0x000001eb74bc43cc: 0841 81fa | 701b 0600 | 0f85 7b23 | 0000 4d8d | 1cec 453b | 630c 0f85 | d018 0000 | 4c8b 5c24 
  0x000001eb74bc43ec: 4848 8d44 | 2470 4883 | 3800 0f84 | 7900 0000 | 4d8b 1341 | f6c2 020f | 8462 0000 | 0049 83ba 
  0x000001eb74bc440c: 8600 0000 | 0074 0949 | ff8a 8600 | 0000 eb4b | 498b 8296 | 0000 0049 | 0b82 8e00 | 0000 750a 
  0x000001eb74bc442c: 49c7 423e | 0000 0000 | eb3d 4983 | ba9e 0000 | 0000 7422 | 4833 c049 | c742 3e00 | 0000 00f0 
  0x000001eb74bc444c: 8304 2400 | 4983 ba9e | 0000 0000 | 750d f04d | 0fb1 7a3e | 7505 83c8 | 01eb 0ca8 | 00eb 084c 
  0x000001eb74bc446c: 8b10 f04d | 0fb1 1375 | 0a49 ff8f | 5005 0000 | 4533 d20f | 85f7 2200 

  0x000001eb74bc4484: ;   {oop(a 'java/lang/Class'{0x0000000706a1ad90} = 'com/sun/prism/impl/Disposer')}
  0x000001eb74bc4484: 0049 ba90 | ada1 0607 | 0000 0045 | 8b4a 7045 | 85c9 0f84 | 4c22 0000 | 4f8d 1ccc | 488d 5c24 
  0x000001eb74bc44a4: 7049 8b03 | a802 0f85 | 2300 0000 | 4883 c801 | 4889 03f0 | 490f b11b | 0f84 3700 | 0000 482b 
  0x000001eb74bc44c4: c448 2507 | f0ff ff48 | 8903 e924 | 0000 004c | 8bd0 4833 | c0f0 4d0f | b17a 3e48 | c703 0300 
  0x000001eb74bc44e4: 0000 7411 | 4c3b f875 | 1549 ff82 | 8600 0000 | 4833 c075 | 0949 ff87 | 5005 0000 | 33c0 0f85 
  0x000001eb74bc4504: 9922 0000 | 478b 54cc | 1443 8b6c | d410 85ed | 0f85 5a24 | 0000 488d | 4424 7048 | 8338 000f 
  0x000001eb74bc4524: 8479 0000 | 004d 8b13 | 41f6 c202 | 0f84 6200 | 0000 4983 | ba86 0000 | 0000 7409 | 49ff 8a86 
  0x000001eb74bc4544: 0000 00eb | 4b49 8b82 | 9600 0000 | 490b 828e | 0000 0075 | 0a49 c742 | 3e00 0000 | 00eb 3d49 
  0x000001eb74bc4564: 83ba 9e00 | 0000 0074 | 2248 33c0 | 49c7 423e | 0000 0000 | f083 0424 | 0049 83ba | 9e00 0000 
  0x000001eb74bc4584: ;   {no_reloc}
  0x000001eb74bc4584: 0075 0df0 | 4d0f b17a | 3e75 0583 | c801 eb0c | a800 eb08 | 4c8b 10f0 | 4d0f b113 | 750a 49ff 
  0x000001eb74bc45a4: 8f50 0500 | 0045 33d2 | 0f85 1b22 | 0000 4c8b | 4c24 2845 | 8b59 2847 | 8b54 dc6c 

  0x000001eb74bc45c0: ; implicit exception: dispatches to 0x000001eb74bc757c
  0x000001eb74bc45c0: 478b 5cd4 | 3845 85db | 0f84 3221 | 0000 4533 | c047 8744 | dc0c 418b | 6930 458b 

  0x000001eb74bc45dc: ;   {metadata('com/sun/prism/d3d/D3DResourceFactory')}
  0x000001eb74bc45dc: 5cec 0841 | 81fb 0068 | 0e00 0f85 | 0622 0000 

  0x000001eb74bc45ec: ;   {oop(a 'com/sun/prism/d3d/D3DVramPool'{0x0000000706a08910})}
  0x000001eb74bc45ec: 49ba 1089 | a006 0700 | 0000 458b | 4234 478b | 54c4 1845 | 85d2 0f84 | 420d 0000 | 4f8d 1cd4 
  0x000001eb74bc460c: 4f8d 0cc4 | e995 0c00 | 0048 85c9 | 0f84 471d | 0000 4f8b | 44d4 1044 | 8b4c 2438 | 4f8d 1ccc 
  0x000001eb74bc462c: 4b8d 14d4 | 4c89 5c24 

  0x000001eb74bc4634: ;   {oop([B{0x0000000706a54b10})}
  0x000001eb74bc4634: 2048 bd10 | 4ba5 0607 

  0x000001eb74bc463c: ;   {optimized virtual_call}
  0x000001eb74bc463c: 0000 00e8 

  0x000001eb74bc4640: ; ImmutableOopMap {rbp=Oop [64]=Derived_oop_rbp [32]=Oop [40]=Oop [48]=Oop [56]=NarrowOop }
                      ;*invokevirtual _begin {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.glass.ui.View::lock@9 (line 731)
                      ; - com.sun.prism.PresentableState::lock@11 (line 285)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@106 (line 65)
  0x000001eb74bc4640: 7cd7 e6ff 

  0x000001eb74bc4644: ;   {other}
  0x000001eb74bc4644: 0f1f 8400 | b40d 0001 | 448b 5424 | 3847 3b64 | d468 0f84 | b018 0000 | 4c8b 5424 | 2845 8b52 
  0x000001eb74bc4664: 3044 8b44 | 2438 4789 | 64c4 0c47 | 8b44 d408 

  0x000001eb74bc4674: ;   {metadata('com/sun/prism/d3d/D3DResourceFactory')}
  0x000001eb74bc4674: 4181 f800 | 680e 000f | 8517 1900 | 0049 c1e2 | 0345 0fb6 | 420c 4585 | c00f 8509 | 1d00 0045 
  0x000001eb74bc4694: 8b52 3044 | 8954 2438 

  0x000001eb74bc469c: ; implicit exception: dispatches to 0x000001eb74bc70a4
  0x000001eb74bc469c: 470f b654 | d420 4585 | d20f 850d | 1d00 0044 | 8b54 2438 | 4b8b 94d4 | 8000 0000 | 49c1 e203 
  0x000001eb74bc46bc: 4c89 5424 

  0x000001eb74bc46c0: ;   {static_call}
  0x000001eb74bc46c0: 2066 90e8 

  0x000001eb74bc46c4: ; ImmutableOopMap {rbp=Oop [64]=Derived_oop_rbp [32]=Oop [40]=Oop [48]=Oop [56]=NarrowOop }
                      ;*invokestatic nTestCooperativeLevel {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.d3d.D3DContext::testLostStateAndReset@13 (line 158)
                      ; - com.sun.prism.d3d.D3DResourceFactory::isDeviceReady@17 (line 120)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@136 (line 71)
  0x000001eb74bc46c4: 18db e6ff 

  0x000001eb74bc46c8: ;   {other}
  0x000001eb74bc46c8: 0f1f 8400 | 380e 0002 | 3d68 0876 | 880f 84f9 | 1c00 003d | 6908 7688 | 0f84 0a1d | 0000 3d70 
  0x000001eb74bc46e8: 0876 880f | 841b 1d00 | 003d 7408 | 7688 0f84 | 2c1d 0000 | 85c0 0f8c | 401d 0000 | 4c8b 5424 
  0x000001eb74bc4708: 2845 8b52 | 2c47 8b44 | d408 4c8b | 5c24 2845 

  0x000001eb74bc4718: ;   {metadata('com/sun/prism/d3d/D3DSwapChain')}
  0x000001eb74bc4718: 8b4b 2841 | 81f8 284a | 2200 0f85 | 8c18 0000 

  0x000001eb74bc4728: ; implicit exception: dispatches to 0x000001eb74bc70bc
  0x000001eb74bc4728: 478b 5ccc | 3c49 c1e2 | 034c 8954 | 2420 458b | 4220 478b | 54c4 1c45 | 3bda 0f85 | d81a 0000 
  0x000001eb74bc4748: 478b 54c4 | 2043 8b4c | cc40 413b | ca0f 85e9 | 1a00 004c | 8b54 2420 | c4c1 7a10 | 4218 c481 
  0x000001eb74bc4768: 7a10 54cc | 34c5 f82e | d00f 8aed | 1a00 000f | 85e7 1a00 | 00c4 c17a | 104a 1cc4 | 817a 1044 
  0x000001eb74bc4788: cc38 c5f8 | 2ec1 0f8a | cc1c 0000 | 0f85 c61c | 0000 478b | 54c4 3447 | 8b5c d41c | 4789 64d4 
  0x000001eb74bc47a8: 1443 ff44 | d40c 478b 

  0x000001eb74bc47b0: ;   {metadata('com/sun/prism/d3d/D3DTextureData')}
  0x000001eb74bc47b0: 54dc 0841 | 81fa 4862 | 2200 0f85 | 9425 0000 | 4f8d 14dc | 4d8b 5210 | 4d85 d20f | 84bf 1c00 
  0x000001eb74bc47d0: 004c 8b54 | 2420 458b | 5214 478b | 5cd4 1849 | 8bd0 48c1 | e203 4d8b | c349 c1e0 

  0x000001eb74bc47ec: ;   {static_call}
  0x000001eb74bc47ec: 0366 90e8 

  0x000001eb74bc47f0: ; ImmutableOopMap {rbp=Oop [64]=Derived_oop_rbp [32]=Oop [40]=Oop [48]=Oop }
                      ;*invokestatic create {reexecute=0 rethrow=0 return_oop=1}
                      ; - com.sun.prism.d3d.D3DSwapChain::createGraphics@8 (line 148)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@304 (line 88)
  0x000001eb74bc47f0: 8ce6 eeff 

  0x000001eb74bc47f4: ;   {other}
  0x000001eb74bc47f4: 0f1f 8400 | 640f 0003 | 4c8b 5424 | 20c4 c17a | 1042 18c4 | c17a 1052 | 1c44 8b50 

  0x000001eb74bc4810: ;   {metadata('com/sun/prism/d3d/D3DGraphics')}
  0x000001eb74bc4810: 0841 81fa | b06b 2200 | 0f85 b617 | 0000 4c8b 

  0x000001eb74bc4820: ;   {section_word}
  0x000001eb74bc4820: c0c5 f82e | 0577 f8ff | ff0f 8a65 | 1a00 000f | 855f 1a00 

  0x000001eb74bc4834: ;   {section_word}
  0x000001eb74bc4834: 00c5 f82e | 1563 f8ff | ff0f 8a75 | 1c00 000f | 856f 1c00 | 004c 8b54 | 2428 458b | 5228 478b 
  0x000001eb74bc4854: 54d4 6c44 | 8954 2438 | 488b 5424 

  0x000001eb74bc4860: ;   {optimized virtual_call}
  0x000001eb74bc4860: 2866 90e8 

  0x000001eb74bc4864: ; ImmutableOopMap {rbp=Oop [64]=Derived_oop_rbp [40]=Oop [48]=Oop [56]=NarrowOop }
                      ;*invokevirtual paintImpl {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@331 (line 92)
  0x000001eb74bc4864: b891 0000 

  0x000001eb74bc4868: ;   {other}
  0x000001eb74bc4868: 0f1f 8400 | d80f 0004 | 4c8b 5424 | 2845 8862 | 2445 8b52 | 2c47 8b5c 

  0x000001eb74bc4880: ;   {metadata('com/sun/prism/d3d/D3DSwapChain')}
  0x000001eb74bc4880: d408 4181 | fb28 4a22 | 000f 856d | 1700 0049 | c1e2 034c | 8954 2448 | 458b 5214 

  0x000001eb74bc489c: ; implicit exception: dispatches to 0x000001eb74bc7174
  0x000001eb74bc489c: 478b 5cd4 | 1844 895c | 243c 470f | b654 dc20 | 4585 d20f | 854b 1c00 | 0047 8b54 | dc2c 4489 
  0x000001eb74bc48bc: 5424 5043 | 8b7c d410 | 4f8d 14dc | 4c89 5424 | 2085 ff7e | 7144 8b5c | 2450 478b | 4cdc 1845 
  0x000001eb74bc48dc: 8bd3 438b | 4cd4 2047 | 8b5c d41c 

  0x000001eb74bc48e8: ; implicit exception: dispatches to 0x000001eb74bc73c4
  0x000001eb74bc48e8: 418b 6ccc | 0c85 ed0f | 8f0f 1f00 | 0041 8b6c | cc14 85ed | 0f8f 4e1f | 0000 498b | 94cc 8000 
  0x000001eb74bc4908: 0000 49c1 | e103 49c1 | e203 4d8b | c349 c1e0 

  0x000001eb74bc4918: ;   {oop([B{0x0000000706a54b10})}
  0x000001eb74bc4918: 0348 bd10 | 4ba5 0607 | 0000 004c | 8954 2458 

  0x000001eb74bc4928: ;   {static_call}
  0x000001eb74bc4928: 6666 90e8 

  0x000001eb74bc492c: ; ImmutableOopMap {rbp=Oop [64]=Derived_oop_rbp [32]=Oop [40]=Oop [48]=Oop [56]=NarrowOop [60]=NarrowOop [72]=Oop [80]=NarrowOop [88]=Oop }
                      ;*invokestatic nDrawIndexedQuads {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.d3d.D3DContext::renderQuads@7 (line 630)
                      ; - com.sun.prism.impl.BaseContext::drawQuads@8 (line 125)
                      ; - com.sun.prism.impl.VertexBuffer::flush@23 (line 98)
                      ; - com.sun.prism.impl.BaseContext::flushVertexBuffer@12 (line 107)
                      ; - com.sun.prism.d3d.D3DSwapChain::prepare@6 (line 60)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@355 (line 99)
  0x000001eb74bc492c: 3035 dbff 

  0x000001eb74bc4930: ;   {other}
  0x000001eb74bc4930: 0f1f 8400 | a010 0005 | 448b 5c24 | 5047 8964 | dc10 488b | 5424 484c | 8b44 2420 

  0x000001eb74bc494c: ;   {oop([B{0x0000000706a54b10})}
  0x000001eb74bc494c: 48bd 104b | a506 0700 

  0x000001eb74bc4954: ;   {static_call}
  0x000001eb74bc4954: 0000 90e8 

  0x000001eb74bc4958: ; ImmutableOopMap {rbp=Oop [64]=Derived_oop_rbp [32]=Oop [40]=Oop [48]=Oop [56]=NarrowOop [60]=NarrowOop [72]=Oop }
                      ;*invokestatic create {reexecute=0 rethrow=0 return_oop=1}
                      ; - com.sun.prism.d3d.D3DSwapChain::prepare@11 (line 61)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@355 (line 99)
  0x000001eb74bc4958: 24e5 eeff 

  0x000001eb74bc495c: ;   {other}
  0x000001eb74bc495c: 0f1f 8400 | cc10 0006 

  0x000001eb74bc4964: ; implicit exception: dispatches to 0x000001eb74bc71bc
  0x000001eb74bc4964: 448b 5808 

  0x000001eb74bc4968: ;   {metadata('com/sun/prism/d3d/D3DGraphics')}
  0x000001eb74bc4968: 4181 fbb0 | 6b22 000f | 85fb 2300 | 004c 8b54 | 2448 458b | 5a20 478b | 44dc 1c44 | 8944 2450 
  0x000001eb74bc4988: 458b 5214 

  0x000001eb74bc498c: ; implicit exception: dispatches to 0x000001eb74bc71ec
  0x000001eb74bc498c: 4b8b 54d4 | 1048 8944 | 2458 478b | 5cdc 2044 | 895c 2460 

  0x000001eb74bc49a0: ;   {static_call}
  0x000001eb74bc49a0: 6666 90e8 

  0x000001eb74bc49a4: ; ImmutableOopMap {rbp=Oop [64]=Derived_oop_rbp [32]=Oop [40]=Oop [48]=Oop [56]=NarrowOop [60]=NarrowOop [72]=Oop [88]=Oop }
                      ;*invokestatic nGetTextureWidth {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.d3d.D3DSwapChain::getPhysicalWidth@7 (line 98)
                      ; - com.sun.prism.d3d.D3DSwapChain::getContentWidth@1 (line 108)
                      ; - com.sun.prism.d3d.D3DSwapChain::prepare@43 (line 67)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@355 (line 99)
  0x000001eb74bc49a4: b8e9 dfff 

  0x000001eb74bc49a8: ;   {other}
  0x000001eb74bc49a8: 0f1f 8400 | 1811 0007 | 8944 2454 | 4c8b 5424 | 4845 8b5a | 144b 8b54 

  0x000001eb74bc49c0: ;   {static_call}
  0x000001eb74bc49c0: dc10 90e8 

  0x000001eb74bc49c4: ; ImmutableOopMap {rbp=Oop [64]=Derived_oop_rbp [32]=Oop [40]=Oop [48]=Oop [56]=NarrowOop [60]=NarrowOop [72]=Oop [88]=Oop }
                      ;*invokestatic nGetTextureHeight {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.d3d.D3DSwapChain::getPhysicalHeight@7 (line 103)
                      ; - com.sun.prism.d3d.D3DSwapChain::getContentHeight@1 (line 113)
                      ; - com.sun.prism.d3d.D3DSwapChain::prepare@49 (line 68)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@355 (line 99)
  0x000001eb74bc49c4: 98ed dfff 

  0x000001eb74bc49c8: ;   {other}
  0x000001eb74bc49c8: 0f1f 8400 | 3811 0008 | 8bd8 4c8b | 5424 4841 | 8b7a 2045 | 8b54 fc34 

  0x000001eb74bc49e0: ; implicit exception: dispatches to 0x000001eb74bc721c
  0x000001eb74bc49e0: 478b 44d4 | 0c45 85c0 | 0f8e 2e1b | 0000 478b | 54d4 1c47 | 8b44 d408 

  0x000001eb74bc49f8: ;   {metadata('com/sun/prism/d3d/D3DTextureData')}
  0x000001eb74bc49f8: 4181 f848 | 6222 000f | 8587 2300 | 0049 c1e2 | 0345 8b5a | 1c45 85db | 0f85 4a1b | 0000 4180 
  0x000001eb74bc4a18: 7f40 000f | 85b3 0d00 | 004c 8b54 

  0x000001eb74bc4a24: ;   {oop(a 'com/sun/prism/CompositeMode'{0x0000000706a1aa30})}
  0x000001eb74bc4a24: 2458 41c7 | 4244 4635 | d4e0 448b | 5424 54c4 | c16a 2ad2 | c5e2 2adb | 448b 5c24 | 50c4 c14a 
  0x000001eb74bc4a44: 2af3 448b | 5424 60c4 | c142 2afa | 4c8b 5424 

  0x000001eb74bc4a54: ;   {oop(a 'com/sun/prism/CompositeMode'{0x0000000706a1aa30})}
  0x000001eb74bc4a54: 5849 bb30 | aaa1 0607 | 0000 004d | 33da 49c1 | eb15 4d85 | db74 1a49 | c1ea 0948 | b900 302f 
  0x000001eb74bc4a74: 79eb 0100 | 0049 03ca | 8039 020f | 858b 0d00 | 004c 8bc7 | 49c1 e003 | 488b 5424 | 58c5 f857 
  0x000001eb74bc4a94: c0c5 f057 | c9c5 d857 | e4c5 d057 

  0x000001eb74bc4aa0: ;   {optimized virtual_call}
  0x000001eb74bc4aa0: ed66 90e8 

  0x000001eb74bc4aa4: ; ImmutableOopMap {rbp=Oop [64]=Derived_oop_rbp [32]=Oop [40]=Oop [48]=Oop [56]=NarrowOop [60]=NarrowOop [72]=Oop }
                      ;*invokevirtual drawTexture {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.d3d.D3DSwapChain::prepare@117 (line 74)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@355 (line 99)
  0x000001eb74bc4aa4: 1868 ddff 

  0x000001eb74bc4aa8: ;   {other}
  0x000001eb74bc4aa8: 0f1f 8400 | 1812 0009 | 448b 5424 | 3c47 0fb6 | 5cd4 2045 | 85db 0f85 | dc1a 0000 | 458b da47 
  0x000001eb74bc4ac8: 8b54 dc2c | 4489 5424 | 3c43 8b7c | d410 85ff | 7e6c 478b | 44d4 1847 | 8b4c d420 | 438b 5cd4 
  0x000001eb74bc4ae8: 1c43 8b6c | cc0c 85ed | 0f8f a61d | 0000 438b | 6ccc 1485 | ed0f 8fe5 | 1d00 004b | 8b94 cc80 
  0x000001eb74bc4b08: 0000 004d | 8bc8 49c1 | e103 4c8b | c349 c1e0 | 0349 c1e2 

  0x000001eb74bc4b1c: ;   {oop([B{0x0000000706a54b10})}
  0x000001eb74bc4b1c: 0348 bd10 | 4ba5 0607 | 0000 004c | 8954 2420 

  0x000001eb74bc4b2c: ;   {static_call}
  0x000001eb74bc4b2c: 6666 90e8 

  0x000001eb74bc4b30: ; ImmutableOopMap {rbp=Oop [64]=Derived_oop_rbp [32]=Oop [40]=Oop [48]=Oop [56]=NarrowOop [60]=NarrowOop [72]=Oop }
                      ;*invokestatic nDrawIndexedQuads {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.d3d.D3DContext::renderQuads@7 (line 630)
                      ; - com.sun.prism.impl.BaseContext::drawQuads@8 (line 125)
                      ; - com.sun.prism.impl.VertexBuffer::flush@23 (line 98)
                      ; - com.sun.prism.impl.BaseContext::flushVertexBuffer@12 (line 107)
                      ; - com.sun.prism.d3d.D3DSwapChain::prepare@121 (line 76)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@355 (line 99)
  0x000001eb74bc4b30: 2c33 dbff 

  0x000001eb74bc4b34: ;   {other}
  0x000001eb74bc4b34: 0f1f 8400 | a412 000a | 448b 5424 | 3c47 8964 | d410 4c8b | 5424 4845 | 8b5a 2047 | 8b5c dc34 
  0x000001eb74bc4b54: ; implicit exception: dispatches to 0x000001eb74bc7294
  0x000001eb74bc4b54: 478b 54dc | 0c45 85d2 | 0f8e 5a1a | 0000 41ff | ca47 8954 | dc0c 448b | 5c24 3845 | 85db 0f84 
  0x000001eb74bc4b74: ac13 0000 | 458b d349 | c1e2 034c | 8954 2420 | 4c8b 5c24 | 2048 8d5c | 2470 498b | 03a8 020f 
  0x000001eb74bc4b94: 8523 0000 | 0048 83c8 | 0148 8903 | f049 0fb1 | 1b0f 8437 | 0000 0048 | 2bc4 4825 | 07f0 ffff 
  0x000001eb74bc4bb4: 4889 03e9 | 2400 0000 | 4c8b d048 | 33c0 f04d | 0fb1 7a3e | 48c7 0303 | 0000 0074 | 114c 3bf8 
  0x000001eb74bc4bd4: 7515 49ff | 8286 0000 | 0048 33c0 | 7509 49ff | 8750 0500 | 0033 c00f | 8527 1400 | 0044 8b5c 
  0x000001eb74bc4bf4: 2438 430f | b65c dc0d | 4c8b 5c24 | 2048 8d44 | 2470 4883 | 3800 0f84 | 7900 0000 | 4d8b 1341 
  0x000001eb74bc4c14: f6c2 020f | 8462 0000 | 0049 83ba | 8600 0000 | 0074 0949 | ff8a 8600 | 0000 eb4b 

  0x000001eb74bc4c30: ;   {no_reloc}
  0x000001eb74bc4c30: 498b 8296 | 0000 0049 | 0b82 8e00 | 0000 750a | 49c7 423e | 0000 0000 | eb3d 4983 | ba9e 0000 
  0x000001eb74bc4c50: 0000 7422 | 4833 c049 | c742 3e00 | 0000 00f0 | 8304 2400 | 4983 ba9e | 0000 0000 | 750d f04d 
  0x000001eb74bc4c70: 0fb1 7a3e | 7505 83c8 | 01eb 0ca8 | 00eb 084c | 8b10 f04d | 0fb1 1375 | 0a49 ff8f | 5005 0000 
  0x000001eb74bc4c90: 4533 d20f | 85a4 1300 | 0085 db0f | 843f 1900 | 004c 8b54 | 2428 458b | 5a2c 478b 

  0x000001eb74bc4cac: ;   {metadata('com/sun/prism/d3d/D3DSwapChain')}
  0x000001eb74bc4cac: 54dc 0841 | 81fa 284a | 2200 0f85 | a613 0000 | 4f8d 14dc | 458b 5a14 

  0x000001eb74bc4cc4: ; implicit exception: dispatches to 0x000001eb74bc72c4
  0x000001eb74bc4cc4: 478b 54dc | 1844 8954 | 2438 470f | b644 d420 | 4585 c00f | 851f 1900 | 004b 8b94 | d480 0000 
  0x000001eb74bc4ce4: 004f 8b44 | dc10 49c1 | e203 4c89 

  0x000001eb74bc4cf0: ;   {oop([B{0x0000000706a54b10})}
  0x000001eb74bc4cf0: 5424 2048 | bd10 4ba5 | 0607 0000 

  0x000001eb74bc4cfc: ;   {static_call}
  0x000001eb74bc4cfc: 0066 90e8 

  0x000001eb74bc4d00: ; ImmutableOopMap {rbp=Oop [64]=Derived_oop_rbp [32]=Oop [40]=Oop [48]=Oop [56]=NarrowOop }
                      ;*invokestatic nPresent {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.d3d.D3DSwapChain::present@25 (line 87)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@451 (line 107)
  0x000001eb74bc4d00: dc95 e6ff 

  0x000001eb74bc4d04: ;   {other}
  0x000001eb74bc4d04: 0f1f 8400 | 7414 000b | 3d68 0876 | 880f 8401 | 1900 003d | 6908 7688 | 0f84 1219 | 0000 85c0 
  0x000001eb74bc4d24: 0f8c 2619 | 0000 4c8b | 5424 3045 | 8b52 3c43 | 8b5c d414 

  0x000001eb74bc4d38: ; implicit exception: dispatches to 0x000001eb74bc730c
  0x000001eb74bc4d38: 418b 7cdc | 0c47 0fbe | 54d4 10c4 | 622a f7c7 | 4183 c0f1 | 4585 c00f | 8ce7 1100 | 0045 85d2 
  0x000001eb74bc4d58: 0f85 a315 | 0000 85ff | 0f86 1a13 | 0000 498d | 34dc 498d | 4cdc 1080 | 3951 0f85 | c411 0000 
  0x000001eb74bc4d78: 488b 5424 | 4041 b80f | 0000 0045 | 33c9 49ba | 404f 3474 | eb01 0000 

  0x000001eb74bc4d90: ;   {other}
  0x000001eb74bc4d90: 41ff d20f | 1f84 0000 | 0000 0085 | c00f 8d99 | 1100 0083 | c010 83f8 | 0f0f 8dde | 0800 003b 
  0x000001eb74bc4db0: c70f 83b5 | 1300 0083 | ff0e 0f86 | ac13 0000 | 83f8 0f0f | 83a3 1300 | 0041 bb01 

  0x000001eb74bc4dcc: ;   {oop(a 'java/lang/NullPointerException'{0x0000000706370430})}
  0x000001eb74bc4dcc: 0000 0049 | b830 0437 | 0607 0000 | 0044 8bd0 | 4d63 ca42 | 0fbe 4c0e 

  0x000001eb74bc4de4: ;   {oop([B{0x0000000706a54b10})}
  0x000001eb74bc4de4: 1048 bb10 | 4ba5 0607 | 0000 0042 | 0fbe 5c0b | 103b cb0f | 8400 0700 | 0045 85d2 | 0f8d 3611 
  0x000001eb74bc4e04: 0000 418b 

  0x000001eb74bc4e08: ;   {oop(a 'java/lang/Class'{0x0000000706a1ad90} = 'com/sun/prism/impl/Disposer')}
  0x000001eb74bc4e08: cb49 ba90 | ada1 0607 | 0000 0045 | 8b5a 7045 | 85db 0f84 | 3411 0000 | 4c89 4424 | 3889 4c24 
  0x000001eb74bc4e28: 204f 8d14 | dc4c 8954 | 2448 4489 | 5c24 404c | 8b5c 2448 | 488d 5c24 | 7049 8b03 | a802 0f85 
  0x000001eb74bc4e48: 2300 0000 | 4883 c801 | 4889 03f0 | 490f b11b | 0f84 3700 | 0000 482b | c448 2507 | f0ff ff48 
  0x000001eb74bc4e68: 8903 e924 | 0000 004c | 8bd0 4833 | c0f0 4d0f | b17a 3e48 | c703 0300 | 0000 7411 | 4c3b f875 
  0x000001eb74bc4e88: 1549 ff82 | 8600 0000 | 4833 c075 | 0949 ff87 | 5005 0000 | 33c0 0f85 | f811 0000 | 448b 5424 
  0x000001eb74bc4ea8: 4047 8b5c | d40c 478b 

  0x000001eb74bc4eb0: ;   {metadata('java/lang/ref/ReferenceQueue')}
  0x000001eb74bc4eb0: 54dc 0841 | 81fa 701b | 0600 0f85 | fd11 0000 | 49c1 e303 | 453b 630c | 0f85 1f0b | 0000 4c8b 
  0x000001eb74bc4ed0: 5c24 4848 | 8d44 2470 | 4883 3800 | 0f84 7900 | 0000 4d8b | 1341 f6c2 | 020f 8462 | 0000 0049 
  0x000001eb74bc4ef0: 83ba 8600 | 0000 0074 | 0949 ff8a | 8600 0000 | eb4b 498b | 8296 0000 | 0049 0b82 | 8e00 0000 
  0x000001eb74bc4f10: 750a 49c7 | 423e 0000 | 0000 eb3d | 4983 ba9e | 0000 0000 | 7422 4833 | c049 c742 | 3e00 0000 
  0x000001eb74bc4f30: 00f0 8304 | 2400 4983 | ba9e 0000 | 0000 750d | f04d 0fb1 | 7a3e 7505 | 83c8 01eb | 0ca8 00eb 
  0x000001eb74bc4f50: 084c 8b10 | f04d 0fb1 | 1375 0a49 | ff8f 5005 | 0000 4533 | d20f 8579 

  0x000001eb74bc4f68: ;   {oop(a 'java/lang/Class'{0x0000000706a1ad90} = 'com/sun/prism/impl/Disposer')}
  0x000001eb74bc4f68: 1100 0049 | ba90 ada1 | 0607 0000 | 0041 8b6a | 7085 ed0f | 84eb 0f00 | 004d 8d04 | ec48 8d5c 
  0x000001eb74bc4f88: 2470 498b | 00a8 020f | 8523 0000 | 0048 83c8 | 0148 8903 | f049 0fb1 | 180f 8437 | 0000 0048 
  0x000001eb74bc4fa8: 2bc4 4825 | 07f0 ffff | 4889 03e9 | 2400 0000 | 4c8b d048 | 33c0 f04d | 0fb1 7a3e | 48c7 0303 
  0x000001eb74bc4fc8: 0000 0074 | 114c 3bf8 | 7515 49ff | 8286 0000 | 0048 33c0 | 7509 49ff | 8750 0500 | 0033 c00f 
  0x000001eb74bc4fe8: 851f 1100 | 0045 8b5c | ec14 478b | 5cdc 1045 | 85db 0f85 | 2413 0000 | 488d 4424 | 7048 8338 
  0x000001eb74bc5008: 000f 8479 | 0000 004d | 8b10 41f6 | c202 0f84 | 6200 0000 | 4983 ba86 | 0000 0000 | 7409 49ff 
  0x000001eb74bc5028: 8a86 0000 | 00eb 4b49 | 8b82 9600 | 0000 490b | 828e 0000 | 0075 0a49 | c742 3e00 | 0000 00eb 
  0x000001eb74bc5048: 3d49 83ba | 9e00 0000 | 0074 2248 | 33c0 49c7 | 423e 0000 | 0000 f083 | 0424 0049 | 83ba 9e00 
  0x000001eb74bc5068: ;   {no_reloc}
  0x000001eb74bc5068: 0000 0075 | 0df0 4d0f | b17a 3e75 | 0583 c801 | eb0c a800 | eb08 4c8b | 10f0 4d0f | b110 750a 
  0x000001eb74bc5088: 49ff 8f50 | 0500 0045 | 33d2 0f85 | 9a10 0000 | 4c8b 5c24 | 2845 8b53 | 2843 8b4c | d468 4d8b 
  0x000001eb74bc50a8: 54cc 104d | 85d2 0f84 | b815 0000 | 498b eb4d | 8b44 cc10 | 498d 14cc 

  0x000001eb74bc50c0: ;   {optimized virtual_call}
  0x000001eb74bc50c0: 6666 90e8 

  0x000001eb74bc50c4: ; ImmutableOopMap {rbp=Oop [48]=Oop [56]=Oop }
                      ;*invokevirtual _end {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.glass.ui.View::unlock@9 (line 742)
                      ; - com.sun.prism.PresentableState::unlock@11 (line 296)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@484 (line 120)
  0x000001eb74bc50c4: b899 79ff 

  0x000001eb74bc50c8: ;   {other}
  0x000001eb74bc50c8: 0f1f 8400 | 3818 000c | 448b 5d28 

  0x000001eb74bc50d4: ; implicit exception: dispatches to 0x000001eb74bc7374
  0x000001eb74bc50d4: 478b 54dc | 6c47 8b5c | d438 4585 | db0f 849d | 0e00 0045 | 33c0 4787 | 44dc 0c44 | 8b55 3047 
  0x000001eb74bc50f4: 8b44 d408 

  0x000001eb74bc50f8: ;   {metadata('com/sun/prism/d3d/D3DResourceFactory')}
  0x000001eb74bc50f8: 4181 f800 | 680e 000f | 8552 1000 

  0x000001eb74bc5104: ;   {oop(a 'com/sun/prism/d3d/D3DVramPool'{0x0000000706a08910})}
  0x000001eb74bc5104: 0049 ba10 | 89a0 0607 | 0000 0045 | 8b42 3447 | 8b54 c418 | 4585 d20f | 84da 0000 | 0049 c1e2 
  0x000001eb74bc5124: 034b 8d1c | c4eb 2f0f | 1f44 0000 | 41ff c345 | 8959 1441 | 8b5a 184d | 8b9f 5804 

  0x000001eb74bc5140: ; ImmutableOopMap {r10=Oop rbx=NarrowOop [48]=Oop [56]=Oop }
                      ;*goto {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.impl.BaseResourcePool::freeDisposalRequestedAndCheckResources@119 (line 302)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@523 (line 127)
                      ;   {poll}
  0x000001eb74bc5140: 0000 4185 | 0385 db0f | 84ae 0000 | 004d 8d04 | dc4d 8bda | 4d8b d049 | 8bdb 458b | 5a0c 4585 
  0x000001eb74bc5160: db0f 84bc | 0700 0043 | 8b7c dc0c | 4180 7f40 | 000f 8548 | 0300 0085 | ff0f 84ca | 0200 0045 
  0x000001eb74bc5180: 8b5c fc08 

  0x000001eb74bc5184: ;   {metadata('com/sun/prism/d3d/D3DTextureResource')}
  0x000001eb74bc5184: 4181 fb58 | 3722 000f | 8583 1c00 | 004d 8d0c | fc45 0fb6 | 591a 4585 | db0f 8506 | 0a00 0045 
  0x000001eb74bc51a4: 8b41 1c47 | 8b5c c408 

  0x000001eb74bc51ac: ;   {metadata('com/sun/prism/d3d/D3DTextureData')}
  0x000001eb74bc51ac: 4181 fb48 | 6222 000f | 859b 1c00 | 004f 8d1c | c44d 8b5b | 104d 85db | 0f84 060a | 0000 450f 
  0x000001eb74bc51cc: b659 1845 | 85db 0f85 | 5fff ffff | 458b 590c | 4585 db0f | 8f23 0a00 | 0045 8b59 | 1441 81fb 
  0x000001eb74bc51ec: 0004 0000 | 0f8c 3aff | ffff e93c 

  0x000001eb74bc51f8: ;   {oop(a 'java/util/concurrent/locks/ReentrantLock'{0x0000000706a27c40})}
  0x000001eb74bc51f8: ffff ff49 | ba40 7ca2 | 0607 0000 | 0041 8b7a | 0c45 8b5c | fc10 458b | 44fc 0c4d | 8bd0 49c1 
  0x000001eb74bc5218: e203 4c8b | 4c24 304d | 3bd1 0f85 | 7414 0000 | 418d 5bff | 4183 fb01 | 0f85 0805 | 0000 4180 
  0x000001eb74bc5238: 7f40 000f | 8541 0600 | 0045 8964 | fc0c 448b | 5424 2041 | 895c fc10 | f083 4424 | c000 4585 
  0x000001eb74bc5258: d274 0e45 | 8b54 fc14 | 4585 d20f | 85e1 0200 | 0048 81c4 | 8000 0000 

  0x000001eb74bc5270: ;   {poll_return}
  0x000001eb74bc5270: 5d49 3ba7 | 5004 0000 | 0f87 1a2b | 0000 c390 | 41ff c245 | 8950 1441 | 8b7b 184d | 8b97 5804 
  0x000001eb74bc5290: ; ImmutableOopMap {r11=Oop rdi=NarrowOop [48]=Oop [56]=Oop }
                      ;*goto {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.impl.BaseResourcePool::freeDisposalRequestedAndCheckResources@119 (line 302)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@90 (line 127)
                      ;   {poll}
  0x000001eb74bc5290: 0000 4185 | 0285 ff0f | 84ad 0000 | 004d 8d04 | fc4d 8bd3 | 4d8b d84d | 8bca 458b | 530c 4585 
  0x000001eb74bc52b0: d20f 8482 | 0600 0043 | 8b5c d40c | 4180 7f40 | 000f 8588 | 0300 0085 | db0f 840a | 0300 0045 
  0x000001eb74bc52d0: 8b54 dc08 

  0x000001eb74bc52d4: ;   {metadata('com/sun/prism/d3d/D3DTextureResource')}
  0x000001eb74bc52d4: 4181 fa58 | 3722 000f | 8553 1b00 | 004d 8d04 | dc45 0fb6 | 501a 4585 | d20f 8586 | 0b00 0045 
  0x000001eb74bc52f4: 8b50 1c43 | 8b4c d408 

  0x000001eb74bc52fc: ;   {metadata('com/sun/prism/d3d/D3DTextureData')}
  0x000001eb74bc52fc: 81f9 4862 | 2200 0f85 | 701b 0000 | 49c1 e203 | 4d8b 5210 | 4d85 d20f | 8487 0b00 | 0045 0fb6 
  0x000001eb74bc531c: 5018 4585 | d20f 8560 | ffff ff45 | 8b50 0c45 | 85d2 0f8f | a40b 0000 | 458b 5014 | 4181 fa00 
  0x000001eb74bc533c: 0400 000f | 8c3b ffff | ffe9 3dff 

  0x000001eb74bc5348: ;   {oop(a 'java/util/concurrent/locks/ReentrantLock'{0x0000000706a27c40})}
  0x000001eb74bc5348: ffff 49ba | 407c a206 | 0700 0000 | 418b 7a0c 

  0x000001eb74bc5358: ; implicit exception: dispatches to 0x000001eb74bc75a8
  0x000001eb74bc5358: 458b 5cfc | 1041 8b6c | fc0c 4c8b | d549 c1e2 | 034c 8b44 | 2430 4d3b | d00f 853e | 1600 0041 
  0x000001eb74bc5378: 8d5b ff41 | 83fb 010f | 8547 0400 | 0041 807f | 4000 0f85 | 3205 0000 | 4589 64fc | 0c44 8b5c 
  0x000001eb74bc5398: 2420 4189 | 5cfc 10f0 | 8344 24c0 | 0045 85db | 0f84 bbfe | ffff 458b | 54fc 1445 | 85d2 0f84 
  0x000001eb74bc53b8: adfe ffff | 478b 44d4 | 1445 85c0 | 0f84 9ffe | ffff 478b | 5cc4 0c45 | 85db 0f84 | 91fe ffff 
  0x000001eb74bc53d8: 438b 44c4 | 0c44 8bd0 | 4183 e2fe | f047 0fb1 | 54c4 0c40 | 0f94 c540 | 0fb6 ed85 | ed0f 84d1 
  0x000001eb74bc53f8: 1600 0043 | 8b6c c418 

  0x000001eb74bc5400: ; implicit exception: dispatches to 0x000001eb74bc75fc
  0x000001eb74bc5400: 458b 54ec | 0849 bb00 | 0000 0008 | 0000 004d | 03da 4d8b 

  0x000001eb74bc5414: ;   {metadata('java/lang/BaseVirtualThread')}
  0x000001eb74bc5414: 5340 49bb | d07f 0400 | 0800 0000 | 4d3b d30f | 848f 1600 | 004d 8d04 

  0x000001eb74bc542c: ;   {oop(a 'jdk/internal/misc/Unsafe'{0x0000000706359d58})}
  0x000001eb74bc542c: ec48 ba58 | 9d35 0607 

  0x000001eb74bc5434: ;   {optimized virtual_call}
  0x000001eb74bc5434: 0000 00e8 

  0x000001eb74bc5438: ; ImmutableOopMap {}
                      ;*invokevirtual unpark {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.concurrent.locks.LockSupport::unpark@22 (line 181)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::signalNext@30 (line 645)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::release@12 (line 1060)
                      ; - java.util.concurrent.locks.ReentrantLock::unlock@5 (line 494)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@98 (line 130)
  0x000001eb74bc5438: 4496 79ff 

  0x000001eb74bc543c: ;   {other}
  0x000001eb74bc543c: 0f1f 8400 | ac1b 000f | e920 feff | ff48 895c | 2428 4d8b | 4210 498b 

  0x000001eb74bc5454: ;   {oop(a 'com/sun/prism/d3d/D3DVramPool'{0x0000000706a08910})}
  0x000001eb74bc5454: ea48 ba10 | 89a0 0607 

  0x000001eb74bc545c: ;   {optimized virtual_call}
  0x000001eb74bc545c: 0000 00e8 

  0x000001eb74bc5460: ; ImmutableOopMap {rbp=Oop [40]=Oop [48]=Oop [56]=Oop }
                      ;*invokevirtual recordFree {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.BaseResourcePool::freeDisposalRequestedAndCheckResources@39 (line 284)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@523 (line 127)
  0x000001eb74bc5460: 1c96 79ff 

  0x000001eb74bc5464: ;   {other}
  0x000001eb74bc5464: 0f1f 8400 | d41b 0010 | 4180 7f40 | 000f 85e6 | 0400 004c | 8b44 2428 | 8b5d 1841 | 8958 184d 
  0x000001eb74bc5484: 8bd0 4c8b | db49 c1e3 | 034d 33da | 49c1 eb15 | 4d85 db74 | 1e85 db74 | 1a49 c1ea | 0948 b900 
  0x000001eb74bc54a4: 302f 79eb | 0100 0049 | 03ca 8039 | 020f 85e2 | 0400 004d | 8bd0 e97c | fcff ff85 | ff0f 84b0 
  0x000001eb74bc54c4: fcff ff4d | 8b5f 2848 | 8bcf 48c1 | e103 4d85 | db0f 84ab | 0600 0048 | 8bf3 498b | da4d 8b57 
  0x000001eb74bc54e4: 384b 894c | 1af8 4983 | c3f8 4d89 | 5f28 4c8b | d348 8bde | e97a fcff | ff41 b90f | 0000 0044 
  0x000001eb74bc5504: 2bc8 33db | 83f8 0f44 | 0f4f cb41 | 81f9 e803 | 0000 bbe8 | 0300 0044 | 0f47 cb44 | 03c8 41ff 
  0x000001eb74bc5524: c245 3bd1 | 0f8c aef8 | ffff 4d8b | 8f58 0400 

  0x000001eb74bc5534: ; ImmutableOopMap {r8=Oop rsi=Oop [40]=Oop [48]=Oop }
                      ;*goto {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) jdk.internal.util.ArraysSupport::mismatch@98 (line 401)
                      ; - java.lang.String::startsWith@70 (line 2297)
                      ; - java.lang.String::startsWith@3 (line 2327)
                      ; - com.sun.prism.impl.Disposer::cleanUp@8 (line 131)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@473 (line 117)
                      ;   {poll}
  0x000001eb74bc5534: 0041 8501 | 4183 fa0f | 0f8d 7803 | 0000 418b | c2e9 8ff8 | ffff 478b | 4cd4 1445 | 85c9 0f84 
  0x000001eb74bc5554: 11fd ffff | 478b 5ccc | 0c45 85db | 0f84 03fd | ffff 438b | 44cc 0c44 | 8bd0 4183 | e2fe f047 
  0x000001eb74bc5574: 0fb1 54cc | 0c40 0f94 | c540 0fb6 | ed85 ed0f | 8416 1500 | 0043 8b6c | cc18 458b | 54ec 0849 
  0x000001eb74bc5594: bb00 0000 | 0008 0000 | 004d 03da | 4d8b 5340 

  0x000001eb74bc55a4: ;   {metadata('java/lang/BaseVirtualThread')}
  0x000001eb74bc55a4: 49bb d07f | 0400 0800 | 0000 4d3b | d30f 84b0 | 1400 004d 

  0x000001eb74bc55b8: ;   {oop(a 'jdk/internal/misc/Unsafe'{0x0000000706359d58})}
  0x000001eb74bc55b8: 8d04 ec48 | ba58 9d35 | 0607 0000 

  0x000001eb74bc55c4: ;   {optimized virtual_call}
  0x000001eb74bc55c4: 0066 90e8 

  0x000001eb74bc55c8: ; ImmutableOopMap {}
                      ;*invokevirtual unpark {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.concurrent.locks.LockSupport::unpark@22 (line 181)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::signalNext@30 (line 645)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::release@12 (line 1060)
                      ; - java.util.concurrent.locks.ReentrantLock::unlock@5 (line 494)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@531 (line 130)
  0x000001eb74bc55c8: b494 79ff 

  0x000001eb74bc55cc: ;   {other}
  0x000001eb74bc55cc: 0f1f 8400 | 3c1d 0012 | e990 fcff | ff4c 894c | 2428 4d8b | 4310 498b 

  0x000001eb74bc55e4: ;   {oop(a 'com/sun/prism/d3d/D3DVramPool'{0x0000000706a08910})}
  0x000001eb74bc55e4: eb48 ba10 | 89a0 0607 

  0x000001eb74bc55ec: ;   {optimized virtual_call}
  0x000001eb74bc55ec: 0000 00e8 

  0x000001eb74bc55f0: ; ImmutableOopMap {rbp=Oop [40]=Oop [48]=Oop [56]=Oop }
                      ;*invokevirtual recordFree {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.BaseResourcePool::freeDisposalRequestedAndCheckResources@39 (line 284)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@90 (line 127)
  0x000001eb74bc55f0: 8c94 79ff 

  0x000001eb74bc55f4: ;   {other}
  0x000001eb74bc55f4: 0f1f 8400 | 641d 0013 | 4180 7f40 | 000f 8521 | 0600 004c | 8b44 2428 | 8b7d 1841 | 8978 184d 
  0x000001eb74bc5614: 8bd0 4c8b | df49 c1e3 | 034d 33da | 49c1 eb15 | 4d85 db74 | 1e85 ff74 | 1a49 c1ea | 0948 b900 
  0x000001eb74bc5634: 302f 79eb | 0100 0049 | 03ca 8039 | 020f 851d | 0600 004d | 8bd8 e93c | fcff ff85 | db0f 8470 
  0x000001eb74bc5654: fcff ff4d | 8b57 2848 | 8bcb 48c1 | e103 4d85 | d20f 84eb | 0700 0049 | 8bf1 498b | fb4d 8b5f 
  0x000001eb74bc5674: 384b 894c | 13f8 4983 | c2f8 4d89 | 5728 4c8b | df4c 8bce | e93a fcff | ffb9 0100 

  0x000001eb74bc5690: ;   {oop(a 'java/lang/NullPointerException'{0x0000000706370430})}
  0x000001eb74bc5690: 0000 49b8 | 3004 3706 | 0700 0000 | e968 f7ff | ffb9 0f00 | 0000 2bc8 | 4533 c983 | f80f 410f 
  0x000001eb74bc56b0: 4fc9 81f9 | e803 0000 | 41b9 e803 | 0000 410f | 47c9 03c8 | 41ff c344 | 3bd9 0f8c | 29ec ffff 
  0x000001eb74bc56d0: 4d8b 8f58 

  0x000001eb74bc56d4: ; ImmutableOopMap {r8=Oop rdi=Oop [40]=Oop [48]=Oop }
                      ;*goto {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) jdk.internal.util.ArraysSupport::mismatch@98 (line 401)
                      ; - java.lang.String::startsWith@70 (line 2297)
                      ; - java.lang.String::startsWith@3 (line 2327)
                      ; - com.sun.prism.impl.Disposer::cleanUp@8 (line 131)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@40 (line 117)
                      ;   {poll}
  0x000001eb74bc56d4: 0400 0041 | 8501 4183 | fb0f 0f8d | 3702 0000 | 418b c3e9 | 0aec ffff | 41bb 0100 

  0x000001eb74bc56f0: ;   {oop(a 'java/lang/NullPointerException'{0x0000000706370430})}
  0x000001eb74bc56f0: 0000 49b8 | 3004 3706 | 0700 0000 | e926 ecff | ff45 8b5c | dc0c 4d8b | d349 c1e2 | 034c 3bd6 
  0x000001eb74bc5710: 0f84 e401 | 0000 4889 | 7424 2048 | 8bd7 41b8 | 0100 0000 

  0x000001eb74bc5724: ;   {optimized virtual_call}
  0x000001eb74bc5724: 6666 90e8 

  0x000001eb74bc5728: ; ImmutableOopMap {rbp=Oop [32]=Oop }
                      ;*invokevirtual acquire {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.concurrent.locks.ReentrantLock$Sync::lock@9 (line 153)
                      ; - java.util.concurrent.locks.ReentrantLock::lock@4 (line 322)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@3 (line 45)
  0x000001eb74bc5728: 5493 79ff 

  0x000001eb74bc572c: ;   {other}
  0x000001eb74bc572c: 0f1f 8400 | 9c1e 0015 | 488b 7424 | 20e9 4aea | ffff 4533 | d2e9 05fb | ffff 458b | 54dc 0c45 
  0x000001eb74bc574c: 85d2 0f84 | fce9 ffff | 4d8b 5f28 | 498b ca48 | c1e1 034d | 85db 0f84 | 6c0a 0000 | 4d8b 5738 
  0x000001eb74bc576c: 4b89 4c1a | f849 83c3 | f84d 895f | 28e9 d2e9 | ffff 4d8b | 5748 4d8b | 5f58 f083 | 4424 c000 
  0x000001eb74bc578c: 8039 000f | 84f3 e9ff | ff44 8821 | 4d85 d275 | 1d49 8bd7 | 49ba 40f6 | cdca fe7f | 0000 41ff 
  0x000001eb74bc57ac: ;   {other}
  0x000001eb74bc57ac: d20f 1f84 | 0000 0000 | 00e9 cee9 | ffff 4b89 | 4c13 f849 | 83c2 f84d | 8957 48e9 | bce9 ffff 
  0x000001eb74bc57cc: 4533 dbe9 | c6fb ffff | 4c8b 5424 | 5845 8b52 | 4445 85d2 | 0f84 3bf2 | ffff 4d8b | 5f28 498b 
  0x000001eb74bc57ec: ca48 c1e1 | 034d 85db | 0f84 ea0a | 0000 4d8b | 5738 4b89 | 4c1a f849 | 83c3 f84d | 895f 28e9 
  0x000001eb74bc580c: 11f2 ffff | 4d8b 5758 | 4d8b 5f48 | f083 4424 | c000 8039 | 0074 5144 | 8821 4d85 | db74 0f4b 
  0x000001eb74bc582c: 894c 1af8 | 4983 c3f8 | 4d89 5f48 | eb3a c4c1 | 797e fdc5 | f97e f7c5 | f97e dec5 | f97e d349 
  0x000001eb74bc584c: 8bd7 49ba | 40f6 cdca | fe7f 0000 

  0x000001eb74bc5858: ;   {other}
  0x000001eb74bc5858: 41ff d20f | 1f84 0000 | 0000 00c5 | f96e d3c5 | f96e dec5 | f96e f7c4 | c179 6efd | 4c8b 5424 
  0x000001eb74bc5878: 4841 8b7a | 20e9 03f2 | ffff 458b | 5cfc 0c45 | 85db 0f84 | b1f9 ffff | 4d8b 5728 | 498b cb48 
  0x000001eb74bc5898: c1e1 034d | 85d2 0f84 | a40a 0000 | 4d8b 5f38 | 4b89 4c13 | f849 83c2 | f84d 8957 | 28e9 87f9 
  0x000001eb74bc58b8: ffff 418b | cbe9 47f5 | ffff 458b | 5cfc 0c45 | 85db 0f84 | c0fa ffff | 4d8b 5728 | 498b cb48 
  0x000001eb74bc58d8: c1e1 034d | 85d2 0f84 | b410 0000 | 4d8b 5f38 | 4b89 4c13 | f849 83c2 | f84d 8957 | 28e9 96fa 
  0x000001eb74bc58f8: ffff 458b | 54dc 1041 | ffc2 4585 | d20f 8cd9 | 1100 0045 | 8954 dc10 | f083 4424 | c000 e96d 
  0x000001eb74bc5918: e8ff ff45 | 8bda e904 | eaff ff41 | 807f 4000 | 0f85 9e10 | 0000 488b | 5c24 3844 | 8963 14eb 
  0x000001eb74bc5938: 1441 807f | 4000 0f85 | e710 0000 | 488b 5c24 | 3844 8963 | 1448 8bd3 | 4881 c480 | 0000 005d 
  0x000001eb74bc5958: ;   {runtime_call _rethrow_Java}
  0x000001eb74bc5958: e923 1486 | ff4c 8b44 | 2428 458b | 5818 4585 | db0f 840d | fbff ff4d | 8b57 2849 | 8bcb 48c1 
  0x000001eb74bc5978: e103 4d85 | d20f 8485 | 1000 004d | 8b5f 384b | 894c 13f8 | 4983 c2f8 | 4d89 5728 | e9e3 faff 
  0x000001eb74bc5998: ff4d 8b57 | 484d 8b5f | 58f0 8344 | 24c0 0080 | 3900 0f84 | 07fb ffff | 4488 214d | 85d2 7523 
  0x000001eb74bc59b8: 498b f849 | 8bd7 49ba | 40f6 cdca | fe7f 0000 

  0x000001eb74bc59c8: ;   {other}
  0x000001eb74bc59c8: 41ff d20f | 1f84 0000 | 0000 004c | 8bc7 e9dc | faff ff4b | 894c 13f8 | 4983 c2f8 | 4d89 5748 
  0x000001eb74bc59e8: e9ca faff | ff45 8b53 | 1845 85d2 | 0f84 0211 | 0000 498b | eb4b 8d14 

  0x000001eb74bc5a00: ;   {optimized virtual_call}
  0x000001eb74bc5a00: d466 90e8 

  0x000001eb74bc5a04: ; ImmutableOopMap {rbp=Oop [40]=Oop [48]=Oop [56]=Oop [64]=NarrowOop [72]=Oop }
                      ;*invokevirtual lock {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.lang.ref.ReferenceQueue::poll@13 (line 182)
                      ; - com.sun.prism.impl.Disposer::disposeUnreachables@4 (line 173)
                      ; - com.sun.prism.impl.Disposer::cleanUp@26 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@473 (line 117)
  0x000001eb74bc5a04: 7890 79ff 

  0x000001eb74bc5a08: ;   {other}
  0x000001eb74bc5a08: 0f1f 8400 | 7821 0016 

  0x000001eb74bc5a10: ;   {optimized virtual_call}
  0x000001eb74bc5a10: 488b d5e8 

  0x000001eb74bc5a14: ; ImmutableOopMap {rbp=Oop [40]=Oop [48]=Oop [56]=Oop [64]=NarrowOop [72]=Oop }
                      ;*invokevirtual poll0 {reexecute=0 rethrow=0 return_oop=1}
                      ; - java.lang.ref.ReferenceQueue::poll@17 (line 184)
                      ; - com.sun.prism.impl.Disposer::disposeUnreachables@4 (line 173)
                      ; - com.sun.prism.impl.Disposer::cleanUp@26 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@473 (line 117)
  0x000001eb74bc5a14: 6890 79ff 

  0x000001eb74bc5a18: ;   {other}
  0x000001eb74bc5a18: 0f1f 8400 | 8821 0017 | 4889 4424 | 5044 8b5d | 1845 85db | 0f84 f210 | 0000 4b8d | 14dc 488b 
  0x000001eb74bc5a38: ;   {optimized virtual_call}
  0x000001eb74bc5a38: 6c24 28e8 

  0x000001eb74bc5a3c: ; ImmutableOopMap {rbp=Oop [40]=Oop [48]=Oop [56]=Oop [64]=NarrowOop [72]=Oop [80]=Oop }
                      ;*invokevirtual unlock {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.lang.ref.ReferenceQueue::poll@25 (line 186)
                      ; - com.sun.prism.impl.Disposer::disposeUnreachables@4 (line 173)
                      ; - com.sun.prism.impl.Disposer::cleanUp@26 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@473 (line 117)
  0x000001eb74bc5a3c: 4090 79ff 

  0x000001eb74bc5a40: ;   {other}
  0x000001eb74bc5a40: 0f1f 8400 | b021 0018 | 4c8b 5424 | 504d 85d2 | 0f84 78f4 | ffff 498b | ea0f 1f80 | 0000 0000 
  0x000001eb74bc5a60: 448b 5d08 

  0x000001eb74bc5a64: ;   {metadata('java/lang/ref/PhantomReference')}
  0x000001eb74bc5a64: 4181 fbd0 | 6d04 000f | 855c 1100 | 004c 8bd5 | 4c89 5424 | 5049 8bd2 | 488b 6c24 

  0x000001eb74bc5a80: ;   {optimized virtual_call}
  0x000001eb74bc5a80: 2866 90e8 

  0x000001eb74bc5a84: ; ImmutableOopMap {rbp=Oop [40]=Oop [48]=Oop [56]=Oop [64]=NarrowOop [72]=Oop [80]=Oop }
                      ;*invokevirtual clear0 {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.lang.ref.Reference::clear@1 (line 398)
                      ; - com.sun.prism.impl.Disposer::disposeUnreachables@16 (line 175)
                      ; - com.sun.prism.impl.Disposer::cleanUp@26 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@473 (line 117)
  0x000001eb74bc5a84: f88f 79ff 

  0x000001eb74bc5a88: ;   {other}
  0x000001eb74bc5a88: 0f1f 8400 | f821 0019 | 448b 5c24 | 4043 8b6c | dc10 458b 

  0x000001eb74bc5a9c: ;   {metadata('java/util/Hashtable')}
  0x000001eb74bc5a9c: 5cec 0841 | 81fb 888d | 0400 0f85 | 4811 0000 | 498d 14ec | 4c8b 4424 | 5048 8b6c 

  0x000001eb74bc5ab8: ;   {optimized virtual_call}
  0x000001eb74bc5ab8: 2428 90e8 

  0x000001eb74bc5abc: ; ImmutableOopMap {rbp=Oop [40]=Oop [48]=Oop [56]=Oop [64]=NarrowOop [72]=Oop }
                      ;*invokevirtual remove {reexecute=0 rethrow=0 return_oop=1}
                      ; - com.sun.prism.impl.Disposer::disposeUnreachables@24 (line 176)
                      ; - com.sun.prism.impl.Disposer::cleanUp@26 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@473 (line 117)
  0x000001eb74bc5abc: c08f 79ff 

  0x000001eb74bc5ac0: ;   {other}
  0x000001eb74bc5ac0: 0f1f 8400 | 3022 001a 

  0x000001eb74bc5ac8: ; implicit exception: dispatches to 0x000001eb74bc779c
  0x000001eb74bc5ac8: 448b 5008 

  0x000001eb74bc5acc: ;   {metadata('com/sun/prism/d3d/D3DTextureData')}
  0x000001eb74bc5acc: 4181 fa48 | 6222 000f | 85f3 1200 | 0048 8bd0 

  0x000001eb74bc5adc: ;   {optimized virtual_call}
  0x000001eb74bc5adc: 6666 90e8 

  0x000001eb74bc5ae0: ; ImmutableOopMap {rbp=Oop [40]=Oop [48]=Oop [56]=Oop [64]=NarrowOop [72]=Oop }
                      ;*invokeinterface dispose {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.Disposer::disposeUnreachables@32 (line 177)
                      ; - com.sun.prism.impl.Disposer::cleanUp@26 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@473 (line 117)
  0x000001eb74bc5ae0: 9c8f 79ff 

  0x000001eb74bc5ae4: ;   {other}
  0x000001eb74bc5ae4: 0f1f 8400 | 5422 001b | 448b 5c24 | 4043 8b6c | dc0c 458b 

  0x000001eb74bc5af8: ;   {metadata('java/lang/ref/ReferenceQueue')}
  0x000001eb74bc5af8: 54ec 0841 | 81fa 701b | 0600 0f85 | 1411 0000 | 4d8d 1cec | 453b 630c | 0f84 b8f3 | ffff 458b 
  0x000001eb74bc5b18: 5318 4585 | d20f 8499 | 1100 0049 | 8beb 4b8d 

  0x000001eb74bc5b28: ;   {optimized virtual_call}
  0x000001eb74bc5b28: 14d4 90e8 

  0x000001eb74bc5b2c: ; ImmutableOopMap {rbp=Oop [40]=Oop [48]=Oop [56]=Oop [64]=NarrowOop [72]=Oop }
                      ;*invokevirtual lock {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.lang.ref.ReferenceQueue::poll@13 (line 182)
                      ; - com.sun.prism.impl.Disposer::disposeUnreachables@4 (line 173)
                      ; - com.sun.prism.impl.Disposer::cleanUp@26 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@473 (line 117)
  0x000001eb74bc5b2c: 508f 79ff 

  0x000001eb74bc5b30: ;   {other}
  0x000001eb74bc5b30: 0f1f 8400 | a022 001c 

  0x000001eb74bc5b38: ;   {optimized virtual_call}
  0x000001eb74bc5b38: 488b d5e8 

  0x000001eb74bc5b3c: ; ImmutableOopMap {rbp=Oop [40]=Oop [48]=Oop [56]=Oop [64]=NarrowOop [72]=Oop }
                      ;*invokevirtual poll0 {reexecute=0 rethrow=0 return_oop=1}
                      ; - java.lang.ref.ReferenceQueue::poll@17 (line 184)
                      ; - com.sun.prism.impl.Disposer::disposeUnreachables@4 (line 173)
                      ; - com.sun.prism.impl.Disposer::cleanUp@26 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@473 (line 117)
  0x000001eb74bc5b3c: 408f 79ff 

  0x000001eb74bc5b40: ;   {other}
  0x000001eb74bc5b40: 0f1f 8400 | b022 001d | 4889 4424 | 5044 8b5d | 1845 85db | 0f84 8a11 | 0000 4b8d | 14dc 488b 
  0x000001eb74bc5b60: ;   {optimized virtual_call}
  0x000001eb74bc5b60: 6c24 28e8 

  0x000001eb74bc5b64: ; ImmutableOopMap {rbp=Oop [40]=Oop [48]=Oop [56]=Oop [64]=NarrowOop [72]=Oop [80]=Oop }
                      ;*invokevirtual unlock {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.lang.ref.ReferenceQueue::poll@25 (line 186)
                      ; - com.sun.prism.impl.Disposer::disposeUnreachables@4 (line 173)
                      ; - com.sun.prism.impl.Disposer::cleanUp@26 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@473 (line 117)
  0x000001eb74bc5b64: 188f 79ff 

  0x000001eb74bc5b68: ;   {other}
  0x000001eb74bc5b68: 0f1f 8400 | d822 001e | 4c8b 5424 | 504d 85d2 | 0f84 50f3 | ffff 498b | eae9 dafe | ffff 488b 
  0x000001eb74bc5b88: f349 8bda | 498b d749 | ba60 f6cd | cafe 7f00 | 0041 ffd2 

  0x000001eb74bc5b9c: ;   {other}
  0x000001eb74bc5b9c: 0f1f 8400 | 0000 0000 | e949 f9ff | ffba 45ff | ffff 488b | eb4c 8954 | 2420 4c89 | 4c24 3044 
  0x000001eb74bc5bbc: 895c 2438 

  0x000001eb74bc5bc0: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc5bc0: 6666 90e8 

  0x000001eb74bc5bc4: ; ImmutableOopMap {rbp=Oop [32]=Oop [48]=Oop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.impl.ManagedResource::_isgone@10 (line 36)
                      ; - com.sun.prism.impl.BaseResourcePool::freeDisposalRequestedAndCheckResources@27 (line 283)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@523 (line 127)
  0x000001eb74bc5bc4: 38ea 79ff 

  0x000001eb74bc5bc8: ;   {other}
  0x000001eb74bc5bc8: 0f1f 8400 | 3823 001f | 4533 c04d | 3bd8 bdff | ffff ff7c | 0840 0f95 | c540 0fb6 | edba 45ff 
  0x000001eb74bc5be8: ffff 4889 | 5c24 204c | 8954 2428 | 4c89 4c24 

  0x000001eb74bc5bf8: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc5bf8: 3066 90e8 

  0x000001eb74bc5bfc: ; ImmutableOopMap {[32]=Oop [40]=Oop [48]=Oop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.d3d.D3DTextureResource::isValid@19 (line 46)
                      ; - com.sun.prism.impl.ManagedResource::_isgone@30 (line 42)
                      ; - com.sun.prism.impl.BaseResourcePool::freeDisposalRequestedAndCheckResources@27 (line 283)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@523 (line 127)
  0x000001eb74bc5bfc: 00ea 79ff 

  0x000001eb74bc5c00: ;   {other}
  0x000001eb74bc5c00: 0f1f 8400 | 7023 0020 | ba45 ffff | ff49 8bea | 4c89 4c24 | 2044 895c 

  0x000001eb74bc5c18: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc5c18: 2428 90e8 

  0x000001eb74bc5c1c: ; ImmutableOopMap {rbp=Oop [32]=Oop }
                      ;*ifle {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.impl.ManagedResource::isLocked@4 (line 87)
                      ; - com.sun.prism.impl.BaseResourcePool::freeDisposalRequestedAndCheckResources@68 (line 289)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@523 (line 127)
  0x000001eb74bc5c1c: e0e9 79ff 

  0x000001eb74bc5c20: ;   {other}
  0x000001eb74bc5c20: 0f1f 8400 | 9023 0021 | 4c8b 4424 | 2845 8b58 | 1845 85db | 0f84 d2f9 | ffff 4d8b | 5728 498b 
  0x000001eb74bc5c40: cb48 c1e1 | 034d 85d2 | 0f84 2e0e | 0000 4d8b | 5f38 4b89 | 4c13 f849 | 83c2 f84d | 8957 28e9 
  0x000001eb74bc5c60: a8f9 ffff | 4d8b 5748 | 4d8b 5f58 | f083 4424 | c000 8039 | 000f 84cc | f9ff ff44 | 8821 4d85 
  0x000001eb74bc5c80: d275 2349 | 8bd8 498b | d749 ba40 | f6cd cafe | 7f00 0041 

  0x000001eb74bc5c94: ;   {other}
  0x000001eb74bc5c94: ffd2 0f1f | 8400 0000 | 0000 4c8b | c3e9 a1f9 | ffff 4b89 | 4c13 f849 | 83c2 f84d | 8957 48e9 
  0x000001eb74bc5cb4: 8ff9 ffff | 458b 5318 | 4585 d20f | 84a0 0e00 | 0049 8beb | 4b8d 14d4 

  0x000001eb74bc5ccc: ;   {optimized virtual_call}
  0x000001eb74bc5ccc: 6666 90e8 

  0x000001eb74bc5cd0: ; ImmutableOopMap {rbp=Oop [40]=Oop [48]=Oop [56]=Oop [64]=NarrowOop [72]=Oop }
                      ;*invokevirtual lock {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.lang.ref.ReferenceQueue::poll@13 (line 182)
                      ; - com.sun.prism.impl.Disposer::disposeUnreachables@4 (line 173)
                      ; - com.sun.prism.impl.Disposer::cleanUp@26 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@40 (line 117)
  0x000001eb74bc5cd0: ac8d 79ff 

  0x000001eb74bc5cd4: ;   {other}
  0x000001eb74bc5cd4: 0f1f 8400 | 4424 0022 

  0x000001eb74bc5cdc: ;   {optimized virtual_call}
  0x000001eb74bc5cdc: 488b d5e8 

  0x000001eb74bc5ce0: ; ImmutableOopMap {rbp=Oop [40]=Oop [48]=Oop [56]=Oop [64]=NarrowOop [72]=Oop }
                      ;*invokevirtual poll0 {reexecute=0 rethrow=0 return_oop=1}
                      ; - java.lang.ref.ReferenceQueue::poll@17 (line 184)
                      ; - com.sun.prism.impl.Disposer::disposeUnreachables@4 (line 173)
                      ; - com.sun.prism.impl.Disposer::cleanUp@26 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@40 (line 117)
  0x000001eb74bc5ce0: 9c8d 79ff 

  0x000001eb74bc5ce4: ;   {other}
  0x000001eb74bc5ce4: 0f1f 8400 | 5424 0023 | 4889 4424 | 5044 8b5d | 1845 85db | 0f84 8e0e | 0000 4b8d | 14dc 488b 
  0x000001eb74bc5d04: ;   {optimized virtual_call}
  0x000001eb74bc5d04: 6c24 28e8 

  0x000001eb74bc5d08: ; ImmutableOopMap {rbp=Oop [40]=Oop [48]=Oop [56]=Oop [64]=NarrowOop [72]=Oop [80]=Oop }
                      ;*invokevirtual unlock {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.lang.ref.ReferenceQueue::poll@25 (line 186)
                      ; - com.sun.prism.impl.Disposer::disposeUnreachables@4 (line 173)
                      ; - com.sun.prism.impl.Disposer::cleanUp@26 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@40 (line 117)
  0x000001eb74bc5d08: 748d 79ff 

  0x000001eb74bc5d0c: ;   {other}
  0x000001eb74bc5d0c: 0f1f 8400 | 7c24 0024 | 4c8b 5424 | 504d 85d2 | 0f84 c6e6 | ffff 498b | ea66 6666 | 0f1f 8400 
  0x000001eb74bc5d2c: 0000 0000 | 448b 5d08 

  0x000001eb74bc5d34: ;   {metadata('java/lang/ref/PhantomReference')}
  0x000001eb74bc5d34: 4181 fbd0 | 6d04 000f | 85ff 0e00 | 004c 8bd5 | 4c89 5424 | 5049 8bd2 | 488b 6c24 

  0x000001eb74bc5d50: ;   {optimized virtual_call}
  0x000001eb74bc5d50: 2866 90e8 

  0x000001eb74bc5d54: ; ImmutableOopMap {rbp=Oop [40]=Oop [48]=Oop [56]=Oop [64]=NarrowOop [72]=Oop [80]=Oop }
                      ;*invokevirtual clear0 {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.lang.ref.Reference::clear@1 (line 398)
                      ; - com.sun.prism.impl.Disposer::disposeUnreachables@16 (line 175)
                      ; - com.sun.prism.impl.Disposer::cleanUp@26 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@40 (line 117)
  0x000001eb74bc5d54: 288d 79ff 

  0x000001eb74bc5d58: ;   {other}
  0x000001eb74bc5d58: 0f1f 8400 | c824 0025 | 448b 5424 | 4043 8b6c | d410 458b 

  0x000001eb74bc5d6c: ;   {metadata('java/util/Hashtable')}
  0x000001eb74bc5d6c: 5cec 0841 | 81fb 888d | 0400 0f85 | ec0e 0000 | 498d 14ec | 4c8b 4424 | 5048 8b6c 

  0x000001eb74bc5d88: ;   {optimized virtual_call}
  0x000001eb74bc5d88: 2428 90e8 

  0x000001eb74bc5d8c: ; ImmutableOopMap {rbp=Oop [40]=Oop [48]=Oop [56]=Oop [64]=NarrowOop [72]=Oop }
                      ;*invokevirtual remove {reexecute=0 rethrow=0 return_oop=1}
                      ; - com.sun.prism.impl.Disposer::disposeUnreachables@24 (line 176)
                      ; - com.sun.prism.impl.Disposer::cleanUp@26 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@40 (line 117)
  0x000001eb74bc5d8c: f08c 79ff 

  0x000001eb74bc5d90: ;   {other}
  0x000001eb74bc5d90: 0f1f 8400 | 0025 0026 

  0x000001eb74bc5d98: ; implicit exception: dispatches to 0x000001eb74bc77f4
  0x000001eb74bc5d98: 448b 5008 

  0x000001eb74bc5d9c: ;   {metadata('com/sun/prism/d3d/D3DTextureData')}
  0x000001eb74bc5d9c: 4181 fa48 | 6222 000f | 8547 1000 | 0048 8bd0 

  0x000001eb74bc5dac: ;   {optimized virtual_call}
  0x000001eb74bc5dac: 6666 90e8 

  0x000001eb74bc5db0: ; ImmutableOopMap {rbp=Oop [40]=Oop [48]=Oop [56]=Oop [64]=NarrowOop [72]=Oop }
                      ;*invokeinterface dispose {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.Disposer::disposeUnreachables@32 (line 177)
                      ; - com.sun.prism.impl.Disposer::cleanUp@26 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@40 (line 117)
  0x000001eb74bc5db0: cc8c 79ff 

  0x000001eb74bc5db4: ;   {other}
  0x000001eb74bc5db4: 0f1f 8400 | 2425 0027 | 448b 5424 | 4043 8b6c | d40c 458b 

  0x000001eb74bc5dc8: ;   {metadata('java/lang/ref/ReferenceQueue')}
  0x000001eb74bc5dc8: 54ec 0841 | 81fa 701b | 0600 0f85 | b80e 0000 | 4d8d 1cec | 453b 630c | 0f84 02e6 | ffff 458b 
  0x000001eb74bc5de8: 5318 4585 | d20f 8415 | 0f00 0049 | 8beb 4b8d 

  0x000001eb74bc5df8: ;   {optimized virtual_call}
  0x000001eb74bc5df8: 14d4 90e8 

  0x000001eb74bc5dfc: ; ImmutableOopMap {rbp=Oop [40]=Oop [48]=Oop [56]=Oop [64]=NarrowOop [72]=Oop }
                      ;*invokevirtual lock {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.lang.ref.ReferenceQueue::poll@13 (line 182)
                      ; - com.sun.prism.impl.Disposer::disposeUnreachables@4 (line 173)
                      ; - com.sun.prism.impl.Disposer::cleanUp@26 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@40 (line 117)
  0x000001eb74bc5dfc: 808c 79ff 

  0x000001eb74bc5e00: ;   {other}
  0x000001eb74bc5e00: 0f1f 8400 | 7025 0028 

  0x000001eb74bc5e08: ;   {optimized virtual_call}
  0x000001eb74bc5e08: 488b d5e8 

  0x000001eb74bc5e0c: ; ImmutableOopMap {rbp=Oop [40]=Oop [48]=Oop [56]=Oop [64]=NarrowOop [72]=Oop }
                      ;*invokevirtual poll0 {reexecute=0 rethrow=0 return_oop=1}
                      ; - java.lang.ref.ReferenceQueue::poll@17 (line 184)
                      ; - com.sun.prism.impl.Disposer::disposeUnreachables@4 (line 173)
                      ; - com.sun.prism.impl.Disposer::cleanUp@26 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@40 (line 117)
  0x000001eb74bc5e0c: 708c 79ff 

  0x000001eb74bc5e10: ;   {other}
  0x000001eb74bc5e10: 0f1f 8400 | 8025 0029 | 4889 4424 | 5044 8b5d | 1845 85db | 0f84 060f | 0000 4b8d | 14dc 488b 
  0x000001eb74bc5e30: ;   {optimized virtual_call}
  0x000001eb74bc5e30: 6c24 28e8 

  0x000001eb74bc5e34: ; ImmutableOopMap {rbp=Oop [40]=Oop [48]=Oop [56]=Oop [64]=NarrowOop [72]=Oop [80]=Oop }
                      ;*invokevirtual unlock {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.lang.ref.ReferenceQueue::poll@25 (line 186)
                      ; - com.sun.prism.impl.Disposer::disposeUnreachables@4 (line 173)
                      ; - com.sun.prism.impl.Disposer::cleanUp@26 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@40 (line 117)
  0x000001eb74bc5e34: 488c 79ff 

  0x000001eb74bc5e38: ;   {other}
  0x000001eb74bc5e38: 0f1f 8400 | a825 002a | 4c8b 5424 | 504d 85d2 | 0f84 9ae5 | ffff 498b | eae9 dafe | ffff 498b 
  0x000001eb74bc5e58: f149 8bfb | 498b d749 | ba60 f6cd | cafe 7f00 | 0041 ffd2 

  0x000001eb74bc5e6c: ;   {other}
  0x000001eb74bc5e6c: 0f1f 8400 | 0000 0000 | e909 f8ff | ffba 45ff | ffff 498b | e94c 895c | 2420 4c89 | 4424 3044 
  0x000001eb74bc5e8c: 8954 2438 

  0x000001eb74bc5e90: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc5e90: 6666 90e8 

  0x000001eb74bc5e94: ; ImmutableOopMap {rbp=Oop [32]=Oop [48]=Oop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.impl.ManagedResource::_isgone@10 (line 36)
                      ; - com.sun.prism.impl.BaseResourcePool::freeDisposalRequestedAndCheckResources@27 (line 283)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@90 (line 127)
  0x000001eb74bc5e94: 68e7 79ff 

  0x000001eb74bc5e98: ;   {other}
  0x000001eb74bc5e98: 0f1f 8400 | 0826 002b | 33c9 4c3b | d1bd ffff | ffff 7c08 | 400f 95c5 | 400f b6ed | ba45 ffff 
  0x000001eb74bc5eb8: ff4c 894c | 2420 4c89 | 5c24 284c | 8944 2430 

  0x000001eb74bc5ec8: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc5ec8: 6666 90e8 

  0x000001eb74bc5ecc: ; ImmutableOopMap {[32]=Oop [40]=Oop [48]=Oop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.d3d.D3DTextureResource::isValid@19 (line 46)
                      ; - com.sun.prism.impl.ManagedResource::_isgone@30 (line 42)
                      ; - com.sun.prism.impl.BaseResourcePool::freeDisposalRequestedAndCheckResources@27 (line 283)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@90 (line 127)
  0x000001eb74bc5ecc: 30e7 79ff 

  0x000001eb74bc5ed0: ;   {other}
  0x000001eb74bc5ed0: 0f1f 8400 | 4026 002c | ba45 ffff | ff49 8beb | 4c89 4424 | 2044 8954 

  0x000001eb74bc5ee8: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc5ee8: 2428 90e8 

  0x000001eb74bc5eec: ; ImmutableOopMap {rbp=Oop [32]=Oop }
                      ;*ifle {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.impl.ManagedResource::isLocked@4 (line 87)
                      ; - com.sun.prism.impl.BaseResourcePool::freeDisposalRequestedAndCheckResources@68 (line 289)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@90 (line 127)
  0x000001eb74bc5eec: 10e7 79ff 

  0x000001eb74bc5ef0: ;   {other}
  0x000001eb74bc5ef0: 0f1f 8400 | 6026 002d | baf6 ffff 

  0x000001eb74bc5efc: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc5efc: ff66 90e8 

  0x000001eb74bc5f00: ; ImmutableOopMap {rbp=Oop }
                      ;*invokevirtual lock {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.concurrent.locks.ReentrantLock::lock@4 (line 322)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@3 (line 45)
  0x000001eb74bc5f00: fce6 79ff 

  0x000001eb74bc5f04: ;   {other}
  0x000001eb74bc5f04: 0f1f 8400 | 7426 002e | baf6 ffff | ff48 8b6c 

  0x000001eb74bc5f14: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc5f14: 2428 90e8 

  0x000001eb74bc5f18: ; ImmutableOopMap {rbp=Oop }
                      ;*invokevirtual getNativeFrameBuffer {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.PresentableState::lock@19 (line 286)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@106 (line 65)
  0x000001eb74bc5f18: e4e6 79ff 

  0x000001eb74bc5f1c: ;   {other}
  0x000001eb74bc5f1c: 0f1f 8400 | 8c26 002f | ba5e ffff | ff48 8b6c 

  0x000001eb74bc5f2c: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc5f2c: 2428 90e8 

  0x000001eb74bc5f30: ; ImmutableOopMap {rbp=Oop }
                      ;*invokevirtual getDoPresent {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@441 (line 106)
  0x000001eb74bc5f30: cce6 79ff 

  0x000001eb74bc5f34: ;   {other}
  0x000001eb74bc5f34: 0f1f 8400 | a426 0030 | ba45 ffff | ff48 8b6c 

  0x000001eb74bc5f44: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc5f44: 2428 90e8 

  0x000001eb74bc5f48: ; ImmutableOopMap {rbp=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.impl.Disposer::cleanUp@11 (line 131)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@473 (line 117)
  0x000001eb74bc5f48: b4e6 79ff 

  0x000001eb74bc5f4c: ;   {other}
  0x000001eb74bc5f4c: 0f1f 8400 | bc26 0031 | baf6 ffff | ff48 8b6c 

  0x000001eb74bc5f5c: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc5f5c: 2428 90e8 

  0x000001eb74bc5f60: ; ImmutableOopMap {rbp=Oop }
                      ;*invokevirtual disposeUnreachables {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.Disposer::cleanUp@26 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@473 (line 117)
  0x000001eb74bc5f60: 9ce6 79ff 

  0x000001eb74bc5f64: ;   {other}
  0x000001eb74bc5f64: 0f1f 8400 | d426 0032 | baf6 ffff | ff48 8b6c 

  0x000001eb74bc5f74: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc5f74: 2428 90e8 

  0x000001eb74bc5f78: ; ImmutableOopMap {rbp=Oop }
                      ;*invokevirtual processDisposalQueue {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.Disposer::cleanUp@32 (line 136)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@473 (line 117)
  0x000001eb74bc5f78: 84e6 79ff 

  0x000001eb74bc5f7c: ;   {other}
  0x000001eb74bc5f7c: 0f1f 8400 | ec26 0033 | baf6 ffff 

  0x000001eb74bc5f88: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc5f88: ff66 90e8 

  0x000001eb74bc5f8c: ; ImmutableOopMap {rbp=Oop }
                      ;*invokevirtual getAndSet {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.GlassScene::setPainting@5 (line 293)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@502 (line 124)
  0x000001eb74bc5f8c: 70e6 79ff 

  0x000001eb74bc5f90: ;   {other}
  0x000001eb74bc5f90: 0f1f 8400 | 0027 0034 | bade ffff | ff48 8b6c | 2428 4489 

  0x000001eb74bc5fa4: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc5fa4: 5424 20e8 

  0x000001eb74bc5fa8: ; ImmutableOopMap {rbp=Oop [32]=NarrowOop }
                      ;*invokeinterface isDeviceReady {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@136 (line 71)
  0x000001eb74bc5fa8: 54e6 79ff 

  0x000001eb74bc5fac: ;   {other}
  0x000001eb74bc5fac: 0f1f 8400 | 1c27 0035 | bade ffff | ff49 8beb | 4489 5424 | 2044 894c 

  0x000001eb74bc5fc4: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc5fc4: 2424 90e8 

  0x000001eb74bc5fc8: ; ImmutableOopMap {rbp=Oop [32]=NarrowOop [36]=NarrowOop }
                      ;*invokeinterface lockResources {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@236 (line 77)
  0x000001eb74bc5fc8: 34e6 79ff 

  0x000001eb74bc5fcc: ;   {other}
  0x000001eb74bc5fcc: 0f1f 8400 | 3c27 0036 | bade ffff | ff48 8b6c | 2428 4889 | 4424 28c5 | fa11 4424 | 30c5 fa11 
  0x000001eb74bc5fec: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc5fec: 5424 34e8 

  0x000001eb74bc5ff0: ; ImmutableOopMap {rbp=Oop [40]=Oop }
                      ;*invokeinterface scale {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.d3d.D3DSwapChain::createGraphics@21 (line 149)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@304 (line 88)
  0x000001eb74bc5ff0: 0ce6 79ff 

  0x000001eb74bc5ff4: ;   {other}
  0x000001eb74bc5ff4: 0f1f 8400 | 6427 0037 | bade ffff | ff48 8b6c | 2428 4489 

  0x000001eb74bc6008: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc6008: 5424 24e8 

  0x000001eb74bc600c: ; ImmutableOopMap {rbp=Oop [36]=NarrowOop [56]=NarrowOop }
                      ;*invokeinterface prepare {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@355 (line 99)
  0x000001eb74bc600c: f0e5 79ff 

  0x000001eb74bc6010: ;   {other}
  0x000001eb74bc6010: 0f1f 8400 | 8027 0038 | 498b d34c | 8d44 2470 

  0x000001eb74bc6020: ;   {oop([B{0x0000000706a54b10})}
  0x000001eb74bc6020: 48bd 104b | a506 0700 

  0x000001eb74bc6028: ;   {runtime_call _complete_monitor_locking_Java}
  0x000001eb74bc6028: 0000 90e8 

  0x000001eb74bc602c: ; ImmutableOopMap {rbp=Oop [64]=Derived_oop_rbp [32]=Oop [40]=Oop [48]=Oop [56]=NarrowOop }
                      ;*synchronization entry
                      ; - com.sun.javafx.tk.quantum.GlassScene::getDoPresent@-1 (line 337)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@441 (line 106)
  0x000001eb74bc602c: 505c 86ff 

  0x000001eb74bc6030: ;   {other}
  0x000001eb74bc6030: 0f1f 8400 | a027 0039 | e9b4 ebff | ff49 8bcb | 488d 5424 | 704d 8bc7 | 49ba 50df | 0ecb fe7f 
  0x000001eb74bc6050: 0000 41ff 

  0x000001eb74bc6054: ;   {other}
  0x000001eb74bc6054: d20f 1f84 | 0000 0000 | 00e9 37ec | ffff bade | ffff ff48 | 8b6c 2428 | 4489 5c24 

  0x000001eb74bc6070: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc6070: 2066 90e8 

  0x000001eb74bc6074: ; ImmutableOopMap {rbp=Oop [32]=NarrowOop }
                      ;*invokeinterface present {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@451 (line 107)
  0x000001eb74bc6074: 88e5 79ff 

  0x000001eb74bc6078: ;   {other}
  0x000001eb74bc6078: 0f1f 8400 | e827 003a | bae4 ffff | ff48 8b6c | 2428 895c 

  0x000001eb74bc608c: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc608c: 2424 90e8 

  0x000001eb74bc6090: ; ImmutableOopMap {rbp=Oop [36]=NarrowOop }
                      ;*baload {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.internal.util.ArraysSupport::mismatch@12 (line 389)
                      ; - java.lang.String::startsWith@70 (line 2297)
                      ; - java.lang.String::startsWith@3 (line 2327)
                      ; - com.sun.prism.impl.Disposer::cleanUp@8 (line 131)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@473 (line 117)
  0x000001eb74bc6090: 6ce5 79ff 

  0x000001eb74bc6094: ;   {other}
  0x000001eb74bc6094: 0f1f 8400 | 0428 003b | 498b d34c | 8d44 2470 | 488b 6c24 

  0x000001eb74bc60a8: ;   {runtime_call _complete_monitor_locking_Java}
  0x000001eb74bc60a8: 2866 90e8 

  0x000001eb74bc60ac: ; ImmutableOopMap {rbp=Oop [40]=Oop [48]=Oop [56]=Oop [64]=NarrowOop [72]=Oop }
                      ;*synchronization entry
                      ; - com.sun.prism.impl.Disposer::disposeUnreachables@-1 (line 173)
                      ; - com.sun.prism.impl.Disposer::cleanUp@26 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@473 (line 117)
  0x000001eb74bc60ac: d05b 86ff 

  0x000001eb74bc60b0: ;   {other}
  0x000001eb74bc60b0: 0f1f 8400 | 2028 003c | e9e7 edff | ffba deff | ffff 488b | 6c24 2844 | 8b44 2440 | 4489 5c24 
  0x000001eb74bc60d0: 2444 8944 

  0x000001eb74bc60d4: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc60d4: 2428 90e8 

  0x000001eb74bc60d8: ; ImmutableOopMap {rbp=Oop [36]=NarrowOop [40]=NarrowOop [64]=NarrowOop }
                      ;*invokevirtual poll {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.Disposer::disposeUnreachables@4 (line 173)
                      ; - com.sun.prism.impl.Disposer::cleanUp@26 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@473 (line 117)
  0x000001eb74bc60d8: 24e5 79ff 

  0x000001eb74bc60dc: ;   {other}
  0x000001eb74bc60dc: 0f1f 8400 | 4c28 003d | 4d8b d349 | 8bca 488d | 5424 704d | 8bc7 49ba | 50df 0ecb | fe7f 0000 
  0x000001eb74bc60fc: ;   {other}
  0x000001eb74bc60fc: 41ff d20f | 1f84 0000 | 0000 00e9 | 5fee ffff | 4c89 4424 | 4049 8bd0 | 4c8d 4424 

  0x000001eb74bc6118: ;   {runtime_call _complete_monitor_locking_Java}
  0x000001eb74bc6118: 7066 90e8 

  0x000001eb74bc611c: ; ImmutableOopMap {rbp=NarrowOop [40]=Oop [48]=Oop [56]=Oop [64]=Oop }
                      ;*synchronization entry
                      ; - com.sun.prism.impl.Disposer::processDisposalQueue@-1 (line 189)
                      ; - com.sun.prism.impl.Disposer::cleanUp@32 (line 136)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@473 (line 117)
  0x000001eb74bc611c: 605b 86ff 

  0x000001eb74bc6120: ;   {other}
  0x000001eb74bc6120: 0f1f 8400 | 9028 003e | 4c8b 4424 | 40e9 bbee | ffff 498b | c848 8d54 | 2470 4d8b | c749 ba50 
  0x000001eb74bc6140: df0e cbfe | 7f00 0041 

  0x000001eb74bc6148: ;   {other}
  0x000001eb74bc6148: ffd2 0f1f | 8400 0000 | 0000 e941 | efff ffba | deff ffff 

  0x000001eb74bc615c: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc615c: 418b eae8 

  0x000001eb74bc6160: ; ImmutableOopMap {rbp=NarrowOop }
                      ;*invokeinterface getTextureResourcePool {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@517 (line 127)
  0x000001eb74bc6160: 9ce4 79ff 

  0x000001eb74bc6164: ;   {other}
  0x000001eb74bc6164: 0f1f 8400 | d428 003f | ba76 ffff | ff48 8b6c | 2428 895c | 2420 8944 

  0x000001eb74bc617c: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc617c: 2428 90e8 

  0x000001eb74bc6180: ; ImmutableOopMap {rbp=Oop [32]=NarrowOop }
                      ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) jdk.internal.util.ArraysSupport::mismatch@74 (line 401)
                      ; - java.lang.String::startsWith@70 (line 2297)
                      ; - java.lang.String::startsWith@3 (line 2327)
                      ; - com.sun.prism.impl.Disposer::cleanUp@8 (line 131)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@473 (line 117)
  0x000001eb74bc6180: 7ce4 79ff 

  0x000001eb74bc6184: ;   {other}
  0x000001eb74bc6184: 0f1f 8400 | f428 0040 | ba45 ffff | ff44 8944 

  0x000001eb74bc6194: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc6194: 2428 90e8 

  0x000001eb74bc6198: ; ImmutableOopMap {rbp=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.tk.quantum.SceneState::isValid@18 (line 86)
                      ; - com.sun.javafx.tk.quantum.ViewPainter::validateStageGraphics@4 (line 427)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@13 (line 52)
  0x000001eb74bc6198: 64e4 79ff 

  0x000001eb74bc619c: ;   {other}
  0x000001eb74bc619c: 0f1f 8400 | 0c29 0041 | ba45 ffff | ff44 8944 

  0x000001eb74bc61ac: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc61ac: 2428 90e8 

  0x000001eb74bc61b0: ; ImmutableOopMap {rbp=Oop }
                      ;*ifle {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.tk.quantum.SceneState::isValid@25 (line 86)
                      ; - com.sun.javafx.tk.quantum.ViewPainter::validateStageGraphics@4 (line 427)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@13 (line 52)
  0x000001eb74bc61b0: 4ce4 79ff 

  0x000001eb74bc61b4: ;   {other}
  0x000001eb74bc61b4: 0f1f 8400 | 2429 0042 | ba45 ffff | ff44 895c 

  0x000001eb74bc61c4: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc61c4: 2428 90e8 

  0x000001eb74bc61c8: ; ImmutableOopMap {rbp=Oop }
                      ;*ifle {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.tk.quantum.SceneState::isValid@32 (line 86)
                      ; - com.sun.javafx.tk.quantum.ViewPainter::validateStageGraphics@4 (line 427)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@13 (line 52)
  0x000001eb74bc61c8: 34e4 79ff 

  0x000001eb74bc61cc: ;   {other}
  0x000001eb74bc61cc: 0f1f 8400 | 3c29 0043 | 498b d749 | ba60 f6cd | cafe 7f00 | 0041 ffd2 

  0x000001eb74bc61e4: ;   {other}
  0x000001eb74bc61e4: 0f1f 8400 | 0000 0000 | e95f dfff | ffba 45ff | ffff 4489 

  0x000001eb74bc61f8: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc61f8: 5c24 28e8 

  0x000001eb74bc61fc: ; ImmutableOopMap {rbp=Oop [40]=NarrowOop }
                      ;*ifnull {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.tk.quantum.SceneState::isValid@4 (line 86)
                      ; - com.sun.javafx.tk.quantum.ViewPainter::validateStageGraphics@4 (line 427)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@13 (line 52)
  0x000001eb74bc61fc: 00e4 79ff 

  0x000001eb74bc6200: ;   {other}
  0x000001eb74bc6200: 0f1f 8400 | 7029 0044 | ba45 ffff | ff44 8944 

  0x000001eb74bc6210: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc6210: 2420 90e8 

  0x000001eb74bc6214: ; ImmutableOopMap {rbp=Oop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.tk.quantum.ViewPainter::validateStageGraphics@51 (line 436)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@13 (line 52)
  0x000001eb74bc6214: e8e3 79ff 

  0x000001eb74bc6218: ;   {other}
  0x000001eb74bc6218: 0f1f 8400 | 8829 0045 | ba45 ffff | ff48 8b6c | 2428 4489 | 5c24 2044 | 8954 2424 

  0x000001eb74bc6234: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc6234: 6666 90e8 

  0x000001eb74bc6238: ; ImmutableOopMap {rbp=Oop }
                      ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.d3d.D3DSwapChain::lockResources@11 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@236 (line 77)
  0x000001eb74bc6238: c4e3 79ff 

  0x000001eb74bc623c: ;   {other}
  0x000001eb74bc623c: 0f1f 8400 | ac29 0046 | ba45 ffff | ff48 8b6c | 2428 894c | 2420 4489 

  0x000001eb74bc6254: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc6254: 5424 24e8 

  0x000001eb74bc6258: ; ImmutableOopMap {rbp=Oop }
                      ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.d3d.D3DSwapChain::lockResources@25 (line 136)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@236 (line 77)
  0x000001eb74bc6258: a4e3 79ff 

  0x000001eb74bc625c: ;   {other}
  0x000001eb74bc625c: 0f1f 8400 | cc29 0047 | c5f8 2ed0 | bdff ffff | ff0f 8a0e | 0000 000f | 8208 0000 | 0040 0f95 
  0x000001eb74bc627c: c540 0fb6 | edba 45ff 

  0x000001eb74bc6284: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc6284: ffff 90e8 

  0x000001eb74bc6288: ; ImmutableOopMap {[40]=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.d3d.D3DSwapChain::lockResources@37 (line 137)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@236 (line 77)
  0x000001eb74bc6288: 74e3 79ff 

  0x000001eb74bc628c: ;   {other}
  0x000001eb74bc628c: 0f1f 8400 | fc29 0048 

  0x000001eb74bc6294: ;   {section_word}
  0x000001eb74bc6294: c5f8 2e05 | 04de ffff | bdff ffff | ff0f 8a0e | 0000 000f | 8208 0000 | 0040 0f95 | c540 0fb6 
  0x000001eb74bc62b4: edba 45ff | ffff 4c8b | 5424 284c | 8954 2420 | 4c89 4424 | 30c5 fa11 | 4424 38c5 | fa11 5424 
  0x000001eb74bc62d4: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc62d4: 3c66 90e8 

  0x000001eb74bc62d8: ; ImmutableOopMap {[32]=Oop [48]=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.impl.BaseGraphics::scale@3 (line 204)
                      ; - com.sun.prism.d3d.D3DSwapChain::createGraphics@21 (line 149)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@304 (line 88)
  0x000001eb74bc62d8: 24e3 79ff 

  0x000001eb74bc62dc: ;   {other}
  0x000001eb74bc62dc: 0f1f 8400 | 4c2a 0049 | 498b d749 | ba60 f6cd | cafe 7f00 | 0041 ffd2 

  0x000001eb74bc62f4: ;   {other}
  0x000001eb74bc62f4: 0f1f 8400 | 0000 0000 | e920 e7ff | ffba 45ff | ffff 488b | 6c24 2889 | 5c24 2044 | 8954 2428 
  0x000001eb74bc6314: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc6314: 6666 90e8 

  0x000001eb74bc6318: ; ImmutableOopMap {rbp=Oop [32]=NarrowOop }
                      ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.lang.String::startsWith@50 (line 2293)
                      ; - java.lang.String::startsWith@3 (line 2327)
                      ; - com.sun.prism.impl.Disposer::cleanUp@8 (line 131)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@473 (line 117)
  0x000001eb74bc6318: e4e2 79ff 

  0x000001eb74bc631c: ;   {other}
  0x000001eb74bc631c: 0f1f 8400 | 8c2a 004a | ba45 ffff | ff4c 8b54 | 2428 4c89 | 5424 2044 | 895c 242c 

  0x000001eb74bc6338: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc6338: 6666 90e8 

  0x000001eb74bc633c: ; ImmutableOopMap {rbp=NarrowOop [32]=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.AbstractCollection::isEmpty@4 (line 91)
                      ; - com.sun.prism.impl.Disposer::processDisposalQueue@4 (line 189)
                      ; - com.sun.prism.impl.Disposer::cleanUp@32 (line 136)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@473 (line 117)
  0x000001eb74bc633c: c0e2 79ff 

  0x000001eb74bc6340: ;   {other}
  0x000001eb74bc6340: 0f1f 8400 | b02a 004b | 498b d749 | ba60 f6cd | cafe 7f00 | 0041 ffd2 

  0x000001eb74bc6358: ;   {other}
  0x000001eb74bc6358: 0f1f 8400 | 0000 0000 | e9dc eeff | ff45 33db | 493b cbbd | ffff ffff | 7c08 400f | 95c5 400f 
  0x000001eb74bc6378: b6ed ba45 | ffff ff4c | 8b5c 2428 | 4c89 5c24 | 2044 8954 

  0x000001eb74bc638c: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc638c: 242c 90e8 

  0x000001eb74bc6390: ; ImmutableOopMap {[32]=Oop [44]=NarrowOop [56]=NarrowOop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.glass.ui.View::checkNotClosed@6 (line 434)
                      ; - com.sun.glass.ui.View::lock@1 (line 730)
                      ; - com.sun.prism.PresentableState::lock@11 (line 285)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@106 (line 65)
  0x000001eb74bc6390: 6ce2 79ff 

  0x000001eb74bc6394: ;   {other}
  0x000001eb74bc6394: 0f1f 8400 | 042b 004c | ba45 ffff | ff48 8b6c | 2428 4489 

  0x000001eb74bc63a8: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc63a8: 4424 20e8 

  0x000001eb74bc63ac: ; ImmutableOopMap {rbp=Oop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.d3d.D3DResourceFactory::isDeviceReady@4 (line 116)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@136 (line 71)
  0x000001eb74bc63ac: 50e2 79ff 

  0x000001eb74bc63b0: ;   {other}
  0x000001eb74bc63b0: 0f1f 8400 | 202b 004d | ba45 ffff | ff48 8b6c | 2428 4489 

  0x000001eb74bc63c4: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc63c4: 5424 20e8 

  0x000001eb74bc63c8: ; ImmutableOopMap {rbp=Oop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.d3d.D3DContext::testLostStateAndReset@4 (line 154)
                      ; - com.sun.prism.d3d.D3DResourceFactory::isDeviceReady@17 (line 120)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@136 (line 71)
  0x000001eb74bc63c8: 34e2 79ff 

  0x000001eb74bc63cc: ;   {other}
  0x000001eb74bc63cc: 0f1f 8400 | 3c2b 004e | ba45 ffff | ff48 8b6c | 2428 8944 

  0x000001eb74bc63e0: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc63e0: 2428 90e8 

  0x000001eb74bc63e4: ; ImmutableOopMap {rbp=Oop [56]=NarrowOop }
                      ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.d3d.D3DContext::testLostStateAndReset@187 (line 186)
                      ; - com.sun.prism.d3d.D3DResourceFactory::isDeviceReady@17 (line 120)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@136 (line 71)
  0x000001eb74bc63e4: 18e2 79ff 

  0x000001eb74bc63e8: ;   {other}
  0x000001eb74bc63e8: 0f1f 8400 | 582b 004f | ba45 ffff | ff48 8b6c | 2428 8944 

  0x000001eb74bc63fc: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc63fc: 2424 90e8 

  0x000001eb74bc6400: ; ImmutableOopMap {rbp=Oop [56]=NarrowOop }
                      ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.d3d.D3DContext::testLostStateAndReset@197 (line 190)
                      ; - com.sun.prism.d3d.D3DResourceFactory::isDeviceReady@17 (line 120)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@136 (line 71)
  0x000001eb74bc6400: fce1 79ff 

  0x000001eb74bc6404: ;   {other}
  0x000001eb74bc6404: 0f1f 8400 | 742b 0050 | ba45 ffff | ff48 8b6c | 2428 8944 

  0x000001eb74bc6418: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc6418: 2428 90e8 

  0x000001eb74bc641c: ; ImmutableOopMap {rbp=Oop [56]=NarrowOop }
                      ;*if_icmpeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.d3d.D3DContext::testLostStateAndReset@250 (line 207)
                      ; - com.sun.prism.d3d.D3DResourceFactory::isDeviceReady@17 (line 120)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@136 (line 71)
  0x000001eb74bc641c: e0e1 79ff 

  0x000001eb74bc6420: ;   {other}
  0x000001eb74bc6420: 0f1f 8400 | 902b 0051 | ba45 ffff | ff48 8b6c | 2428 8944 

  0x000001eb74bc6434: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc6434: 2428 90e8 

  0x000001eb74bc6438: ; ImmutableOopMap {rbp=Oop [56]=NarrowOop }
                      ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.d3d.D3DContext::testLostStateAndReset@256 (line 207)
                      ; - com.sun.prism.d3d.D3DResourceFactory::isDeviceReady@17 (line 120)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@136 (line 71)
  0x000001eb74bc6438: c4e1 79ff 

  0x000001eb74bc643c: ;   {other}
  0x000001eb74bc643c: 0f1f 8400 | ac2b 0052 | ba45 ffff | ff48 8b6c | 2428 8944 

  0x000001eb74bc6450: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc6450: 2420 90e8 

  0x000001eb74bc6454: ; ImmutableOopMap {rbp=Oop }
                      ;*ifge {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.d3d.D3DContext::FAILED@1 (line 79)
                      ; - com.sun.prism.d3d.D3DContext::testLostStateAndReset@270 (line 215)
                      ; - com.sun.prism.d3d.D3DResourceFactory::isDeviceReady@17 (line 120)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@136 (line 71)
  0x000001eb74bc6454: a8e1 79ff 

  0x000001eb74bc6458: ;   {other}
  0x000001eb74bc6458: 0f1f 8400 | c82b 0053 | c5f8 2ec1 | bdff ffff | ff0f 8a0e | 0000 000f | 8208 0000 | 0040 0f95 
  0x000001eb74bc6478: c540 0fb6 | edba 45ff 

  0x000001eb74bc6480: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc6480: ffff 90e8 

  0x000001eb74bc6484: ; ImmutableOopMap {[40]=Oop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.d3d.D3DSwapChain::lockResources@49 (line 138)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@236 (line 77)
  0x000001eb74bc6484: 78e1 79ff 

  0x000001eb74bc6488: ;   {other}
  0x000001eb74bc6488: 0f1f 8400 | f82b 0054 | 4533 db4d | 3bd3 bdff | ffff ff7c | 0840 0f95 | c540 0fb6 | edba 45ff 
  0x000001eb74bc64a8: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc64a8: ffff 90e8 

  0x000001eb74bc64ac: ; ImmutableOopMap {[40]=Oop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.d3d.D3DTextureResource::isValid@19 (line 46)
                      ; - com.sun.prism.impl.BaseTexture::isSurfaceLost@4 (line 292)
                      ; - com.sun.prism.d3d.D3DSwapChain::lockResources@65 (line 143)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@236 (line 77)
  0x000001eb74bc64ac: 50e1 79ff 

  0x000001eb74bc64b0: ;   {other}
  0x000001eb74bc64b0: 0f1f 8400 | 202c 0055 

  0x000001eb74bc64b8: ;   {section_word}
  0x000001eb74bc64b8: c5f8 2e15 | e0db ffff | bdff ffff | ff0f 8a0e | 0000 000f | 8208 0000 | 0040 0f95 | c540 0fb6 
  0x000001eb74bc64d8: edba 45ff | ffff 4c8b | 5424 284c | 8954 2420 | 4c89 4424 | 30c5 fa11 

  0x000001eb74bc64f0: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc64f0: 5424 38e8 

  0x000001eb74bc64f4: ; ImmutableOopMap {[32]=Oop [48]=Oop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.impl.BaseGraphics::scale@9 (line 204)
                      ; - com.sun.prism.d3d.D3DSwapChain::createGraphics@21 (line 149)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@304 (line 88)
  0x000001eb74bc64f4: 08e1 79ff 

  0x000001eb74bc64f8: ;   {other}
  0x000001eb74bc64f8: 0f1f 8400 | 682c 0056 | ba45 ffff | ff48 8b6c | 2428 4489 

  0x000001eb74bc650c: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc650c: 5424 30e8 

  0x000001eb74bc6510: ; ImmutableOopMap {rbp=Oop [56]=NarrowOop [60]=NarrowOop [72]=Oop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.impl.BaseContext::flushVertexBuffer@4 (line 105)
                      ; - com.sun.prism.d3d.D3DSwapChain::prepare@6 (line 60)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@355 (line 99)
  0x000001eb74bc6510: ece0 79ff 

  0x000001eb74bc6514: ;   {other}
  0x000001eb74bc6514: 0f1f 8400 | 842c 0057 | ba45 ffff | ff48 8b6c | 2428 448b | 4c24 3844 | 894c 2420 | 4c8b 5c24 
  0x000001eb74bc6534: 484c 895c | 2428 448b | 5c24 3c44 | 895c 2424 | 8944 2444 | 4489 5424 | 4844 8944 

  0x000001eb74bc6550: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc6550: 244c 90e8 

  0x000001eb74bc6554: ; ImmutableOopMap {rbp=Oop [32]=NarrowOop [36]=NarrowOop [40]=Oop [72]=NarrowOop [88]=Oop }
                      ;*ifgt {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.impl.ManagedResource::assertLocked@4 (line 95)
                      ; - com.sun.prism.impl.ManagedResource::getResource@1 (line 70)
                      ; - com.sun.prism.d3d.D3DRTTexture::isMSAA@7 (line 180)
                      ; - com.sun.prism.d3d.D3DSwapChain::isMSAA@11 (line 184)
                      ; - com.sun.prism.d3d.D3DSwapChain::prepare@55 (line 69)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@355 (line 99)
  0x000001eb74bc6554: a8e0 79ff 

  0x000001eb74bc6558: ;   {other}
  0x000001eb74bc6558: 0f1f 8400 | c82c 0058 | ba45 ffff | ff48 8b6c | 2428 448b | 5424 3844 | 8954 2420 | 4c8b 5424 
  0x000001eb74bc6578: 484c 8954 | 2428 448b | 5424 3c44 | 8954 2424 | 8944 2444 | 4489 5c24 

  0x000001eb74bc6590: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc6590: 4866 90e8 

  0x000001eb74bc6594: ; ImmutableOopMap {rbp=Oop [32]=NarrowOop [36]=NarrowOop [40]=Oop [88]=Oop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.d3d.D3DRTTexture::isMSAA@16 (line 180)
                      ; - com.sun.prism.d3d.D3DSwapChain::isMSAA@11 (line 184)
                      ; - com.sun.prism.d3d.D3DSwapChain::prepare@55 (line 69)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@355 (line 99)
  0x000001eb74bc6594: 68e0 79ff 

  0x000001eb74bc6598: ;   {other}
  0x000001eb74bc6598: 0f1f 8400 | 082d 0059 | ba45 ffff | ff48 8b6c | 2428 4489 

  0x000001eb74bc65ac: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc65ac: 5c24 24e8 

  0x000001eb74bc65b0: ; ImmutableOopMap {rbp=Oop [56]=NarrowOop [72]=Oop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.impl.BaseContext::flushVertexBuffer@4 (line 105)
                      ; - com.sun.prism.d3d.D3DSwapChain::prepare@121 (line 76)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@355 (line 99)
  0x000001eb74bc65b0: 4ce0 79ff 

  0x000001eb74bc65b4: ;   {other}
  0x000001eb74bc65b4: 0f1f 8400 | 242d 005a | ba45 ffff | ff48 8b6c | 2428 4489 | 5c24 2444 | 8954 2428 

  0x000001eb74bc65d0: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc65d0: 6666 90e8 

  0x000001eb74bc65d4: ; ImmutableOopMap {rbp=Oop [36]=NarrowOop [56]=NarrowOop }
                      ;*ifgt {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.impl.ManagedResource::assertLocked@4 (line 95)
                      ; - com.sun.prism.impl.ManagedResource::unlock@1 (line 156)
                      ; - com.sun.prism.impl.BaseTexture::unlock@4 (line 272)
                      ; - com.sun.prism.d3d.D3DSwapChain::prepare@128 (line 77)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@355 (line 99)
  0x000001eb74bc65d4: 28e0 79ff 

  0x000001eb74bc65d8: ;   {other}
  0x000001eb74bc65d8: 0f1f 8400 | 482d 005b | ba45 ffff | ff48 8b6c | 2428 895c 

  0x000001eb74bc65ec: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc65ec: 2420 90e8 

  0x000001eb74bc65f0: ; ImmutableOopMap {rbp=Oop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.tk.quantum.PresentingPainter::run@444 (line 106)
  0x000001eb74bc65f0: 0ce0 79ff 

  0x000001eb74bc65f4: ;   {other}
  0x000001eb74bc65f4: 0f1f 8400 | 642d 005c | ba45 ffff | ff48 8b6c | 2428 4489 

  0x000001eb74bc6608: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc6608: 4424 20e8 

  0x000001eb74bc660c: ; ImmutableOopMap {rbp=Oop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.d3d.D3DSwapChain::present@9 (line 84)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@451 (line 107)
  0x000001eb74bc660c: f0df 79ff 

  0x000001eb74bc6610: ;   {other}
  0x000001eb74bc6610: 0f1f 8400 | 802d 005d | ba45 ffff | ff48 8b6c | 2428 8944 

  0x000001eb74bc6624: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc6624: 2428 90e8 

  0x000001eb74bc6628: ; ImmutableOopMap {rbp=Oop [56]=NarrowOop }
                      ;*if_icmpeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.d3d.D3DContext::validatePresent@3 (line 223)
                      ; - com.sun.prism.d3d.D3DSwapChain::present@31 (line 88)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@451 (line 107)
  0x000001eb74bc6628: d4df 79ff 

  0x000001eb74bc662c: ;   {other}
  0x000001eb74bc662c: 0f1f 8400 | 9c2d 005e | ba45 ffff | ff48 8b6c | 2428 8944 

  0x000001eb74bc6640: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc6640: 2428 90e8 

  0x000001eb74bc6644: ; ImmutableOopMap {rbp=Oop [56]=NarrowOop }
                      ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.d3d.D3DContext::validatePresent@9 (line 223)
                      ; - com.sun.prism.d3d.D3DSwapChain::present@31 (line 88)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@451 (line 107)
  0x000001eb74bc6644: b8df 79ff 

  0x000001eb74bc6648: ;   {other}
  0x000001eb74bc6648: 0f1f 8400 | b82d 005f | ba45 ffff | ff48 8b6c | 2428 8944 

  0x000001eb74bc665c: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc665c: 2420 90e8 

  0x000001eb74bc6660: ; ImmutableOopMap {rbp=Oop }
                      ;*ifge {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.d3d.D3DContext::FAILED@1 (line 79)
                      ; - com.sun.prism.d3d.D3DContext::validatePresent@24 (line 229)
                      ; - com.sun.prism.d3d.D3DSwapChain::present@31 (line 88)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@451 (line 107)
  0x000001eb74bc6660: 9cdf 79ff 

  0x000001eb74bc6664: ;   {other}
  0x000001eb74bc6664: 0f1f 8400 | d42d 0060 | 4533 c04d | 3bd0 bdff | ffff ff7c | 0840 0f95 | c540 0fb6 | edba 45ff 
  0x000001eb74bc6684: ffff 4c89 | 5c24 2089 

  0x000001eb74bc668c: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc668c: 4c24 28e8 

  0x000001eb74bc6690: ; ImmutableOopMap {[32]=Oop [40]=NarrowOop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.glass.ui.View::checkNotClosed@6 (line 434)
                      ; - com.sun.glass.ui.View::unlock@1 (line 741)
                      ; - com.sun.prism.PresentableState::unlock@11 (line 296)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@484 (line 120)
  0x000001eb74bc6690: 6cdf 79ff 

  0x000001eb74bc6694: ;   {other}
  0x000001eb74bc6694: 0f1f 8400 | 042e 0061 | ba45 ffff | ff8b ef44 | 8944 2420 

  0x000001eb74bc66a8: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc66a8: 6666 90e8 

  0x000001eb74bc66ac: ; ImmutableOopMap {rbp=NarrowOop [32]=NarrowOop [48]=Oop }
                      ;*if_acmpeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.concurrent.locks.ReentrantLock$Sync::tryRelease@14 (line 174)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::release@2 (line 1059)
                      ; - java.util.concurrent.locks.ReentrantLock::unlock@5 (line 494)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@531 (line 130)
  0x000001eb74bc66ac: 50df 79ff 

  0x000001eb74bc66b0: ;   {other}
  0x000001eb74bc66b0: 0f1f 8400 | 202e 0062 | ba45 ffff | ff48 8b6c 

  0x000001eb74bc66c0: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc66c0: 2428 90e8 

  0x000001eb74bc66c4: ; ImmutableOopMap {rbp=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.impl.Disposer::cleanUp@11 (line 131)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@40 (line 117)
  0x000001eb74bc66c4: 38df 79ff 

  0x000001eb74bc66c8: ;   {other}
  0x000001eb74bc66c8: 0f1f 8400 | 382e 0063 | baf6 ffff | ff48 8b6c 

  0x000001eb74bc66d8: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc66d8: 2428 90e8 

  0x000001eb74bc66dc: ; ImmutableOopMap {rbp=Oop }
                      ;*invokevirtual disposeUnreachables {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.Disposer::cleanUp@26 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@40 (line 117)
  0x000001eb74bc66dc: 20df 79ff 

  0x000001eb74bc66e0: ;   {other}
  0x000001eb74bc66e0: 0f1f 8400 | 502e 0064 | baf6 ffff | ff48 8b6c 

  0x000001eb74bc66f0: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc66f0: 2428 90e8 

  0x000001eb74bc66f4: ; ImmutableOopMap {rbp=Oop }
                      ;*invokevirtual processDisposalQueue {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.Disposer::cleanUp@32 (line 136)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@40 (line 117)
  0x000001eb74bc66f4: 08df 79ff 

  0x000001eb74bc66f8: ;   {other}
  0x000001eb74bc66f8: 0f1f 8400 | 682e 0065 | baf6 ffff | ff49 8be9 

  0x000001eb74bc6708: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc6708: 6666 90e8 

  0x000001eb74bc670c: ; ImmutableOopMap {rbp=Oop }
                      ;*invokevirtual getAndSet {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.GlassScene::setPainting@5 (line 293)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@69 (line 124)
  0x000001eb74bc670c: f0de 79ff 

  0x000001eb74bc6710: ;   {other}
  0x000001eb74bc6710: 0f1f 8400 | 802e 0066 | bae4 ffff | ff48 8b6c | 2428 895c 

  0x000001eb74bc6724: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc6724: 2424 90e8 

  0x000001eb74bc6728: ; ImmutableOopMap {rbp=Oop [36]=NarrowOop }
                      ;*baload {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.internal.util.ArraysSupport::mismatch@12 (line 389)
                      ; - java.lang.String::startsWith@70 (line 2297)
                      ; - java.lang.String::startsWith@3 (line 2327)
                      ; - com.sun.prism.impl.Disposer::cleanUp@8 (line 131)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@40 (line 117)
  0x000001eb74bc6728: d4de 79ff 

  0x000001eb74bc672c: ;   {other}
  0x000001eb74bc672c: 0f1f 8400 | 9c2e 0067 | 498b d34c | 8d44 2470 | 488b 6c24 

  0x000001eb74bc6740: ;   {runtime_call _complete_monitor_locking_Java}
  0x000001eb74bc6740: 2866 90e8 

  0x000001eb74bc6744: ; ImmutableOopMap {rbp=Oop [40]=Oop [48]=Oop [56]=Oop [64]=NarrowOop [72]=Oop }
                      ;*synchronization entry
                      ; - com.sun.prism.impl.Disposer::disposeUnreachables@-1 (line 173)
                      ; - com.sun.prism.impl.Disposer::cleanUp@26 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@40 (line 117)
  0x000001eb74bc6744: 3855 86ff 

  0x000001eb74bc6748: ;   {other}
  0x000001eb74bc6748: 0f1f 8400 | b82e 0068 | e969 dcff | ffba deff | ffff 4c8b | 5424 284c | 8954 2420 | 458b d344 
  0x000001eb74bc6768: 8954 242c 

  0x000001eb74bc676c: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc676c: 6666 90e8 

  0x000001eb74bc6770: ; ImmutableOopMap {rbp=NarrowOop [32]=Oop [44]=NarrowOop [64]=NarrowOop }
                      ;*invokevirtual poll {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.Disposer::disposeUnreachables@4 (line 173)
                      ; - com.sun.prism.impl.Disposer::cleanUp@26 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@40 (line 117)
  0x000001eb74bc6770: 8cde 79ff 

  0x000001eb74bc6774: ;   {other}
  0x000001eb74bc6774: 0f1f 8400 | e42e 0069 | 498b cb48 | 8d54 2470 | 4d8b c749 | ba50 df0e | cbfe 7f00 | 0041 ffd2 
  0x000001eb74bc6794: ;   {other}
  0x000001eb74bc6794: 0f1f 8400 | 0000 0000 | e9e4 dcff | ff4c 895c | 2440 418b | e949 8bd3 | 4c8d 4424 

  0x000001eb74bc67b0: ;   {runtime_call _complete_monitor_locking_Java}
  0x000001eb74bc67b0: 7066 90e8 

  0x000001eb74bc67b4: ; ImmutableOopMap {rbp=NarrowOop [40]=Oop [48]=Oop [56]=Oop [64]=Oop }
                      ;*synchronization entry
                      ; - com.sun.prism.impl.Disposer::processDisposalQueue@-1 (line 189)
                      ; - com.sun.prism.impl.Disposer::cleanUp@32 (line 136)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@40 (line 117)
  0x000001eb74bc67b4: c854 86ff 

  0x000001eb74bc67b8: ;   {other}
  0x000001eb74bc67b8: 0f1f 8400 | 282f 006a | 448b cd4c | 8b5c 2440 | e93b ddff | ff49 8bcb | 488d 5424 | 704d 8bc7 
  0x000001eb74bc67d8: 49ba 50df | 0ecb fe7f | 0000 41ff 

  0x000001eb74bc67e4: ;   {other}
  0x000001eb74bc67e4: d20f 1f84 | 0000 0000 | 00e9 c0dd | ffff bade 

  0x000001eb74bc67f4: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc67f4: ffff ffe8 

  0x000001eb74bc67f8: ; ImmutableOopMap {rbp=NarrowOop }
                      ;*invokeinterface getTextureResourcePool {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@84 (line 127)
  0x000001eb74bc67f8: 04de 79ff 

  0x000001eb74bc67fc: ;   {other}
  0x000001eb74bc67fc: 0f1f 8400 | 6c2f 006b | ba45 ffff | ff4c 8b54 | 2428 4c89 | 5424 2044 | 8b44 2438 | 4489 4424 
  0x000001eb74bc681c: 284c 8b54 | 2448 4c89 | 5424 3044 | 8b54 243c | 4489 5424 | 2c89 7c24 | 3c44 895c | 2444 4489 
  0x000001eb74bc683c: 4c24 4889 

  0x000001eb74bc6840: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc6840: 4c24 4ce8 

  0x000001eb74bc6844: ; ImmutableOopMap {[32]=Oop [40]=NarrowOop [44]=NarrowOop [48]=Oop [68]=NarrowOop [72]=NarrowOop [76]=NarrowOop [80]=NarrowOop }
                      ;*ifgt {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.impl.BaseContext::flushMask@4 (line 111)
                      ; - com.sun.prism.impl.BaseContext::drawQuads@1 (line 124)
                      ; - com.sun.prism.impl.VertexBuffer::flush@23 (line 98)
                      ; - com.sun.prism.impl.BaseContext::flushVertexBuffer@12 (line 107)
                      ; - com.sun.prism.d3d.D3DSwapChain::prepare@6 (line 60)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@355 (line 99)
  0x000001eb74bc6844: b8dd 79ff 

  0x000001eb74bc6848: ;   {other}
  0x000001eb74bc6848: 0f1f 8400 | b82f 006c | ba45 ffff | ff4c 8b54 | 2428 4c89 | 5424 2044 | 8b54 2438 | 4489 5424 
  0x000001eb74bc6868: 284c 8b54 | 2448 4c89 | 5424 3044 | 8b44 243c | 4489 4424 | 2c89 7c24 | 3c44 895c | 2444 4489 
  0x000001eb74bc6888: 4c24 4889 

  0x000001eb74bc688c: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc688c: 4c24 4ce8 

  0x000001eb74bc6890: ; ImmutableOopMap {[32]=Oop [40]=NarrowOop [44]=NarrowOop [48]=Oop [68]=NarrowOop [72]=NarrowOop [76]=NarrowOop [80]=NarrowOop }
                      ;*ifle {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.impl.BaseContext::flushMask@11 (line 111)
                      ; - com.sun.prism.impl.BaseContext::drawQuads@1 (line 124)
                      ; - com.sun.prism.impl.VertexBuffer::flush@23 (line 98)
                      ; - com.sun.prism.impl.BaseContext::flushVertexBuffer@12 (line 107)
                      ; - com.sun.prism.d3d.D3DSwapChain::prepare@6 (line 60)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@355 (line 99)
  0x000001eb74bc6890: 6cdd 79ff 

  0x000001eb74bc6894: ;   {other}
  0x000001eb74bc6894: 0f1f 8400 | 0430 006d | ba45 ffff | ff4c 8b54 | 2428 4c89 | 5424 2044 | 8b5c 2438 | 4489 5c24 
  0x000001eb74bc68b4: 284c 8b54 | 2448 4c89 | 5424 3044 | 8b54 243c | 4489 5424 | 2c89 7c24 | 3889 5c24 | 4044 8944 
  0x000001eb74bc68d4: 2444 4489 

  0x000001eb74bc68d8: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc68d8: 4c24 48e8 

  0x000001eb74bc68dc: ; ImmutableOopMap {[32]=Oop [40]=NarrowOop [44]=NarrowOop [48]=Oop [64]=NarrowOop [68]=NarrowOop [72]=NarrowOop }
                      ;*ifgt {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.impl.BaseContext::flushMask@4 (line 111)
                      ; - com.sun.prism.impl.BaseContext::drawQuads@1 (line 124)
                      ; - com.sun.prism.impl.VertexBuffer::flush@23 (line 98)
                      ; - com.sun.prism.impl.BaseContext::flushVertexBuffer@12 (line 107)
                      ; - com.sun.prism.d3d.D3DSwapChain::prepare@121 (line 76)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@355 (line 99)
  0x000001eb74bc68dc: 20dd 79ff 

  0x000001eb74bc68e0: ;   {other}
  0x000001eb74bc68e0: 0f1f 8400 | 5030 006e | ba45 ffff | ff4c 8b54 | 2428 4c89 | 5424 2044 | 8b5c 2438 | 4489 5c24 
  0x000001eb74bc6900: 284c 8b54 | 2448 4c89 | 5424 3044 | 8b54 243c | 4489 5424 | 2c89 7c24 | 3889 5c24 | 4044 8944 
  0x000001eb74bc6920: 2444 4489 

  0x000001eb74bc6924: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc6924: 4c24 48e8 

  0x000001eb74bc6928: ; ImmutableOopMap {[32]=Oop [40]=NarrowOop [44]=NarrowOop [48]=Oop [64]=NarrowOop [68]=NarrowOop [72]=NarrowOop }
                      ;*ifle {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.impl.BaseContext::flushMask@11 (line 111)
                      ; - com.sun.prism.impl.BaseContext::drawQuads@1 (line 124)
                      ; - com.sun.prism.impl.VertexBuffer::flush@23 (line 98)
                      ; - com.sun.prism.impl.BaseContext::flushVertexBuffer@12 (line 107)
                      ; - com.sun.prism.d3d.D3DSwapChain::prepare@121 (line 76)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@355 (line 99)
  0x000001eb74bc6928: d4dc 79ff 

  0x000001eb74bc692c: ;   {other}
  0x000001eb74bc692c: 0f1f 8400 | 9c30 006f | ba76 ffff | ff48 8b6c | 2428 895c | 2420 8944 

  0x000001eb74bc6944: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc6944: 2428 90e8 

  0x000001eb74bc6948: ; ImmutableOopMap {rbp=Oop [32]=NarrowOop }
                      ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) jdk.internal.util.ArraysSupport::mismatch@74 (line 401)
                      ; - java.lang.String::startsWith@70 (line 2297)
                      ; - java.lang.String::startsWith@3 (line 2327)
                      ; - com.sun.prism.impl.Disposer::cleanUp@8 (line 131)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@40 (line 117)
  0x000001eb74bc6948: b4dc 79ff 

  0x000001eb74bc694c: ;   {other}
  0x000001eb74bc694c: 0f1f 8400 | bc30 0070 | ba45 ffff | ff4c 8b54 | 2428 4c89 | 5424 2089 

  0x000001eb74bc6964: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc6964: 5c24 28e8 

  0x000001eb74bc6968: ; ImmutableOopMap {[32]=Oop [40]=NarrowOop }
                      ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.lang.String::startsWith@50 (line 2293)
                      ; - java.lang.String::startsWith@3 (line 2327)
                      ; - com.sun.prism.impl.Disposer::cleanUp@8 (line 131)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@40 (line 117)
  0x000001eb74bc6968: 94dc 79ff 

  0x000001eb74bc696c: ;   {other}
  0x000001eb74bc696c: 0f1f 8400 | dc30 0071 | ba45 ffff | ff4c 8b54 | 2428 4c89 | 5424 2044 | 894c 242c 

  0x000001eb74bc6988: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc6988: 6666 90e8 

  0x000001eb74bc698c: ; ImmutableOopMap {[32]=Oop [44]=NarrowOop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.AbstractCollection::isEmpty@4 (line 91)
                      ; - com.sun.prism.impl.Disposer::processDisposalQueue@4 (line 189)
                      ; - com.sun.prism.impl.Disposer::cleanUp@32 (line 136)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@40 (line 117)
  0x000001eb74bc698c: 70dc 79ff 

  0x000001eb74bc6990: ;   {other}
  0x000001eb74bc6990: 0f1f 8400 | 0031 0072 | 498b d749 | ba60 f6cd | cafe 7f00 | 0041 ffd2 

  0x000001eb74bc69a8: ;   {other}
  0x000001eb74bc69a8: 0f1f 8400 | 0000 0000 | e9db e9ff | ffba 45ff | ffff 897c 

  0x000001eb74bc69bc: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc69bc: 2428 90e8 

  0x000001eb74bc69c0: ; ImmutableOopMap {rbp=NarrowOop [40]=NarrowOop [48]=Oop }
                      ;*if_acmpeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.concurrent.locks.ReentrantLock$Sync::tryRelease@14 (line 174)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::release@2 (line 1059)
                      ; - java.util.concurrent.locks.ReentrantLock::unlock@5 (line 494)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@98 (line 130)
  0x000001eb74bc69c0: 3cdc 79ff 

  0x000001eb74bc69c4: ;   {other}
  0x000001eb74bc69c4: 0f1f 8400 | 3431 0073 | 488b 5c24 | 3844 8b53 | 1445 85d2 | 0f84 55ef | ffff 4d8b | 5f28 498b 
  0x000001eb74bc69e4: ca48 c1e1 | 034d 85db | 0f84 5601 | 0000 4d8b | 5738 4b89 | 4c1a f849 | 83c3 f84d | 895f 28e9 
  0x000001eb74bc6a04: 2bef ffff | 498b d849 | 8bd7 49ba | 60f6 cdca | fe7f 0000 

  0x000001eb74bc6a18: ;   {other}
  0x000001eb74bc6a18: 41ff d20f | 1f84 0000 | 0000 004c | 8bc3 e951 | eaff ff48 | 8b5c 2438 | 448b 5314 | 4585 d20f 
  0x000001eb74bc6a38: 840c efff | ff4d 8b5f | 2849 8bca | 48c1 e103 | 4d85 db0f | 845f 0100 | 004d 8b57 | 384b 894c 
  0x000001eb74bc6a58: 1af8 4983 | c3f8 4d89 | 5f28 e9e2 | eeff ffba | 45ff ffff 

  0x000001eb74bc6a6c: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc6a6c: 6666 90e8 

  0x000001eb74bc6a70: ; ImmutableOopMap {rbp=NarrowOop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.concurrent.locks.LockSupport::unpark@8 (line 178)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::signalNext@30 (line 645)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::release@12 (line 1060)
                      ; - java.util.concurrent.locks.ReentrantLock::unlock@5 (line 494)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@531 (line 130)
  0x000001eb74bc6a70: 8cdb 79ff 

  0x000001eb74bc6a74: ;   {other}
  0x000001eb74bc6a74: 0f1f 8400 | e431 0074 | 498b d849 | 8bd7 49ba | 60f6 cdca | fe7f 0000 

  0x000001eb74bc6a8c: ;   {other}
  0x000001eb74bc6a8c: 41ff d20f | 1f84 0000 | 0000 004c | 8bc3 e96d | ebff ffba | 45ff ffff | 4489 4c24 

  0x000001eb74bc6aa8: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc6aa8: 2466 90e8 

  0x000001eb74bc6aac: ; ImmutableOopMap {[36]=NarrowOop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) jdk.internal.misc.Unsafe::getAndBitwiseAndInt@21 (line 3233)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer$Node::getAndUnsetStatus@10 (line 481)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::signalNext@22 (line 644)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::release@12 (line 1060)
                      ; - java.util.concurrent.locks.ReentrantLock::unlock@5 (line 494)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@531 (line 130)
  0x000001eb74bc6aac: 50db 79ff 

  0x000001eb74bc6ab0: ;   {other}
  0x000001eb74bc6ab0: 0f1f 8400 | 2032 0075 | ba45 ffff 

  0x000001eb74bc6abc: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc6abc: ff66 90e8 

  0x000001eb74bc6ac0: ; ImmutableOopMap {rbp=NarrowOop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.concurrent.locks.LockSupport::unpark@8 (line 178)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::signalNext@30 (line 645)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::release@12 (line 1060)
                      ; - java.util.concurrent.locks.ReentrantLock::unlock@5 (line 494)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@98 (line 130)
  0x000001eb74bc6ac0: 3cdb 79ff 

  0x000001eb74bc6ac4: ;   {other}
  0x000001eb74bc6ac4: 0f1f 8400 | 3432 0076 | ba45 ffff | ff44 8944 

  0x000001eb74bc6ad4: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc6ad4: 2424 90e8 

  0x000001eb74bc6ad8: ; ImmutableOopMap {[36]=NarrowOop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) jdk.internal.misc.Unsafe::getAndBitwiseAndInt@21 (line 3233)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer$Node::getAndUnsetStatus@10 (line 481)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::signalNext@22 (line 644)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::release@12 (line 1060)
                      ; - java.util.concurrent.locks.ReentrantLock::unlock@5 (line 494)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@98 (line 130)
  0x000001eb74bc6ad8: 24db 79ff 

  0x000001eb74bc6adc: ;   {other}
  0x000001eb74bc6adc: 0f1f 8400 | 4c32 0077 | ba1e 0000 | 0089 5c24 

  0x000001eb74bc6aec: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc6aec: 2066 90e8 

  0x000001eb74bc6af0: ; ImmutableOopMap {rbp=Oop [32]=NarrowOop }
                      ;*new {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.concurrent.locks.ReentrantLock$NonfairSync::initialTryLock@39 (line 231)
                      ; - java.util.concurrent.locks.ReentrantLock$Sync::lock@1 (line 152)
                      ; - java.util.concurrent.locks.ReentrantLock::lock@4 (line 322)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@3 (line 45)
  0x000001eb74bc6af0: 0cdb 79ff 

  0x000001eb74bc6af4: ;   {other}
  0x000001eb74bc6af4: 0f1f 8400 | 6432 0078 | baf6 ffff | ff48 8b6c | 2428 448b | 4424 4044 | 8944 2424 | 4c89 5c24 
  0x000001eb74bc6b14: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc6b14: 2866 90e8 

  0x000001eb74bc6b18: ; ImmutableOopMap {rbp=Oop [36]=NarrowOop [40]=Oop [64]=NarrowOop }
                      ;*invokevirtual lock {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.lang.ref.ReferenceQueue::poll@13 (line 182)
                      ; - com.sun.prism.impl.Disposer::disposeUnreachables@4 (line 173)
                      ; - com.sun.prism.impl.Disposer::cleanUp@26 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@473 (line 117)
  0x000001eb74bc6b18: e4da 79ff 

  0x000001eb74bc6b1c: ;   {other}
  0x000001eb74bc6b1c: 0f1f 8400 | 8c32 0079 | baf6 ffff | ff48 8b6c | 2428 448b | 5424 4045 | 8bda 4489 

  0x000001eb74bc6b38: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc6b38: 5c24 24e8 

  0x000001eb74bc6b3c: ; ImmutableOopMap {rbp=Oop [36]=NarrowOop [64]=NarrowOop [80]=Oop }
                      ;*invokevirtual unlock {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.lang.ref.ReferenceQueue::poll@25 (line 186)
                      ; - com.sun.prism.impl.Disposer::disposeUnreachables@4 (line 173)
                      ; - com.sun.prism.impl.Disposer::cleanUp@26 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@473 (line 117)
  0x000001eb74bc6b3c: c0da 79ff 

  0x000001eb74bc6b40: ;   {other}
  0x000001eb74bc6b40: 0f1f 8400 | b032 007a | 498b d749 | ba60 f6cd | cafe 7f00 | 0041 ffd2 

  0x000001eb74bc6b58: ;   {other}
  0x000001eb74bc6b58: 0f1f 8400 | 0000 0000 | e9ce edff | ffba f6ff | ffff 488b | 6c24 2844 | 8b54 2440 | 4489 5424 
  0x000001eb74bc6b78: 244c 895c 

  0x000001eb74bc6b7c: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc6b7c: 2428 90e8 

  0x000001eb74bc6b80: ; ImmutableOopMap {rbp=Oop [36]=NarrowOop [40]=Oop [64]=NarrowOop }
                      ;*invokevirtual lock {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.lang.ref.ReferenceQueue::poll@13 (line 182)
                      ; - com.sun.prism.impl.Disposer::disposeUnreachables@4 (line 173)
                      ; - com.sun.prism.impl.Disposer::cleanUp@26 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@40 (line 117)
  0x000001eb74bc6b80: 7cda 79ff 

  0x000001eb74bc6b84: ;   {other}
  0x000001eb74bc6b84: 0f1f 8400 | f432 007b | baf6 ffff | ff48 8b6c | 2428 448b | 5c24 4045 | 8bd3 4489 

  0x000001eb74bc6ba0: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc6ba0: 5424 24e8 

  0x000001eb74bc6ba4: ; ImmutableOopMap {rbp=Oop [36]=NarrowOop [64]=NarrowOop [80]=Oop }
                      ;*invokevirtual unlock {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.lang.ref.ReferenceQueue::poll@25 (line 186)
                      ; - com.sun.prism.impl.Disposer::disposeUnreachables@4 (line 173)
                      ; - com.sun.prism.impl.Disposer::cleanUp@26 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@40 (line 117)
  0x000001eb74bc6ba4: 58da 79ff 

  0x000001eb74bc6ba8: ;   {other}
  0x000001eb74bc6ba8: 0f1f 8400 | 1833 007c | 498b d749 | ba60 f6cd | cafe 7f00 | 0041 ffd2 

  0x000001eb74bc6bc0: ;   {other}
  0x000001eb74bc6bc0: 0f1f 8400 | 0000 0000 | e97c edff | ffba 66ff | ffff 4c8b | 5424 284c | 8954 2420 | 448b 5c24 
  0x000001eb74bc6be0: 4044 895c 

  0x000001eb74bc6be4: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc6be4: 242c 90e8 

  0x000001eb74bc6be8: ; ImmutableOopMap {rbp=Oop [32]=Oop [44]=NarrowOop [64]=NarrowOop }
                      ;*invokevirtual clear {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.Disposer::disposeUnreachables@16 (line 175)
                      ; - com.sun.prism.impl.Disposer::cleanUp@26 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@473 (line 117)
  0x000001eb74bc6be8: 14da 79ff 

  0x000001eb74bc6bec: ;   {other}
  0x000001eb74bc6bec: 0f1f 8400 | 5c33 007d | bade ffff | ff4c 8b54 | 2428 4c89 | 5424 2044 | 8b5c 2440 | 4489 5c24 
  0x000001eb74bc6c0c: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc6c0c: 2c66 90e8 

  0x000001eb74bc6c10: ; ImmutableOopMap {rbp=NarrowOop [32]=Oop [44]=NarrowOop [64]=NarrowOop [80]=Oop }
                      ;*invokevirtual remove {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.Disposer::disposeUnreachables@24 (line 176)
                      ; - com.sun.prism.impl.Disposer::cleanUp@26 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@473 (line 117)
  0x000001eb74bc6c10: ecd9 79ff 

  0x000001eb74bc6c14: ;   {other}
  0x000001eb74bc6c14: 0f1f 8400 | 8433 007e | bade ffff | ff4c 8b54 | 2428 4c89 | 5424 2044 | 895c 242c 

  0x000001eb74bc6c30: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc6c30: 6666 90e8 

  0x000001eb74bc6c34: ; ImmutableOopMap {rbp=NarrowOop [32]=Oop [44]=NarrowOop [64]=NarrowOop }
                      ;*invokevirtual poll {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.Disposer::disposeUnreachables@4 (line 173)
                      ; - com.sun.prism.impl.Disposer::cleanUp@26 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@473 (line 117)
  0x000001eb74bc6c34: c8d9 79ff 

  0x000001eb74bc6c38: ;   {other}
  0x000001eb74bc6c38: 0f1f 8400 | a833 007f | ba66 ffff | ff4c 8b54 | 2428 4c89 | 5424 2044 | 8b54 2440 | 4489 5424 
  0x000001eb74bc6c58: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc6c58: 2c66 90e8 

  0x000001eb74bc6c5c: ; ImmutableOopMap {rbp=Oop [32]=Oop [44]=NarrowOop [64]=NarrowOop }
                      ;*invokevirtual clear {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.Disposer::disposeUnreachables@16 (line 175)
                      ; - com.sun.prism.impl.Disposer::cleanUp@26 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@40 (line 117)
  0x000001eb74bc6c5c: a0d9 79ff 

  0x000001eb74bc6c60: ;   {other}
  0x000001eb74bc6c60: 0f1f 8400 | d033 0080 | bade ffff | ff4c 8b54 | 2428 4c89 | 5424 2044 | 8b54 2440 | 4489 5424 
  0x000001eb74bc6c80: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc6c80: 2866 90e8 

  0x000001eb74bc6c84: ; ImmutableOopMap {rbp=NarrowOop [32]=Oop [40]=NarrowOop [80]=Oop }
                      ;*invokevirtual remove {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.Disposer::disposeUnreachables@24 (line 176)
                      ; - com.sun.prism.impl.Disposer::cleanUp@26 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@40 (line 117)
  0x000001eb74bc6c84: 78d9 79ff 

  0x000001eb74bc6c88: ;   {other}
  0x000001eb74bc6c88: 0f1f 8400 | f833 0081 | bade ffff | ff4c 8b54 | 2428 4c89 | 5424 2044 | 8b5c 2440 | 458b d344 
  0x000001eb74bc6ca8: 8954 242c 

  0x000001eb74bc6cac: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc6cac: 6666 90e8 

  0x000001eb74bc6cb0: ; ImmutableOopMap {rbp=NarrowOop [32]=Oop [44]=NarrowOop [64]=NarrowOop }
                      ;*invokevirtual poll {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.Disposer::disposeUnreachables@4 (line 173)
                      ; - com.sun.prism.impl.Disposer::cleanUp@26 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@40 (line 117)
  0x000001eb74bc6cb0: 4cd9 79ff 

  0x000001eb74bc6cb4: ;   {other}
  0x000001eb74bc6cb4: 0f1f 8400 | 2434 0082 | baf6 ffff | ff48 8b6c | 2428 448b | 4424 4044 | 8944 2424 | 4c89 5c24 
  0x000001eb74bc6cd4: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc6cd4: 2866 90e8 

  0x000001eb74bc6cd8: ; ImmutableOopMap {rbp=Oop [36]=NarrowOop [40]=Oop [64]=NarrowOop }
                      ;*invokevirtual lock {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.lang.ref.ReferenceQueue::poll@13 (line 182)
                      ; - com.sun.prism.impl.Disposer::disposeUnreachables@4 (line 173)
                      ; - com.sun.prism.impl.Disposer::cleanUp@26 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@473 (line 117)
  0x000001eb74bc6cd8: 24d9 79ff 

  0x000001eb74bc6cdc: ;   {other}
  0x000001eb74bc6cdc: 0f1f 8400 | 4c34 0083 | baf6 ffff | ff48 8b6c | 2428 448b | 5424 4045 | 8bda 4489 

  0x000001eb74bc6cf8: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc6cf8: 5c24 24e8 

  0x000001eb74bc6cfc: ; ImmutableOopMap {rbp=Oop [36]=NarrowOop [64]=NarrowOop [80]=Oop }
                      ;*invokevirtual unlock {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.lang.ref.ReferenceQueue::poll@25 (line 186)
                      ; - com.sun.prism.impl.Disposer::disposeUnreachables@4 (line 173)
                      ; - com.sun.prism.impl.Disposer::cleanUp@26 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@473 (line 117)
  0x000001eb74bc6cfc: 00d9 79ff 

  0x000001eb74bc6d00: ;   {other}
  0x000001eb74bc6d00: 0f1f 8400 | 7034 0084 | baf6 ffff | ff48 8b6c | 2428 448b | 5424 4044 | 8954 2424 | 4c89 5c24 
  0x000001eb74bc6d20: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc6d20: 2866 90e8 

  0x000001eb74bc6d24: ; ImmutableOopMap {rbp=Oop [36]=NarrowOop [40]=Oop [64]=NarrowOop }
                      ;*invokevirtual lock {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.lang.ref.ReferenceQueue::poll@13 (line 182)
                      ; - com.sun.prism.impl.Disposer::disposeUnreachables@4 (line 173)
                      ; - com.sun.prism.impl.Disposer::cleanUp@26 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@40 (line 117)
  0x000001eb74bc6d24: d8d8 79ff 

  0x000001eb74bc6d28: ;   {other}
  0x000001eb74bc6d28: 0f1f 8400 | 9834 0085 | baf6 ffff | ff48 8b6c | 2428 448b | 5c24 4045 | 8bd3 4489 

  0x000001eb74bc6d44: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc6d44: 5424 24e8 

  0x000001eb74bc6d48: ; ImmutableOopMap {rbp=Oop [36]=NarrowOop [64]=NarrowOop [80]=Oop }
                      ;*invokevirtual unlock {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.lang.ref.ReferenceQueue::poll@25 (line 186)
                      ; - com.sun.prism.impl.Disposer::disposeUnreachables@4 (line 173)
                      ; - com.sun.prism.impl.Disposer::cleanUp@26 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@40 (line 117)
  0x000001eb74bc6d48: b4d8 79ff 

  0x000001eb74bc6d4c: ;   {other}
  0x000001eb74bc6d4c: 0f1f 8400 | bc34 0086 | bade ffff | ff48 8b6c | 2428 4489 

  0x000001eb74bc6d60: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc6d60: 5c24 20e8 

  0x000001eb74bc6d64: ; ImmutableOopMap {rbp=Oop [32]=NarrowOop }
                      ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.d3d.D3DTextureResource::isValid@11 (line 46)
                      ; - com.sun.prism.impl.BaseTexture::isSurfaceLost@4 (line 292)
                      ; - com.sun.prism.d3d.D3DSwapChain::lockResources@65 (line 143)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@236 (line 77)
  0x000001eb74bc6d64: 98d8 79ff 

  0x000001eb74bc6d68: ;   {other}
  0x000001eb74bc6d68: 0f1f 8400 | d834 0087 | bade ffff | ff48 8b6c | 2428 4889 

  0x000001eb74bc6d7c: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc6d7c: 4424 30e8 

  0x000001eb74bc6d80: ; ImmutableOopMap {rbp=Oop [48]=Oop [56]=NarrowOop [60]=NarrowOop [72]=Oop }
                      ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.d3d.D3DSwapChain::prepare@14 (line 61)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@355 (line 99)
  0x000001eb74bc6d80: 7cd8 79ff 

  0x000001eb74bc6d84: ;   {other}
  0x000001eb74bc6d84: 0f1f 8400 | f434 0088 | bade ffff | ff48 8b6c | 2428 448b | 4424 3844 | 8944 2420 | 4c8b 5c24 
  0x000001eb74bc6da4: 484c 895c | 2428 448b | 5c24 3c44 | 895c 2424 | 8944 2444 | 4489 5424 

  0x000001eb74bc6dbc: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc6dbc: 4866 90e8 

  0x000001eb74bc6dc0: ; ImmutableOopMap {rbp=Oop [32]=NarrowOop [36]=NarrowOop [40]=Oop [72]=NarrowOop [88]=Oop }
                      ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.d3d.D3DRTTexture::isMSAA@10 (line 180)
                      ; - com.sun.prism.d3d.D3DSwapChain::isMSAA@11 (line 184)
                      ; - com.sun.prism.d3d.D3DSwapChain::prepare@55 (line 69)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@355 (line 99)
  0x000001eb74bc6dc0: 3cd8 79ff 

  0x000001eb74bc6dc4: ;   {other}
  0x000001eb74bc6dc4: 0f1f 8400 | 3435 0089 | bade ffff | ff44 8b44 | 2440 4489 | 4424 2448 | 8944 2428 

  0x000001eb74bc6de0: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc6de0: 6666 90e8 

  0x000001eb74bc6de4: ; ImmutableOopMap {rbp=Oop [36]=NarrowOop [40]=Oop [64]=NarrowOop }
                      ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.Disposer::disposeUnreachables@27 (line 176)
                      ; - com.sun.prism.impl.Disposer::cleanUp@26 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@473 (line 117)
  0x000001eb74bc6de4: 18d8 79ff 

  0x000001eb74bc6de8: ;   {other}
  0x000001eb74bc6de8: 0f1f 8400 | 5835 008a | bade ffff | ff44 8b54 | 2440 4889 | 4424 2844 | 8954 2424 

  0x000001eb74bc6e04: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc6e04: 6666 90e8 

  0x000001eb74bc6e08: ; ImmutableOopMap {rbp=Oop [36]=NarrowOop [40]=Oop [64]=NarrowOop }
                      ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.Disposer::disposeUnreachables@27 (line 176)
                      ; - com.sun.prism.impl.Disposer::cleanUp@26 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@40 (line 117)
  0x000001eb74bc6e08: f4d7 79ff 

  0x000001eb74bc6e0c: ;   {other}
  0x000001eb74bc6e0c: 0f1f 8400 | 7c35 008b | bade ffff | ff48 8beb | 4c89 5424 | 2089 7c24 

  0x000001eb74bc6e24: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc6e24: 2866 90e8 

  0x000001eb74bc6e28: ; ImmutableOopMap {rbp=Oop [32]=Oop [40]=NarrowOop }
                      ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.BaseResourcePool$WeakLinkedList::getResource@7 (line 504)
                      ; - com.sun.prism.impl.BaseResourcePool::freeDisposalRequestedAndCheckResources@20 (line 282)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@523 (line 127)
  0x000001eb74bc6e28: d4d7 79ff 

  0x000001eb74bc6e2c: ;   {other}
  0x000001eb74bc6e2c: 0f1f 8400 | 9c35 008c | bade ffff | ff49 8be9 | 4c89 5c24 | 2089 5c24 

  0x000001eb74bc6e44: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc6e44: 2866 90e8 

  0x000001eb74bc6e48: ; ImmutableOopMap {rbp=Oop [32]=Oop [40]=NarrowOop }
                      ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.BaseResourcePool$WeakLinkedList::getResource@7 (line 504)
                      ; - com.sun.prism.impl.BaseResourcePool::freeDisposalRequestedAndCheckResources@20 (line 282)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@90 (line 127)
  0x000001eb74bc6e48: b4d7 79ff 

  0x000001eb74bc6e4c: ;   {other}
  0x000001eb74bc6e4c: 0f1f 8400 | bc35 008d | bade ffff | ff48 8beb | 4c89 5424 | 204c 894c | 2428 4489 

  0x000001eb74bc6e68: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc6e68: 4424 30e8 

  0x000001eb74bc6e6c: ; ImmutableOopMap {rbp=Oop [32]=Oop [40]=Oop [48]=NarrowOop }
                      ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.d3d.D3DTextureResource::isValid@11 (line 46)
                      ; - com.sun.prism.impl.ManagedResource::_isgone@30 (line 42)
                      ; - com.sun.prism.impl.BaseResourcePool::freeDisposalRequestedAndCheckResources@27 (line 283)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@523 (line 127)
  0x000001eb74bc6e6c: 90d7 79ff 

  0x000001eb74bc6e70: ;   {other}
  0x000001eb74bc6e70: 0f1f 8400 | e035 008e | bade ffff | ff49 8be9 | 4c89 5c24 | 204c 8944 | 2428 4489 

  0x000001eb74bc6e8c: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc6e8c: 5424 30e8 

  0x000001eb74bc6e90: ; ImmutableOopMap {rbp=Oop [32]=Oop [40]=Oop [48]=NarrowOop }
                      ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.d3d.D3DTextureResource::isValid@11 (line 46)
                      ; - com.sun.prism.impl.ManagedResource::_isgone@30 (line 42)
                      ; - com.sun.prism.impl.BaseResourcePool::freeDisposalRequestedAndCheckResources@27 (line 283)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@90 (line 127)
  0x000001eb74bc6e90: 6cd7 79ff 

  0x000001eb74bc6e94: ;   {other}
  0x000001eb74bc6e94: 0f1f 8400 | 0436 008f | ba45 ffff | ff48 8beb | 4c89 5424 | 204c 894c | 2428 4489 

  0x000001eb74bc6eb0: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc6eb0: 4424 30e8 

  0x000001eb74bc6eb4: ; ImmutableOopMap {rbp=Oop [32]=Oop [40]=Oop [48]=NarrowOop }
                      ;*ifnull {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.d3d.D3DTextureResource::isValid@4 (line 46)
                      ; - com.sun.prism.impl.ManagedResource::_isgone@30 (line 42)
                      ; - com.sun.prism.impl.BaseResourcePool::freeDisposalRequestedAndCheckResources@27 (line 283)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@523 (line 127)
  0x000001eb74bc6eb4: 48d7 79ff 

  0x000001eb74bc6eb8: ;   {other}
  0x000001eb74bc6eb8: 0f1f 8400 | 2836 0090 | ba45 ffff | ff49 8be9 | 4c89 5c24 | 204c 8944 | 2428 4489 

  0x000001eb74bc6ed4: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc6ed4: 5424 30e8 

  0x000001eb74bc6ed8: ; ImmutableOopMap {rbp=Oop [32]=Oop [40]=Oop [48]=NarrowOop }
                      ;*ifnull {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.d3d.D3DTextureResource::isValid@4 (line 46)
                      ; - com.sun.prism.impl.ManagedResource::_isgone@30 (line 42)
                      ; - com.sun.prism.impl.BaseResourcePool::freeDisposalRequestedAndCheckResources@27 (line 283)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@90 (line 127)
  0x000001eb74bc6ed8: 24d7 79ff 

  0x000001eb74bc6edc: ;   {other}
  0x000001eb74bc6edc: 0f1f 8400 | 4c36 0091 | 488b d8e9 | 61ea ffff | 488b d033 | edeb 41eb | 37eb 3548 | 8bd0 bd01 
  0x000001eb74bc6efc: 0000 00eb | 33eb 29eb | 27eb 2548 | 8bd0 bd01 | 0000 00eb | 2348 8bd0 | bd01 0000 | 00eb 1948 
  0x000001eb74bc6f1c: 8bd0 bd01 | 0000 00eb | 0f48 8bd0 | 33ed eb08 | 488b d0bd | 0100 0000 

  0x000001eb74bc6f34: ;   {oop(a 'java/lang/Class'{0x0000000706370650} = 'java/lang/System')}
  0x000001eb74bc6f34: 49ba 5006 | 3706 0700 | 0000 458b | 5278 4d8b | c249 c1e0 

  0x000001eb74bc6f48: ;   {optimized virtual_call}
  0x000001eb74bc6f48: 0366 90e8 

  0x000001eb74bc6f4c: ; ImmutableOopMap {[40]=Oop }
                      ;*invokevirtual printStackTrace {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@546 (line 115)
  0x000001eb74bc6f4c: 307b 79ff 

  0x000001eb74bc6f50: ;   {other}
  0x000001eb74bc6f50: 0f1f 8400 | c036 0092 

  0x000001eb74bc6f58: ;   {static_call}
  0x000001eb74bc6f58: 6666 90e8 

  0x000001eb74bc6f5c: ; ImmutableOopMap {[40]=Oop }
                      ;*invokestatic cleanUp {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@549 (line 117)
  0x000001eb74bc6f5c: 2081 79ff 

  0x000001eb74bc6f60: ;   {other}
  0x000001eb74bc6f60: 0f1f 8400 | d036 0093 | 4c8b 5c24 | 2845 8b53 | 2885 ed0f | 84ac 0000 | 0045 85d2 | 0f84 da00 
  0x000001eb74bc6f80: 0000 498b | eb4b 8d14 

  0x000001eb74bc6f88: ;   {optimized virtual_call}
  0x000001eb74bc6f88: d466 90e8 

  0x000001eb74bc6f8c: ; ImmutableOopMap {rbp=Oop }
                      ;*invokevirtual unlock {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@560 (line 120)
  0x000001eb74bc6f8c: f07a 79ff 

  0x000001eb74bc6f90: ;   {other}
  0x000001eb74bc6f90: 0f1f 8400 | 0037 0094 | 4c8b dd45 | 8b53 2845 | 85d2 0f84 | 8600 0000 | 478b 54d4 | 6c45 85d2 
  0x000001eb74bc6fb0: 0f84 8e00 | 0000 498b | eb4b 8d14 | d445 33c0 

  0x000001eb74bc6fc0: ;   {optimized virtual_call}
  0x000001eb74bc6fc0: 6666 90e8 

  0x000001eb74bc6fc4: ; ImmutableOopMap {rbp=Oop }
                      ;*invokevirtual setPainting {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@578 (line 124)
  0x000001eb74bc6fc4: b87a 79ff 

  0x000001eb74bc6fc8: ;   {other}
  0x000001eb74bc6fc8: 0f1f 8400 | 3837 0095 | 8b6d 3085 | ed74 3145 | 8b5c ec08 

  0x000001eb74bc6fdc: ;   {metadata('com/sun/prism/d3d/D3DResourceFactory')}
  0x000001eb74bc6fdc: 4181 fb00 | 680e 000f | 858b 0000 

  0x000001eb74bc6fe8: ;   {oop(a 'com/sun/prism/d3d/D3DVramPool'{0x0000000706a08910})}
  0x000001eb74bc6fe8: 0048 ba10 | 89a0 0607 | 0000 0041 | b801 0000 

  0x000001eb74bc6ff8: ;   {optimized virtual_call}
  0x000001eb74bc6ff8: 0066 90e8 

  0x000001eb74bc6ffc: ; ImmutableOopMap {}
                      ;*invokeinterface freeDisposalRequestedAndCheckResources {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@599 (line 127)
  0x000001eb74bc6ffc: 807a 79ff 

  0x000001eb74bc7000: ;   {other}
  0x000001eb74bc7000: 0f1f 8400 | 7037 0096 

  0x000001eb74bc7008: ;   {oop(a 'java/util/concurrent/locks/ReentrantLock'{0x0000000706a27c40})}
  0x000001eb74bc7008: 48ba 407c | a206 0700 

  0x000001eb74bc7010: ;   {optimized virtual_call}
  0x000001eb74bc7010: 0000 90e8 

  0x000001eb74bc7014: ; ImmutableOopMap {}
                      ;*invokevirtual unlock {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@607 (line 130)
  0x000001eb74bc7014: 687a 79ff 

  0x000001eb74bc7018: ;   {other}
  0x000001eb74bc7018: 0f1f 8400 | 8837 0097 | e944 e2ff | ff45 85d2 | 0f85 7aff | ffff baf6 | ffff ff49 

  0x000001eb74bc7034: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc7034: 8beb 90e8 

  0x000001eb74bc7038: ; ImmutableOopMap {rbp=Oop }
                      ;*invokevirtual getScene {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@567 (line 123)
  0x000001eb74bc7038: c4d5 79ff 

  0x000001eb74bc703c: ;   {other}
  0x000001eb74bc703c: 0f1f 8400 | ac37 0098 | ba5e ffff | ff49 8beb 

  0x000001eb74bc704c: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc704c: 6666 90e8 

  0x000001eb74bc7050: ; ImmutableOopMap {rbp=Oop }
                      ;*invokevirtual setPainting {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@578 (line 124)
  0x000001eb74bc7050: acd5 79ff 

  0x000001eb74bc7054: ;   {other}
  0x000001eb74bc7054: 0f1f 8400 | c437 0099 | baf6 ffff | ff49 8beb 

  0x000001eb74bc7064: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc7064: 6666 90e8 

  0x000001eb74bc7068: ; ImmutableOopMap {rbp=Oop }
                      ;*invokevirtual unlock {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@560 (line 120)
  0x000001eb74bc7068: 94d5 79ff 

  0x000001eb74bc706c: ;   {other}
  0x000001eb74bc706c: 0f1f 8400 | dc37 009a | badf ffff 

  0x000001eb74bc7078: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc7078: ff66 90e8 

  0x000001eb74bc707c: ; ImmutableOopMap {rbp=NarrowOop }
                      ;*invokeinterface getTextureResourcePool {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@593 (line 127)
  0x000001eb74bc707c: 80d5 79ff 

  0x000001eb74bc7080: ;   {other}
  0x000001eb74bc7080: 0f1f 8400 | f037 009b | 488b d8e9 | bde8 ffff | baf6 ffff 

  0x000001eb74bc7094: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc7094: ff66 90e8 

  0x000001eb74bc7098: ; ImmutableOopMap {rbp=Oop }
                      ;*invokevirtual isValid {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.ViewPainter::validateStageGraphics@4 (line 427)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@13 (line 52)
  0x000001eb74bc7098: 64d5 79ff 

  0x000001eb74bc709c: ;   {other}
  0x000001eb74bc709c: 0f1f 8400 | 0c38 009c | baf6 ffff | ff48 8b6c 

  0x000001eb74bc70ac: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc70ac: 2428 90e8 

  0x000001eb74bc70b0: ; ImmutableOopMap {rbp=Oop }
                      ;*invokevirtual testLostStateAndReset {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.d3d.D3DResourceFactory::isDeviceReady@17 (line 120)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@136 (line 71)
  0x000001eb74bc70b0: 4cd5 79ff 

  0x000001eb74bc70b4: ;   {other}
  0x000001eb74bc70b4: 0f1f 8400 | 2438 009d | baf6 ffff | ff48 8b6c 

  0x000001eb74bc70c4: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc70c4: 2428 90e8 

  0x000001eb74bc70c8: ; ImmutableOopMap {rbp=Oop }
                      ;*invokevirtual getRenderWidth {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.d3d.D3DSwapChain::lockResources@1 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@236 (line 77)
  0x000001eb74bc70c8: 34d5 79ff 

  0x000001eb74bc70cc: ;   {other}
  0x000001eb74bc70cc: 0f1f 8400 | 3c38 009e | baf6 ffff | ff48 8b6c 

  0x000001eb74bc70dc: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc70dc: 2428 90e8 

  0x000001eb74bc70e0: ; ImmutableOopMap {rbp=Oop }
                      ;*invokevirtual getContentWidth {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.d3d.D3DSwapChain::lockResources@8 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@236 (line 77)
  0x000001eb74bc70e0: 1cd5 79ff 

  0x000001eb74bc70e4: ;   {other}
  0x000001eb74bc70e4: 0f1f 8400 | 5438 009f | baf6 ffff | ff48 8b6c 

  0x000001eb74bc70f4: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc70f4: 2428 90e8 

  0x000001eb74bc70f8: ; ImmutableOopMap {rbp=Oop }
                      ;*invokevirtual lock {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.BaseTexture::lock@4 (line 252)
                      ; - com.sun.prism.d3d.D3DSwapChain::lockResources@58 (line 142)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@236 (line 77)
  0x000001eb74bc70f8: 04d5 79ff 

  0x000001eb74bc70fc: ;   {other}
  0x000001eb74bc70fc: 0f1f 8400 | 6c38 00a0 | baf6 ffff | ff48 8b6c 

  0x000001eb74bc710c: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc710c: 2428 90e8 

  0x000001eb74bc7110: ; ImmutableOopMap {rbp=Oop }
                      ;*invokevirtual getContext {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.d3d.D3DSwapChain::getContext@4 (line 130)
                      ; - com.sun.prism.d3d.D3DSwapChain::createGraphics@5 (line 148)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@304 (line 88)
  0x000001eb74bc7110: ecd4 79ff 

  0x000001eb74bc7114: ;   {other}
  0x000001eb74bc7114: 0f1f 8400 | 8438 00a1 | baf6 ffff | ff48 8b6c | 2428 c5fa | 1144 2420 | c5fa 1154 

  0x000001eb74bc7130: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc7130: 2424 90e8 

  0x000001eb74bc7134: ; ImmutableOopMap {rbp=Oop }
                      ;*invokeinterface scale {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.d3d.D3DSwapChain::createGraphics@21 (line 149)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@304 (line 88)
  0x000001eb74bc7134: c8d4 79ff 

  0x000001eb74bc7138: ;   {other}
  0x000001eb74bc7138: 0f1f 8400 | a838 00a2 | baf6 ffff | ff48 8b6c | 2428 4c89 

  0x000001eb74bc714c: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc714c: 4424 20e8 

  0x000001eb74bc7150: ; ImmutableOopMap {rbp=Oop [32]=Oop }
                      ;*invokevirtual getScene {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@315 (line 90)
  0x000001eb74bc7150: acd4 79ff 

  0x000001eb74bc7154: ;   {other}
  0x000001eb74bc7154: 0f1f 8400 | c438 00a3 | baf6 ffff | ff48 8b6c 

  0x000001eb74bc7164: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc7164: 2428 90e8 

  0x000001eb74bc7168: ; ImmutableOopMap {rbp=Oop [56]=NarrowOop }
                      ;*invokeinterface prepare {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@355 (line 99)
  0x000001eb74bc7168: 94d4 79ff 

  0x000001eb74bc716c: ;   {other}
  0x000001eb74bc716c: 0f1f 8400 | dc38 00a4 | baf6 ffff | ff48 8b6c 

  0x000001eb74bc717c: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc717c: 2428 90e8 

  0x000001eb74bc7180: ; ImmutableOopMap {rbp=Oop [56]=NarrowOop }
                      ;*invokevirtual getContext {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.d3d.D3DSwapChain::getContext@4 (line 130)
                      ; - com.sun.prism.d3d.D3DSwapChain::prepare@1 (line 59)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@355 (line 99)
  0x000001eb74bc7180: 7cd4 79ff 

  0x000001eb74bc7184: ;   {other}
  0x000001eb74bc7184: 0f1f 8400 | f438 00a5 | baf6 ffff | ff48 8b6c 

  0x000001eb74bc7194: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc7194: 2428 90e8 

  0x000001eb74bc7198: ; ImmutableOopMap {rbp=Oop [56]=NarrowOop }
                      ;*invokevirtual flushVertexBuffer {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.d3d.D3DSwapChain::prepare@6 (line 60)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@355 (line 99)
  0x000001eb74bc7198: 64d4 79ff 

  0x000001eb74bc719c: ;   {other}
  0x000001eb74bc719c: 0f1f 8400 | 0c39 00a6 | baf6 ffff | ff48 8b6c 

  0x000001eb74bc71ac: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc71ac: 2428 90e8 

  0x000001eb74bc71b0: ; ImmutableOopMap {rbp=Oop [56]=NarrowOop }
                      ;*invokevirtual flush {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.BaseContext::flushVertexBuffer@12 (line 107)
                      ; - com.sun.prism.d3d.D3DSwapChain::prepare@6 (line 60)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@355 (line 99)
  0x000001eb74bc71b0: 4cd4 79ff 

  0x000001eb74bc71b4: ;   {other}
  0x000001eb74bc71b4: 0f1f 8400 | 2439 00a7 | baf4 ffff | ff48 8b6c 

  0x000001eb74bc71c4: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc71c4: 2428 90e8 

  0x000001eb74bc71c8: ; ImmutableOopMap {rbp=Oop [56]=NarrowOop [60]=NarrowOop [72]=Oop }
                      ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.d3d.D3DSwapChain::prepare@14 (line 61)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@355 (line 99)
  0x000001eb74bc71c8: 34d4 79ff 

  0x000001eb74bc71cc: ;   {other}
  0x000001eb74bc71cc: 0f1f 8400 | 3c39 00a8 | baf6 ffff | ff48 8b6c 

  0x000001eb74bc71dc: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc71dc: 2428 90e8 

  0x000001eb74bc71e0: ; ImmutableOopMap {rbp=Oop [56]=NarrowOop }
                      ;*invokevirtual getContentWidth {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.d3d.D3DSwapChain::prepare@28 (line 65)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@355 (line 99)
  0x000001eb74bc71e0: 1cd4 79ff 

  0x000001eb74bc71e4: ;   {other}
  0x000001eb74bc71e4: 0f1f 8400 | 5439 00a9 | baf6 ffff | ff48 8b6c 

  0x000001eb74bc71f4: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc71f4: 2428 90e8 

  0x000001eb74bc71f8: ; ImmutableOopMap {rbp=Oop [56]=NarrowOop }
                      ;*invokevirtual getResource {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.d3d.D3DSwapChain::getPhysicalWidth@4 (line 98)
                      ; - com.sun.prism.d3d.D3DSwapChain::getContentWidth@1 (line 108)
                      ; - com.sun.prism.d3d.D3DSwapChain::prepare@43 (line 67)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@355 (line 99)
  0x000001eb74bc71f8: 04d4 79ff 

  0x000001eb74bc71fc: ;   {other}
  0x000001eb74bc71fc: 0f1f 8400 | 6c39 00aa | baf6 ffff | ff48 8b6c 

  0x000001eb74bc720c: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc720c: 2428 90e8 

  0x000001eb74bc7210: ; ImmutableOopMap {rbp=Oop [56]=NarrowOop }
                      ;*invokevirtual getResource {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.d3d.D3DSwapChain::getPhysicalHeight@4 (line 103)
                      ; - com.sun.prism.d3d.D3DSwapChain::getContentHeight@1 (line 113)
                      ; - com.sun.prism.d3d.D3DSwapChain::prepare@49 (line 68)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@355 (line 99)
  0x000001eb74bc7210: ecd3 79ff 

  0x000001eb74bc7214: ;   {other}
  0x000001eb74bc7214: 0f1f 8400 | 8439 00ab | ba5e ffff | ff48 8b6c 

  0x000001eb74bc7224: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc7224: 2428 90e8 

  0x000001eb74bc7228: ; ImmutableOopMap {rbp=Oop [56]=NarrowOop }
                      ;*invokevirtual getResource {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.d3d.D3DRTTexture::isMSAA@7 (line 180)
                      ; - com.sun.prism.d3d.D3DSwapChain::isMSAA@11 (line 184)
                      ; - com.sun.prism.d3d.D3DSwapChain::prepare@55 (line 69)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@355 (line 99)
  0x000001eb74bc7228: d4d3 79ff 

  0x000001eb74bc722c: ;   {other}
  0x000001eb74bc722c: 0f1f 8400 | 9c39 00ac | baf4 ffff | ff48 8b6c | 2428 448b | 5c24 3844 | 895c 2420 | 448b 5424 
  0x000001eb74bc724c: 3c44 8954 | 2424 8944 

  0x000001eb74bc7254: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc7254: 2444 90e8 

  0x000001eb74bc7258: ; ImmutableOopMap {rbp=Oop [32]=NarrowOop [36]=NarrowOop [72]=Oop [88]=Oop }
                      ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.d3d.D3DRTTexture::isMSAA@10 (line 180)
                      ; - com.sun.prism.d3d.D3DSwapChain::isMSAA@11 (line 184)
                      ; - com.sun.prism.d3d.D3DSwapChain::prepare@55 (line 69)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@355 (line 99)
  0x000001eb74bc7258: a4d3 79ff 

  0x000001eb74bc725c: ;   {other}
  0x000001eb74bc725c: 0f1f 8400 | cc39 00ad | baf6 ffff | ff48 8b6c 

  0x000001eb74bc726c: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc726c: 2428 90e8 

  0x000001eb74bc7270: ; ImmutableOopMap {rbp=Oop [56]=NarrowOop }
                      ;*invokevirtual flush {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.BaseContext::flushVertexBuffer@12 (line 107)
                      ; - com.sun.prism.d3d.D3DSwapChain::prepare@121 (line 76)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@355 (line 99)
  0x000001eb74bc7270: 8cd3 79ff 

  0x000001eb74bc7274: ;   {other}
  0x000001eb74bc7274: 0f1f 8400 | e439 00ae | baf6 ffff | ff48 8b6c 

  0x000001eb74bc7284: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc7284: 2428 90e8 

  0x000001eb74bc7288: ; ImmutableOopMap {rbp=Oop [56]=NarrowOop }
                      ;*invokevirtual unlock {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.d3d.D3DSwapChain::prepare@128 (line 77)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@355 (line 99)
  0x000001eb74bc7288: 74d3 79ff 

  0x000001eb74bc728c: ;   {other}
  0x000001eb74bc728c: 0f1f 8400 | fc39 00af | baf6 ffff | ff48 8b6c 

  0x000001eb74bc729c: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc729c: 2428 90e8 

  0x000001eb74bc72a0: ; ImmutableOopMap {rbp=Oop [56]=NarrowOop }
                      ;*invokevirtual unlock {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.BaseTexture::unlock@4 (line 272)
                      ; - com.sun.prism.d3d.D3DSwapChain::prepare@128 (line 77)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@355 (line 99)
  0x000001eb74bc72a0: 5cd3 79ff 

  0x000001eb74bc72a4: ;   {other}
  0x000001eb74bc72a4: 0f1f 8400 | 143a 00b0 | baf6 ffff | ff48 8b6c 

  0x000001eb74bc72b4: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc72b4: 2428 90e8 

  0x000001eb74bc72b8: ; ImmutableOopMap {rbp=Oop }
                      ;*invokeinterface present {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@451 (line 107)
  0x000001eb74bc72b8: 44d3 79ff 

  0x000001eb74bc72bc: ;   {other}
  0x000001eb74bc72bc: 0f1f 8400 | 2c3a 00b1 | baf6 ffff | ff48 8b6c 

  0x000001eb74bc72cc: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc72cc: 2428 90e8 

  0x000001eb74bc72d0: ; ImmutableOopMap {rbp=Oop }
                      ;*invokevirtual getContext {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.d3d.D3DSwapChain::getContext@4 (line 130)
                      ; - com.sun.prism.d3d.D3DSwapChain::present@1 (line 83)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@451 (line 107)
  0x000001eb74bc72d0: 2cd3 79ff 

  0x000001eb74bc72d4: ;   {other}
  0x000001eb74bc72d4: 0f1f 8400 | 443a 00b2 | baf6 ffff | ff48 8b6c 

  0x000001eb74bc72e4: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc72e4: 2428 90e8 

  0x000001eb74bc72e8: ; ImmutableOopMap {rbp=Oop }
                      ;*invokevirtual isDisposed {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.d3d.D3DSwapChain::present@6 (line 84)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@451 (line 107)
  0x000001eb74bc72e8: 14d3 79ff 

  0x000001eb74bc72ec: ;   {other}
  0x000001eb74bc72ec: 0f1f 8400 | 5c3a 00b3 | baf6 ffff | ff48 8b6c 

  0x000001eb74bc72fc: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc72fc: 2428 90e8 

  0x000001eb74bc7300: ; ImmutableOopMap {rbp=Oop }
                      ;*invokevirtual startsWith {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.Disposer::cleanUp@8 (line 131)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@473 (line 117)
  0x000001eb74bc7300: fcd2 79ff 

  0x000001eb74bc7304: ;   {other}
  0x000001eb74bc7304: 0f1f 8400 | 743a 00b4 | baf6 ffff | ff48 8b6c 

  0x000001eb74bc7314: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc7314: 2428 90e8 

  0x000001eb74bc7318: ; ImmutableOopMap {rbp=Oop }
                      ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.lang.String::length@4 (line 1519)
                      ; - java.lang.String::startsWith@6 (line 2285)
                      ; - java.lang.String::startsWith@3 (line 2327)
                      ; - com.sun.prism.impl.Disposer::cleanUp@8 (line 131)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@473 (line 117)
  0x000001eb74bc7318: e4d2 79ff 

  0x000001eb74bc731c: ;   {other}
  0x000001eb74bc731c: 0f1f 8400 | 8c3a 00b5 | baf6 ffff | ff48 8b6c | 2428 448b | 5424 4045 | 8bda 4489 

  0x000001eb74bc7338: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc7338: 5c24 24e8 

  0x000001eb74bc733c: ; ImmutableOopMap {rbp=Oop [36]=NarrowOop [64]=NarrowOop }
                      ;*invokevirtual poll {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.Disposer::disposeUnreachables@4 (line 173)
                      ; - com.sun.prism.impl.Disposer::cleanUp@26 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@473 (line 117)
  0x000001eb74bc733c: c0d2 79ff 

  0x000001eb74bc7340: ;   {other}
  0x000001eb74bc7340: 0f1f 8400 | b03a 00b6 | baf6 ffff 

  0x000001eb74bc734c: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc734c: ff66 90e8 

  0x000001eb74bc7350: ; ImmutableOopMap {rbp=NarrowOop [40]=Oop }
                      ;*invokevirtual isEmpty {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.Disposer::processDisposalQueue@4 (line 189)
                      ; - com.sun.prism.impl.Disposer::cleanUp@32 (line 136)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@473 (line 117)
  0x000001eb74bc7350: acd2 79ff 

  0x000001eb74bc7354: ;   {other}
  0x000001eb74bc7354: 0f1f 8400 | c43a 00b7 | baf6 ffff | ff49 8beb 

  0x000001eb74bc7364: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc7364: 6666 90e8 

  0x000001eb74bc7368: ; ImmutableOopMap {rbp=Oop }
                      ;*invokevirtual unlock {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@484 (line 120)
  0x000001eb74bc7368: 94d2 79ff 

  0x000001eb74bc736c: ;   {other}
  0x000001eb74bc736c: 0f1f 8400 | dc3a 00b8 | baf6 ffff 

  0x000001eb74bc7378: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc7378: ff66 90e8 

  0x000001eb74bc737c: ; ImmutableOopMap {rbp=Oop }
                      ;*invokevirtual getScene {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@491 (line 123)
  0x000001eb74bc737c: 80d2 79ff 

  0x000001eb74bc7380: ;   {other}
  0x000001eb74bc7380: 0f1f 8400 | f03a 00b9 | ba5e ffff 

  0x000001eb74bc738c: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc738c: ff66 90e8 

  0x000001eb74bc7390: ; ImmutableOopMap {rbp=Oop }
                      ;*invokevirtual setPainting {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@502 (line 124)
  0x000001eb74bc7390: 6cd2 79ff 

  0x000001eb74bc7394: ;   {other}
  0x000001eb74bc7394: 0f1f 8400 | 043b 00ba | baf6 ffff 

  0x000001eb74bc73a0: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc73a0: ff66 90e8 

  0x000001eb74bc73a4: ; ImmutableOopMap {}
                      ;*getfield next {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.impl.BaseResourcePool::freeDisposalRequestedAndCheckResources@8 (line 280)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@523 (line 127)
  0x000001eb74bc73a4: 58d2 79ff 

  0x000001eb74bc73a8: ;   {other}
  0x000001eb74bc73a8: 0f1f 8400 | 183b 00bb | baf6 ffff 

  0x000001eb74bc73b4: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc73b4: ff66 90e8 

  0x000001eb74bc73b8: ; ImmutableOopMap {}
                      ;*invokevirtual release {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.concurrent.locks.ReentrantLock::unlock@5 (line 494)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@531 (line 130)
  0x000001eb74bc73b8: 44d2 79ff 

  0x000001eb74bc73bc: ;   {other}
  0x000001eb74bc73bc: 0f1f 8400 | 2c3b 00bc | baf6 ffff | ff48 8b6c | 2428 897c | 2424 4489 | 5c24 2844 | 894c 242c 
  0x000001eb74bc73dc: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc73dc: 6666 90e8 

  0x000001eb74bc73e0: ; ImmutableOopMap {rbp=Oop [40]=NarrowOop [44]=NarrowOop [56]=NarrowOop }
                      ;*invokevirtual drawQuads {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.VertexBuffer::flush@23 (line 98)
                      ; - com.sun.prism.impl.BaseContext::flushVertexBuffer@12 (line 107)
                      ; - com.sun.prism.d3d.D3DSwapChain::prepare@6 (line 60)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@355 (line 99)
  0x000001eb74bc73e0: 1cd2 79ff 

  0x000001eb74bc73e4: ;   {other}
  0x000001eb74bc73e4: 0f1f 8400 | 543b 00bd | baf6 ffff | ff48 8b6c | 2428 897c | 2424 895c | 2428 4489 

  0x000001eb74bc7400: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc7400: 4424 2ce8 

  0x000001eb74bc7404: ; ImmutableOopMap {rbp=Oop [40]=NarrowOop [44]=NarrowOop [56]=NarrowOop }
                      ;*invokevirtual drawQuads {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.VertexBuffer::flush@23 (line 98)
                      ; - com.sun.prism.impl.BaseContext::flushVertexBuffer@12 (line 107)
                      ; - com.sun.prism.d3d.D3DSwapChain::prepare@121 (line 76)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@355 (line 99)
  0x000001eb74bc7404: f8d1 79ff 

  0x000001eb74bc7408: ;   {other}
  0x000001eb74bc7408: 0f1f 8400 | 783b 00be | 488b d8e9 | 35e5 ffff | ba45 ffff | ff44 8954 

  0x000001eb74bc7420: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc7420: 2428 90e8 

  0x000001eb74bc7424: ; ImmutableOopMap {rbp=Oop [40]=NarrowOop }
                      ;*ifnull {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.tk.quantum.SceneState::isValid@11 (line 86)
                      ; - com.sun.javafx.tk.quantum.ViewPainter::validateStageGraphics@4 (line 427)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@13 (line 52)
  0x000001eb74bc7424: d8d1 79ff 

  0x000001eb74bc7428: ;   {other}
  0x000001eb74bc7428: 0f1f 8400 | 983b 00bf | ba45 ffff | ff48 8b6c | 2428 4489 

  0x000001eb74bc743c: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc743c: 5424 20e8 

  0x000001eb74bc7440: ; ImmutableOopMap {rbp=Oop [32]=NarrowOop }
                      ;*ifnonnull {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.tk.quantum.PresentingPainter::run@115 (line 68)
  0x000001eb74bc7440: bcd1 79ff 

  0x000001eb74bc7444: ;   {other}
  0x000001eb74bc7444: 0f1f 8400 | b43b 00c0 | ba45 ffff | ff48 8b6c | 2428 4489 

  0x000001eb74bc7458: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc7458: 5424 20e8 

  0x000001eb74bc745c: ; ImmutableOopMap {rbp=Oop [32]=NarrowOop }
                      ;*ifnull {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.tk.quantum.PresentingPainter::run@225 (line 77)
  0x000001eb74bc745c: a0d1 79ff 

  0x000001eb74bc7460: ;   {other}
  0x000001eb74bc7460: 0f1f 8400 | d03b 00c1 | ba45 ffff | ff48 8b6c | 2428 4489 

  0x000001eb74bc7474: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc7474: 5c24 20e8 

  0x000001eb74bc7478: ; ImmutableOopMap {rbp=Oop [32]=NarrowOop }
                      ;*ifnull {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.d3d.D3DTextureResource::isValid@4 (line 46)
                      ; - com.sun.prism.impl.BaseTexture::isSurfaceLost@4 (line 292)
                      ; - com.sun.prism.d3d.D3DSwapChain::lockResources@65 (line 143)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@236 (line 77)
  0x000001eb74bc7478: 84d1 79ff 

  0x000001eb74bc747c: ;   {other}
  0x000001eb74bc747c: 0f1f 8400 | ec3b 00c2 | ba45 ffff | ff48 8b6c | 2428 448b | 5424 3844 | 8954 2420 | 4c8b 5424 
  0x000001eb74bc749c: 484c 8954 | 2428 448b | 5424 3c44 | 8954 2424 | 8944 2444 | 897c 2448 

  0x000001eb74bc74b4: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc74b4: 6666 90e8 

  0x000001eb74bc74b8: ; ImmutableOopMap {rbp=Oop [32]=NarrowOop [36]=NarrowOop [40]=Oop [72]=NarrowOop [88]=Oop }
                      ;*ifnull {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.d3d.D3DSwapChain::isMSAA@4 (line 184)
                      ; - com.sun.prism.d3d.D3DSwapChain::prepare@55 (line 69)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@355 (line 99)
  0x000001eb74bc74b8: 44d1 79ff 

  0x000001eb74bc74bc: ;   {other}
  0x000001eb74bc74bc: 0f1f 8400 | 2c3c 00c3 | ba45 ffff | ff49 8beb | 894c 2420 

  0x000001eb74bc74d0: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc74d0: 6666 90e8 

  0x000001eb74bc74d4: ; ImmutableOopMap {rbp=Oop [32]=NarrowOop }
                      ;*ifnull {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.PresentableState::unlock@4 (line 296)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@484 (line 120)
  0x000001eb74bc74d4: 28d1 79ff 

  0x000001eb74bc74d8: ;   {other}
  0x000001eb74bc74d8: 0f1f 8400 | 483c 00c4 | ba45 ffff | ff41 8bea 

  0x000001eb74bc74e8: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc74e8: 6666 90e8 

  0x000001eb74bc74ec: ; ImmutableOopMap {rbp=NarrowOop }
                      ;*ifnull {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.tk.quantum.PresentingPainter::run@510 (line 126)
  0x000001eb74bc74ec: 10d1 79ff 

  0x000001eb74bc74f0: ;   {other}
  0x000001eb74bc74f0: 0f1f 8400 | 603c 00c5 | baf6 ffff | ff48 8b6c 

  0x000001eb74bc7500: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc7500: 2428 90e8 

  0x000001eb74bc7504: ; ImmutableOopMap {rbp=Oop }
                      ;*invokevirtual startsWith {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.Disposer::cleanUp@8 (line 131)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@40 (line 117)
  0x000001eb74bc7504: f8d0 79ff 

  0x000001eb74bc7508: ;   {other}
  0x000001eb74bc7508: 0f1f 8400 | 783c 00c6 | baf6 ffff | ff48 8b6c 

  0x000001eb74bc7518: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc7518: 2428 90e8 

  0x000001eb74bc751c: ; ImmutableOopMap {rbp=Oop }
                      ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.lang.String::length@4 (line 1519)
                      ; - java.lang.String::startsWith@6 (line 2285)
                      ; - java.lang.String::startsWith@3 (line 2327)
                      ; - com.sun.prism.impl.Disposer::cleanUp@8 (line 131)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@40 (line 117)
  0x000001eb74bc751c: e0d0 79ff 

  0x000001eb74bc7520: ;   {other}
  0x000001eb74bc7520: 0f1f 8400 | 903c 00c7 | baf6 ffff | ff48 8b6c | 2428 458b | d344 8954 

  0x000001eb74bc7538: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc7538: 2424 90e8 

  0x000001eb74bc753c: ; ImmutableOopMap {rbp=Oop [36]=NarrowOop [64]=NarrowOop }
                      ;*invokevirtual poll {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.Disposer::disposeUnreachables@4 (line 173)
                      ; - com.sun.prism.impl.Disposer::cleanUp@26 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@40 (line 117)
  0x000001eb74bc753c: c0d0 79ff 

  0x000001eb74bc7540: ;   {other}
  0x000001eb74bc7540: 0f1f 8400 | b03c 00c8 | baf6 ffff | ff48 8b6c | 2428 4489 

  0x000001eb74bc7554: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc7554: 4c24 20e8 

  0x000001eb74bc7558: ; ImmutableOopMap {rbp=Oop [32]=NarrowOop }
                      ;*invokevirtual isEmpty {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.Disposer::processDisposalQueue@4 (line 189)
                      ; - com.sun.prism.impl.Disposer::cleanUp@32 (line 136)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@40 (line 117)
  0x000001eb74bc7558: a4d0 79ff 

  0x000001eb74bc755c: ;   {other}
  0x000001eb74bc755c: 0f1f 8400 | cc3c 00c9 | baf6 ffff | ff49 8be9 

  0x000001eb74bc756c: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc756c: 6666 90e8 

  0x000001eb74bc7570: ; ImmutableOopMap {rbp=Oop }
                      ;*invokevirtual getScene {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@58 (line 123)
  0x000001eb74bc7570: 8cd0 79ff 

  0x000001eb74bc7574: ;   {other}
  0x000001eb74bc7574: 0f1f 8400 | e43c 00ca | ba5e ffff | ff49 8be9 

  0x000001eb74bc7584: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc7584: 6666 90e8 

  0x000001eb74bc7588: ; ImmutableOopMap {rbp=Oop }
                      ;*invokevirtual setPainting {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@69 (line 124)
  0x000001eb74bc7588: 74d0 79ff 

  0x000001eb74bc758c: ;   {other}
  0x000001eb74bc758c: 0f1f 8400 | fc3c 00cb | baf6 ffff 

  0x000001eb74bc7598: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc7598: ff66 90e8 

  0x000001eb74bc759c: ; ImmutableOopMap {}
                      ;*getfield next {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.impl.BaseResourcePool::freeDisposalRequestedAndCheckResources@8 (line 280)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@90 (line 127)
  0x000001eb74bc759c: 60d0 79ff 

  0x000001eb74bc75a0: ;   {other}
  0x000001eb74bc75a0: 0f1f 8400 | 103d 00cc | baf6 ffff 

  0x000001eb74bc75ac: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc75ac: ff66 90e8 

  0x000001eb74bc75b0: ; ImmutableOopMap {}
                      ;*invokevirtual release {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.concurrent.locks.ReentrantLock::unlock@5 (line 494)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@98 (line 130)
  0x000001eb74bc75b0: 4cd0 79ff 

  0x000001eb74bc75b4: ;   {other}
  0x000001eb74bc75b4: 0f1f 8400 | 243d 00cd | 488b d8e9 | 89e3 ffff | ba45 ffff 

  0x000001eb74bc75c8: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc75c8: ff66 90e8 

  0x000001eb74bc75cc: ; ImmutableOopMap {rbp=NarrowOop }
                      ;*ifnull {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.tk.quantum.PresentingPainter::run@77 (line 126)
  0x000001eb74bc75cc: 30d0 79ff 

  0x000001eb74bc75d0: ;   {other}
  0x000001eb74bc75d0: 0f1f 8400 | 403d 00ce | 488b d8e9 | 6de3 ffff | 488b d8e9 | 65e3 ffff | ba45 ffff 

  0x000001eb74bc75ec: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc75ec: ff66 90e8 

  0x000001eb74bc75f0: ; ImmutableOopMap {rbp=NarrowOop }
                      ;*ifnull {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.concurrent.locks.LockSupport::unpark@1 (line 177)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::signalNext@30 (line 645)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::release@12 (line 1060)
                      ; - java.util.concurrent.locks.ReentrantLock::unlock@5 (line 494)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@531 (line 130)
  0x000001eb74bc75f0: 0cd0 79ff 

  0x000001eb74bc75f4: ;   {other}
  0x000001eb74bc75f4: 0f1f 8400 | 643d 00cf | ba45 ffff 

  0x000001eb74bc7600: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc7600: ff66 90e8 

  0x000001eb74bc7604: ; ImmutableOopMap {rbp=NarrowOop }
                      ;*ifnull {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.concurrent.locks.LockSupport::unpark@1 (line 177)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::signalNext@30 (line 645)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::release@12 (line 1060)
                      ; - java.util.concurrent.locks.ReentrantLock::unlock@5 (line 494)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@98 (line 130)
  0x000001eb74bc7604: f8cf 79ff 

  0x000001eb74bc7608: ;   {other}
  0x000001eb74bc7608: 0f1f 8400 | 783d 00d0 | 4889 4424 

  0x000001eb74bc7614: ;   {static_call}
  0x000001eb74bc7614: 2066 90e8 

  0x000001eb74bc7618: ; ImmutableOopMap {[32]=Oop [40]=Oop }
                      ;*invokestatic cleanUp {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@615 (line 117)
  0x000001eb74bc7618: 647a 79ff 

  0x000001eb74bc761c: ;   {other}
  0x000001eb74bc761c: 0f1f 8400 | 8c3d 00d1 | 4c8b 5c24 | 2845 8b53 | 2885 ed0f | 84b7 0000 | 0045 85d2 | 0f84 e600 
  0x000001eb74bc763c: 0000 498b | eb4b 8d14 

  0x000001eb74bc7644: ;   {optimized virtual_call}
  0x000001eb74bc7644: d466 90e8 

  0x000001eb74bc7648: ; ImmutableOopMap {rbp=Oop [32]=Oop }
                      ;*invokevirtual unlock {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@626 (line 120)
  0x000001eb74bc7648: 3474 79ff 

  0x000001eb74bc764c: ;   {other}
  0x000001eb74bc764c: 0f1f 8400 | bc3d 00d2 | 4c8b dd45 | 8b53 2845 | 85d2 0f84 | 9100 0000 | 478b 54d4 | 6c45 85d2 
  0x000001eb74bc766c: 0f84 9a00 | 0000 498b | eb4b 8d14 | d445 33c0 

  0x000001eb74bc767c: ;   {optimized virtual_call}
  0x000001eb74bc767c: 6666 90e8 

  0x000001eb74bc7680: ; ImmutableOopMap {rbp=Oop [32]=Oop }
                      ;*invokevirtual setPainting {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@644 (line 124)
  0x000001eb74bc7680: fc73 79ff 

  0x000001eb74bc7684: ;   {other}
  0x000001eb74bc7684: 0f1f 8400 | f43d 00d3 | 8b6d 3085 | ed74 3545 | 8b54 ec08 

  0x000001eb74bc7698: ;   {metadata('com/sun/prism/d3d/D3DResourceFactory')}
  0x000001eb74bc7698: 4181 fa00 | 680e 000f | 8597 0000 

  0x000001eb74bc76a4: ;   {oop(a 'com/sun/prism/d3d/D3DVramPool'{0x0000000706a08910})}
  0x000001eb74bc76a4: 0048 ba10 | 89a0 0607 | 0000 0041 | b801 0000 | 0048 8b6c 

  0x000001eb74bc76b8: ;   {optimized virtual_call}
  0x000001eb74bc76b8: 2420 90e8 

  0x000001eb74bc76bc: ; ImmutableOopMap {rbp=Oop [32]=Oop }
                      ;*invokeinterface freeDisposalRequestedAndCheckResources {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@665 (line 127)
  0x000001eb74bc76bc: c073 79ff 

  0x000001eb74bc76c0: ;   {other}
  0x000001eb74bc76c0: 0f1f 8400 | 303e 00d4 

  0x000001eb74bc76c8: ;   {oop(a 'java/util/concurrent/locks/ReentrantLock'{0x0000000706a27c40})}
  0x000001eb74bc76c8: 48ba 407c | a206 0700 | 0000 488b 

  0x000001eb74bc76d4: ;   {optimized virtual_call}
  0x000001eb74bc76d4: 6c24 20e8 

  0x000001eb74bc76d8: ; ImmutableOopMap {rbp=Oop }
                      ;*invokevirtual unlock {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@673 (line 130)
  0x000001eb74bc76d8: a473 79ff 

  0x000001eb74bc76dc: ;   {other}
  0x000001eb74bc76dc: 0f1f 8400 | 4c3e 00d5 | 488b dde9 | 61e2 ffff | 4585 d20f | 856f ffff | ffba f6ff | ffff 498b 
  0x000001eb74bc76fc: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc76fc: eb66 90e8 

  0x000001eb74bc7700: ; ImmutableOopMap {rbp=Oop [32]=Oop }
                      ;*invokevirtual getScene {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@633 (line 123)
  0x000001eb74bc7700: fcce 79ff 

  0x000001eb74bc7704: ;   {other}
  0x000001eb74bc7704: 0f1f 8400 | 743e 00d6 | ba5e ffff | ff49 8beb 

  0x000001eb74bc7714: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc7714: 6666 90e8 

  0x000001eb74bc7718: ; ImmutableOopMap {rbp=Oop [32]=Oop }
                      ;*invokevirtual setPainting {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@644 (line 124)
  0x000001eb74bc7718: e4ce 79ff 

  0x000001eb74bc771c: ;   {other}
  0x000001eb74bc771c: 0f1f 8400 | 8c3e 00d7 | baf6 ffff | ff49 8beb 

  0x000001eb74bc772c: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc772c: 6666 90e8 

  0x000001eb74bc7730: ; ImmutableOopMap {rbp=Oop [32]=Oop }
                      ;*invokevirtual unlock {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@626 (line 120)
  0x000001eb74bc7730: ccce 79ff 

  0x000001eb74bc7734: ;   {other}
  0x000001eb74bc7734: 0f1f 8400 | a43e 00d8 | badf ffff 

  0x000001eb74bc7740: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc7740: ff66 90e8 

  0x000001eb74bc7744: ; ImmutableOopMap {rbp=NarrowOop [32]=Oop }
                      ;*invokeinterface getTextureResourcePool {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@659 (line 127)
  0x000001eb74bc7744: b8ce 79ff 

  0x000001eb74bc7748: ;   {other}
  0x000001eb74bc7748: 0f1f 8400 | b83e 00d9 | 488b d8e9 | f5e1 ffff | 488b d8e9 | ede1 ffff | 488b d8e9 | e5e1 ffff 
  0x000001eb74bc7768: 488b d8e9 | dde1 ffff | 488b d8e9 | d5e1 ffff | baf6 ffff | ff48 8b6c | 2428 448b | 5424 4045 
  0x000001eb74bc7788: 8bda 4489 

  0x000001eb74bc778c: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc778c: 5c24 24e8 

  0x000001eb74bc7790: ; ImmutableOopMap {rbp=Oop [36]=NarrowOop [64]=NarrowOop [80]=Oop }
                      ;*invokevirtual remove {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.Disposer::disposeUnreachables@24 (line 176)
                      ; - com.sun.prism.impl.Disposer::cleanUp@26 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@473 (line 117)
  0x000001eb74bc7790: 6cce 79ff 

  0x000001eb74bc7794: ;   {other}
  0x000001eb74bc7794: 0f1f 8400 | 043f 00da | baf4 ffff | ff44 8b54 | 2440 458b | da44 895c 

  0x000001eb74bc77ac: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc77ac: 2424 90e8 

  0x000001eb74bc77b0: ; ImmutableOopMap {rbp=Oop [36]=NarrowOop [64]=NarrowOop }
                      ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.Disposer::disposeUnreachables@27 (line 176)
                      ; - com.sun.prism.impl.Disposer::cleanUp@26 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@473 (line 117)
  0x000001eb74bc77b0: 4cce 79ff 

  0x000001eb74bc77b4: ;   {other}
  0x000001eb74bc77b4: 0f1f 8400 | 243f 00db | baf6 ffff | ff48 8b6c | 2428 4489 

  0x000001eb74bc77c8: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc77c8: 5c24 24e8 

  0x000001eb74bc77cc: ; ImmutableOopMap {rbp=Oop [36]=NarrowOop [64]=NarrowOop }
                      ;*invokevirtual poll {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.Disposer::disposeUnreachables@4 (line 173)
                      ; - com.sun.prism.impl.Disposer::cleanUp@26 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@473 (line 117)
  0x000001eb74bc77cc: 30ce 79ff 

  0x000001eb74bc77d0: ;   {other}
  0x000001eb74bc77d0: 0f1f 8400 | 403f 00dc | baf6 ffff | ff48 8b6c | 2428 4489 

  0x000001eb74bc77e4: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc77e4: 5424 20e8 

  0x000001eb74bc77e8: ; ImmutableOopMap {rbp=Oop [32]=NarrowOop [80]=Oop }
                      ;*invokevirtual remove {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.Disposer::disposeUnreachables@24 (line 176)
                      ; - com.sun.prism.impl.Disposer::cleanUp@26 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@40 (line 117)
  0x000001eb74bc77e8: 14ce 79ff 

  0x000001eb74bc77ec: ;   {other}
  0x000001eb74bc77ec: 0f1f 8400 | 5c3f 00dd | baf4 ffff | ff44 8b5c | 2440 458b | d344 8954 

  0x000001eb74bc7804: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc7804: 2424 90e8 

  0x000001eb74bc7808: ; ImmutableOopMap {rbp=Oop [36]=NarrowOop [64]=NarrowOop }
                      ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.Disposer::disposeUnreachables@27 (line 176)
                      ; - com.sun.prism.impl.Disposer::cleanUp@26 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@40 (line 117)
  0x000001eb74bc7808: f4cd 79ff 

  0x000001eb74bc780c: ;   {other}
  0x000001eb74bc780c: 0f1f 8400 | 7c3f 00de | baf6 ffff | ff48 8b6c | 2428 448b | 5424 4044 | 8954 2424 

  0x000001eb74bc7828: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc7828: 6666 90e8 

  0x000001eb74bc782c: ; ImmutableOopMap {rbp=Oop [36]=NarrowOop [64]=NarrowOop }
                      ;*invokevirtual poll {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.Disposer::disposeUnreachables@4 (line 173)
                      ; - com.sun.prism.impl.Disposer::cleanUp@26 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@40 (line 117)
  0x000001eb74bc782c: d0cd 79ff 

  0x000001eb74bc7830: ;   {other}
  0x000001eb74bc7830: 0f1f 8400 | a03f 00df | 488b d8e9 | 0de1 ffff | 488b d8e9 | 05e1 ffff | 488b d8e9 | fde0 ffff 
  0x000001eb74bc7850: 488b d8e9 | f5e0 ffff | 488b d8e9 | ede0 ffff | 4c8b d0eb | 4c48 8bd8 | e987 0100 | 004c 8bd0 
  0x000001eb74bc7870: eb3f 4c8b | d0eb 3a48 | 8944 2430 | 448b 5518 | 4585 d20f | 844f 0200 | 004b 8d14 | d448 8b6c 
  0x000001eb74bc7890: 2428 4c8b | 5424 484c | 8954 2428 

  0x000001eb74bc789c: ;   {optimized virtual_call}
  0x000001eb74bc789c: 6666 90e8 

  0x000001eb74bc78a0: ; ImmutableOopMap {rbp=Oop [40]=Oop [48]=Oop [72]=Oop }
                      ;*invokevirtual unlock {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.lang.ref.ReferenceQueue::poll@35 (line 186)
                      ; - com.sun.prism.impl.Disposer::disposeUnreachables@4 (line 173)
                      ; - com.sun.prism.impl.Disposer::cleanUp@26 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@473 (line 117)
  0x000001eb74bc78a0: dc71 79ff 

  0x000001eb74bc78a4: ;   {other}
  0x000001eb74bc78a4: 0f1f 8400 | 1440 00e0 | 4c8b 5424 | 3049 8bda | e93b 0100 | 004c 8bd0 | e930 0100 | 0048 8bd8 
  0x000001eb74bc78c4: 448b 5808 | 49ba 0000 | 0000 0800 | 0000 4d03 | d34d 8b52 

  0x000001eb74bc78d8: ;   {metadata('java/lang/Exception')}
  0x000001eb74bc78d8: 4049 bb48 | 3804 0008 | 0000 004d | 3bd3 0f85 | 0801 0000 | 4889 5c24 | 38eb 6248 | 8bd8 448b 
  0x000001eb74bc78f8: 5008 49bb | 0000 0000 | 0800 0000 | 4d03 da4d 

  0x000001eb74bc7908: ;   {metadata('java/lang/Exception')}
  0x000001eb74bc7908: 8b53 4049 | bb48 3804 | 0008 0000 | 004d 3bd3 | 0f85 d600 | 0000 4889 | 5c24 38eb | 3048 8bd8 
  0x000001eb74bc7928: 448b 5808 | 49ba 0000 | 0000 0800 | 0000 4d03 | d34d 8b52 

  0x000001eb74bc793c: ;   {metadata('java/lang/Exception')}
  0x000001eb74bc793c: 4049 bb48 | 3804 0008 | 0000 004d | 3bd3 0f85 | a400 0000 | 4889 5c24 

  0x000001eb74bc7954: ;   {oop(a 'java/lang/Class'{0x0000000706370650} = 'java/lang/System')}
  0x000001eb74bc7954: 3849 ba50 | 0637 0607 | 0000 0041 | 8b6a 7448 | 8b54 2438 

  0x000001eb74bc7968: ;   {static_call}
  0x000001eb74bc7968: 6666 90e8 

  0x000001eb74bc796c: ; ImmutableOopMap {rbp=NarrowOop [40]=Oop [56]=Oop [64]=NarrowOop [72]=Oop }
                      ;*invokestatic valueOf {reexecute=0 rethrow=0 return_oop=1}
                      ; - com.sun.prism.impl.Disposer::disposeUnreachables@49 (line 181)
                      ; - com.sun.prism.impl.Disposer::cleanUp@26 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@473 (line 117)
  0x000001eb74bc796c: 1077 79ff 

  0x000001eb74bc7970: ;   {other}
  0x000001eb74bc7970: 0f1f 8400 | e040 00e1 | baad ffff | ff4c 8b5c | 2428 4c89 | 5c24 2044 | 8b5c 2440 | 4489 5c24 
  0x000001eb74bc7990: 2c4c 8b5c | 2438 4c89 | 5c24 3048 | 8944 2438 

  0x000001eb74bc79a0: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc79a0: 6666 90e8 

  0x000001eb74bc79a4: ; ImmutableOopMap {rbp=NarrowOop [32]=Oop [44]=NarrowOop [48]=Oop [56]=Oop [64]=NarrowOop }
                      ;*invokedynamic {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.Disposer::disposeUnreachables@52 (line 181)
                      ; - com.sun.prism.impl.Disposer::cleanUp@26 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@473 (line 117)
  0x000001eb74bc79a4: 58cc 79ff 

  0x000001eb74bc79a8: ;   {other}
  0x000001eb74bc79a8: 0f1f 8400 | 1841 00e2 | 4c8b d0eb | 3c4c 8bd0 | eb37 4889 | 4424 3044 | 8b55 1845 | 85d2 0f84 
  0x000001eb74bc79c8: ea00 0000 | 4b8d 14d4 | 488b 6c24 | 284c 8b54 | 2448 4c89 

  0x000001eb74bc79dc: ;   {optimized virtual_call}
  0x000001eb74bc79dc: 5424 28e8 

  0x000001eb74bc79e0: ; ImmutableOopMap {rbp=Oop [40]=Oop [48]=Oop [72]=Oop }
                      ;*invokevirtual unlock {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.lang.ref.ReferenceQueue::poll@35 (line 186)
                      ; - com.sun.prism.impl.Disposer::disposeUnreachables@4 (line 173)
                      ; - com.sun.prism.impl.Disposer::cleanUp@26 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@473 (line 117)
  0x000001eb74bc79e0: 9c70 79ff 

  0x000001eb74bc79e4: ;   {other}
  0x000001eb74bc79e4: 0f1f 8400 | 5441 00e3 | 4c8b 5424 | 3049 8bda | 4c8b 5c24 | 4848 8d44 | 2470 4883 | 3800 0f84 
  0x000001eb74bc7a04: 7900 0000 | 4d8b 1341 | f6c2 020f | 8462 0000 | 0049 83ba | 8600 0000 | 0074 0949 | ff8a 8600 
  0x000001eb74bc7a24: 0000 eb4b | 498b 8296 | 0000 0049 | 0b82 8e00 | 0000 750a | 49c7 423e | 0000 0000 | eb3d 4983 
  0x000001eb74bc7a44: ba9e 0000 | 0000 7422 | 4833 c049 | c742 3e00 | 0000 00f0 | 8304 2400 | 4983 ba9e | 0000 0000 
  0x000001eb74bc7a64: 750d f04d | 0fb1 7a3e | 7505 83c8 | 01eb 0ca8 | 00eb 084c | 8b10 f04d | 0fb1 1375 | 0a49 ff8f 
  0x000001eb74bc7a84: 5005 0000 | 4533 d20f | 84bc deff | ff49 8bcb | 488d 5424 | 704d 8bc7 | 49ba 50df | 0ecb fe7f 
  0x000001eb74bc7aa4: 0000 41ff 

  0x000001eb74bc7aa8: ;   {other}
  0x000001eb74bc7aa8: d20f 1f84 | 0000 0000 | 00e9 97de | ffff baf6 | ffff ff48 | 8b6c 2428 | 448b 5c24 | 4044 895c 
  0x000001eb74bc7ac8: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc7ac8: 2424 90e8 

  0x000001eb74bc7acc: ; ImmutableOopMap {rbp=Oop [36]=NarrowOop [48]=Oop [64]=NarrowOop }
                      ;*invokevirtual unlock {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.lang.ref.ReferenceQueue::poll@35 (line 186)
                      ; - com.sun.prism.impl.Disposer::disposeUnreachables@4 (line 173)
                      ; - com.sun.prism.impl.Disposer::cleanUp@26 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@473 (line 117)
  0x000001eb74bc7acc: 30cb 79ff 

  0x000001eb74bc7ad0: ;   {other}
  0x000001eb74bc7ad0: 0f1f 8400 | 4042 00e4 | baf6 ffff | ff48 8b6c | 2428 448b | 5c24 4044 | 895c 2424 

  0x000001eb74bc7aec: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc7aec: 6666 90e8 

  0x000001eb74bc7af0: ; ImmutableOopMap {rbp=Oop [36]=NarrowOop [48]=Oop [64]=NarrowOop }
                      ;*invokevirtual unlock {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.lang.ref.ReferenceQueue::poll@35 (line 186)
                      ; - com.sun.prism.impl.Disposer::disposeUnreachables@4 (line 173)
                      ; - com.sun.prism.impl.Disposer::cleanUp@26 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@473 (line 117)
  0x000001eb74bc7af0: 0ccb 79ff 

  0x000001eb74bc7af4: ;   {other}
  0x000001eb74bc7af4: 0f1f 8400 | 6442 00e5 | 4c8b d0eb | 4c48 8bd8 | e987 0100 | 004c 8bd0 | eb3f 4c8b | d0eb 3a48 
  0x000001eb74bc7b14: 8944 2420 | 448b 5d18 | 4585 db0f | 844f 0200 | 004b 8d14 | dc48 8b6c | 2428 4c8b | 5424 484c 
  0x000001eb74bc7b34: 8954 2430 

  0x000001eb74bc7b38: ;   {optimized virtual_call}
  0x000001eb74bc7b38: 6666 90e8 

  0x000001eb74bc7b3c: ; ImmutableOopMap {rbp=Oop [32]=Oop [48]=Oop [72]=Oop }
                      ;*invokevirtual unlock {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.lang.ref.ReferenceQueue::poll@35 (line 186)
                      ; - com.sun.prism.impl.Disposer::disposeUnreachables@4 (line 173)
                      ; - com.sun.prism.impl.Disposer::cleanUp@26 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@40 (line 117)
  0x000001eb74bc7b3c: 406f 79ff 

  0x000001eb74bc7b40: ;   {other}
  0x000001eb74bc7b40: 0f1f 8400 | b042 00e6 | 4c8b 5424 | 2049 8bda | e93b 0100 | 004c 8bd0 | e930 0100 | 0048 8bd8 
  0x000001eb74bc7b60: 448b 5008 | 49bb 0000 | 0000 0800 | 0000 4d03 | da4d 8b53 

  0x000001eb74bc7b74: ;   {metadata('java/lang/Exception')}
  0x000001eb74bc7b74: 4049 bb48 | 3804 0008 | 0000 004d | 3bd3 0f85 | 0801 0000 | 4889 5c24 | 38eb 6248 | 8bd8 448b 
  0x000001eb74bc7b94: 5808 49ba | 0000 0000 | 0800 0000 | 4d03 d34d 

  0x000001eb74bc7ba4: ;   {metadata('java/lang/Exception')}
  0x000001eb74bc7ba4: 8b52 4049 | bb48 3804 | 0008 0000 | 004d 3bd3 | 0f85 d600 | 0000 4889 | 5c24 38eb | 3048 8bd8 
  0x000001eb74bc7bc4: 448b 5008 | 49bb 0000 | 0000 0800 | 0000 4d03 | da4d 8b53 

  0x000001eb74bc7bd8: ;   {metadata('java/lang/Exception')}
  0x000001eb74bc7bd8: 4049 bb48 | 3804 0008 | 0000 004d | 3bd3 0f85 | a400 0000 | 4889 5c24 

  0x000001eb74bc7bf0: ;   {oop(a 'java/lang/Class'{0x0000000706370650} = 'java/lang/System')}
  0x000001eb74bc7bf0: 3849 ba50 | 0637 0607 | 0000 0041 | 8b6a 7448 | 8b54 2438 

  0x000001eb74bc7c04: ;   {static_call}
  0x000001eb74bc7c04: 6666 90e8 

  0x000001eb74bc7c08: ; ImmutableOopMap {rbp=NarrowOop [40]=Oop [56]=Oop [64]=NarrowOop [72]=Oop }
                      ;*invokestatic valueOf {reexecute=0 rethrow=0 return_oop=1}
                      ; - com.sun.prism.impl.Disposer::disposeUnreachables@49 (line 181)
                      ; - com.sun.prism.impl.Disposer::cleanUp@26 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@40 (line 117)
  0x000001eb74bc7c08: 7474 79ff 

  0x000001eb74bc7c0c: ;   {other}
  0x000001eb74bc7c0c: 0f1f 8400 | 7c43 00e7 | baad ffff | ff4c 8b5c | 2428 4c89 | 5c24 2044 | 8b44 2440 | 4c8b 5c24 
  0x000001eb74bc7c2c: 384c 895c | 2430 4889 | 4424 3845 | 8bd0 4489 

  0x000001eb74bc7c3c: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc7c3c: 5424 2ce8 

  0x000001eb74bc7c40: ; ImmutableOopMap {rbp=NarrowOop [32]=Oop [44]=NarrowOop [48]=Oop [56]=Oop [64]=NarrowOop }
                      ;*invokedynamic {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.Disposer::disposeUnreachables@52 (line 181)
                      ; - com.sun.prism.impl.Disposer::cleanUp@26 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@40 (line 117)
  0x000001eb74bc7c40: bcc9 79ff 

  0x000001eb74bc7c44: ;   {other}
  0x000001eb74bc7c44: 0f1f 8400 | b443 00e8 | 4c8b d0eb | 3c4c 8bd0 | eb37 4889 | 4424 2044 | 8b5d 1845 | 85db 0f84 
  0x000001eb74bc7c64: ea00 0000 | 4b8d 14dc | 488b 6c24 | 284c 8b54 | 2448 4c89 

  0x000001eb74bc7c78: ;   {optimized virtual_call}
  0x000001eb74bc7c78: 5424 30e8 

  0x000001eb74bc7c7c: ; ImmutableOopMap {rbp=Oop [32]=Oop [48]=Oop [72]=Oop }
                      ;*invokevirtual unlock {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.lang.ref.ReferenceQueue::poll@35 (line 186)
                      ; - com.sun.prism.impl.Disposer::disposeUnreachables@4 (line 173)
                      ; - com.sun.prism.impl.Disposer::cleanUp@26 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@40 (line 117)
  0x000001eb74bc7c7c: 006e 79ff 

  0x000001eb74bc7c80: ;   {other}
  0x000001eb74bc7c80: 0f1f 8400 | f043 00e9 | 4c8b 5424 | 2049 8bda | 4c8b 5c24 | 4848 8d44 | 2470 4883 | 3800 0f84 
  0x000001eb74bc7ca0: 7900 0000 | 4d8b 1341 | f6c2 020f | 8462 0000 | 0049 83ba | 8600 0000 | 0074 0949 | ff8a 8600 
  0x000001eb74bc7cc0: 0000 eb4b | 498b 8296 | 0000 0049 | 0b82 8e00 | 0000 750a | 49c7 423e | 0000 0000 | eb3d 4983 
  0x000001eb74bc7ce0: ba9e 0000 | 0000 7422 | 4833 c049 | c742 3e00 | 0000 00f0 | 8304 2400 | 4983 ba9e | 0000 0000 
  0x000001eb74bc7d00: 750d f04d | 0fb1 7a3e | 7505 83c8 | 01eb 0ca8 | 00eb 084c | 8b10 f04d | 0fb1 1375 | 0a49 ff8f 
  0x000001eb74bc7d20: 5005 0000 | 4533 d20f | 8420 dcff | ff49 8bcb | 488d 5424 | 704d 8bc7 | 49ba 50df | 0ecb fe7f 
  0x000001eb74bc7d40: 0000 41ff 

  0x000001eb74bc7d44: ;   {other}
  0x000001eb74bc7d44: d20f 1f84 | 0000 0000 | 00e9 fbdb | ffff baf6 | ffff ff48 | 8b6c 2428 | 448b 5424 | 4044 8954 
  0x000001eb74bc7d64: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc7d64: 242c 90e8 

  0x000001eb74bc7d68: ; ImmutableOopMap {rbp=Oop [32]=Oop [44]=NarrowOop [64]=NarrowOop }
                      ;*invokevirtual unlock {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.lang.ref.ReferenceQueue::poll@35 (line 186)
                      ; - com.sun.prism.impl.Disposer::disposeUnreachables@4 (line 173)
                      ; - com.sun.prism.impl.Disposer::cleanUp@26 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@40 (line 117)
  0x000001eb74bc7d68: 94c8 79ff 

  0x000001eb74bc7d6c: ;   {other}
  0x000001eb74bc7d6c: 0f1f 8400 | dc44 00ea | baf6 ffff | ff48 8b6c | 2428 448b | 5424 4044 | 8954 242c 

  0x000001eb74bc7d88: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bc7d88: 6666 90e8 

  0x000001eb74bc7d8c: ; ImmutableOopMap {rbp=Oop [32]=Oop [44]=NarrowOop [64]=NarrowOop }
                      ;*invokevirtual unlock {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.lang.ref.ReferenceQueue::poll@35 (line 186)
                      ; - com.sun.prism.impl.Disposer::disposeUnreachables@4 (line 173)
                      ; - com.sun.prism.impl.Disposer::cleanUp@26 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@40 (line 117)
  0x000001eb74bc7d8c: 70c8 79ff 

  0x000001eb74bc7d90: ;   {other}
  0x000001eb74bc7d90: 0f1f 8400 | 0045 00eb 

  0x000001eb74bc7d98: ;   {internal_word}
  0x000001eb74bc7d98: 49ba 7152 | bc74 eb01 | 0000 4d89 | 9768 0400 

  0x000001eb74bc7da8: ;   {runtime_call SafepointBlob}
  0x000001eb74bc7da8: 00e9 52d9 

  0x000001eb74bc7dac: ;   {runtime_call StubRoutines (final stubs)}
  0x000001eb74bc7dac: 79ff e8ad | cf77 ffe9 | 46c3 ffff 
[Stub Code]
  0x000001eb74bc7db8: ;   {no_reloc}
  0x000001eb74bc7db8: 48bb 0000 | 0000 0000 

  0x000001eb74bc7dc0: ;   {runtime_call}
  0x000001eb74bc7dc0: 0000 e9fb 

  0x000001eb74bc7dc4: ;   {static_stub}
  0x000001eb74bc7dc4: ffff ff48 | bb00 0000 | 0000 0000 

  0x000001eb74bc7dd0: ;   {runtime_call}
  0x000001eb74bc7dd0: 00e9 fbff 

  0x000001eb74bc7dd4: ;   {static_stub}
  0x000001eb74bc7dd4: ffff 48bb | 0000 0000 | 0000 0000 

  0x000001eb74bc7de0: ;   {runtime_call}
  0x000001eb74bc7de0: e9fb ffff 

  0x000001eb74bc7de4: ;   {static_stub}
  0x000001eb74bc7de4: ff48 bb00 | 0000 0000 

  0x000001eb74bc7dec: ;   {runtime_call}
  0x000001eb74bc7dec: 0000 00e9 | fbff ffff 

  0x000001eb74bc7df4: ;   {static_stub}
  0x000001eb74bc7df4: 48bb 0000 | 0000 0000 

  0x000001eb74bc7dfc: ;   {runtime_call}
  0x000001eb74bc7dfc: 0000 e9fb 

  0x000001eb74bc7e00: ;   {static_stub}
  0x000001eb74bc7e00: ffff ff48 | bb00 0000 | 0000 0000 

  0x000001eb74bc7e0c: ;   {runtime_call}
  0x000001eb74bc7e0c: 00e9 fbff 

  0x000001eb74bc7e10: ;   {static_stub}
  0x000001eb74bc7e10: ffff 48bb | 0000 0000 | 0000 0000 

  0x000001eb74bc7e1c: ;   {runtime_call}
  0x000001eb74bc7e1c: e9fb ffff 

  0x000001eb74bc7e20: ;   {static_stub}
  0x000001eb74bc7e20: ff48 bb00 | 0000 0000 

  0x000001eb74bc7e28: ;   {runtime_call}
  0x000001eb74bc7e28: 0000 00e9 | fbff ffff 

  0x000001eb74bc7e30: ;   {static_stub}
  0x000001eb74bc7e30: 48bb 0000 | 0000 0000 

  0x000001eb74bc7e38: ;   {runtime_call}
  0x000001eb74bc7e38: 0000 e9fb 

  0x000001eb74bc7e3c: ;   {static_stub}
  0x000001eb74bc7e3c: ffff ff48 | bb00 0000 | 0000 0000 

  0x000001eb74bc7e48: ;   {runtime_call}
  0x000001eb74bc7e48: 00e9 fbff 

  0x000001eb74bc7e4c: ;   {static_stub}
  0x000001eb74bc7e4c: ffff 48bb | 0000 0000 | 0000 0000 

  0x000001eb74bc7e58: ;   {runtime_call}
  0x000001eb74bc7e58: e9fb ffff 

  0x000001eb74bc7e5c: ;   {static_stub}
  0x000001eb74bc7e5c: ff48 bb00 | 0000 0000 

  0x000001eb74bc7e64: ;   {runtime_call}
  0x000001eb74bc7e64: 0000 00e9 | fbff ffff 

  0x000001eb74bc7e6c: ;   {static_stub}
  0x000001eb74bc7e6c: 48bb 0000 | 0000 0000 

  0x000001eb74bc7e74: ;   {runtime_call}
  0x000001eb74bc7e74: 0000 e9fb 

  0x000001eb74bc7e78: ;   {static_stub}
  0x000001eb74bc7e78: ffff ff48 | bb00 0000 | 0000 0000 

  0x000001eb74bc7e84: ;   {runtime_call}
  0x000001eb74bc7e84: 00e9 fbff 

  0x000001eb74bc7e88: ;   {static_stub}
  0x000001eb74bc7e88: ffff 48bb | 0000 0000 | 0000 0000 

  0x000001eb74bc7e94: ;   {runtime_call}
  0x000001eb74bc7e94: e9fb ffff 

  0x000001eb74bc7e98: ;   {static_stub}
  0x000001eb74bc7e98: ff48 bb00 | 0000 0000 

  0x000001eb74bc7ea0: ;   {runtime_call}
  0x000001eb74bc7ea0: 0000 00e9 | fbff ffff 

  0x000001eb74bc7ea8: ;   {static_stub}
  0x000001eb74bc7ea8: 48bb 0000 | 0000 0000 

  0x000001eb74bc7eb0: ;   {runtime_call}
  0x000001eb74bc7eb0: 0000 e9fb 

  0x000001eb74bc7eb4: ;   {static_stub}
  0x000001eb74bc7eb4: ffff ff48 | bb00 0000 | 0000 0000 

  0x000001eb74bc7ec0: ;   {runtime_call}
  0x000001eb74bc7ec0: 00e9 fbff 

  0x000001eb74bc7ec4: ;   {static_stub}
  0x000001eb74bc7ec4: ffff 48bb | 0000 0000 | 0000 0000 

  0x000001eb74bc7ed0: ;   {runtime_call}
  0x000001eb74bc7ed0: e9fb ffff 

  0x000001eb74bc7ed4: ;   {static_stub}
  0x000001eb74bc7ed4: ff48 bb00 | 0000 0000 

  0x000001eb74bc7edc: ;   {runtime_call}
  0x000001eb74bc7edc: 0000 00e9 | fbff ffff 

  0x000001eb74bc7ee4: ;   {static_stub}
  0x000001eb74bc7ee4: 48bb 0000 | 0000 0000 

  0x000001eb74bc7eec: ;   {runtime_call}
  0x000001eb74bc7eec: 0000 e9fb 

  0x000001eb74bc7ef0: ;   {static_stub}
  0x000001eb74bc7ef0: ffff ff48 | bb00 0000 | 0000 0000 

  0x000001eb74bc7efc: ;   {runtime_call}
  0x000001eb74bc7efc: 00e9 fbff 

  0x000001eb74bc7f00: ;   {static_stub}
  0x000001eb74bc7f00: ffff 48bb | 0000 0000 | 0000 0000 

  0x000001eb74bc7f0c: ;   {runtime_call}
  0x000001eb74bc7f0c: e9fb ffff 

  0x000001eb74bc7f10: ;   {static_stub}
  0x000001eb74bc7f10: ff48 bb00 | 0000 0000 

  0x000001eb74bc7f18: ;   {runtime_call}
  0x000001eb74bc7f18: 0000 00e9 | fbff ffff 

  0x000001eb74bc7f20: ;   {static_stub}
  0x000001eb74bc7f20: 48bb 0000 | 0000 0000 

  0x000001eb74bc7f28: ;   {runtime_call}
  0x000001eb74bc7f28: 0000 e9fb 

  0x000001eb74bc7f2c: ;   {static_stub}
  0x000001eb74bc7f2c: ffff ff48 | bb00 0000 | 0000 0000 

  0x000001eb74bc7f38: ;   {runtime_call}
  0x000001eb74bc7f38: 00e9 fbff 

  0x000001eb74bc7f3c: ;   {static_stub}
  0x000001eb74bc7f3c: ffff 48bb | 0000 0000 | 0000 0000 

  0x000001eb74bc7f48: ;   {runtime_call}
  0x000001eb74bc7f48: e9fb ffff 

  0x000001eb74bc7f4c: ;   {static_stub}
  0x000001eb74bc7f4c: ff48 bb00 | 0000 0000 

  0x000001eb74bc7f54: ;   {runtime_call}
  0x000001eb74bc7f54: 0000 00e9 | fbff ffff 

  0x000001eb74bc7f5c: ;   {static_stub}
  0x000001eb74bc7f5c: 48bb 0000 | 0000 0000 

  0x000001eb74bc7f64: ;   {runtime_call}
  0x000001eb74bc7f64: 0000 e9fb 

  0x000001eb74bc7f68: ;   {static_stub}
  0x000001eb74bc7f68: ffff ff48 | bb00 0000 | 0000 0000 

  0x000001eb74bc7f74: ;   {runtime_call}
  0x000001eb74bc7f74: 00e9 fbff 

  0x000001eb74bc7f78: ;   {static_stub}
  0x000001eb74bc7f78: ffff 48bb | 0000 0000 | 0000 0000 

  0x000001eb74bc7f84: ;   {runtime_call}
  0x000001eb74bc7f84: e9fb ffff 

  0x000001eb74bc7f88: ;   {static_stub}
  0x000001eb74bc7f88: ff48 bb00 | 0000 0000 

  0x000001eb74bc7f90: ;   {runtime_call}
  0x000001eb74bc7f90: 0000 00e9 | fbff ffff 

  0x000001eb74bc7f98: ;   {static_stub}
  0x000001eb74bc7f98: 48bb 0000 | 0000 0000 

  0x000001eb74bc7fa0: ;   {runtime_call}
  0x000001eb74bc7fa0: 0000 e9fb 

  0x000001eb74bc7fa4: ;   {static_stub}
  0x000001eb74bc7fa4: ffff ff48 | bb00 0000 | 0000 0000 

  0x000001eb74bc7fb0: ;   {runtime_call}
  0x000001eb74bc7fb0: 00e9 fbff 

  0x000001eb74bc7fb4: ;   {static_stub}
  0x000001eb74bc7fb4: ffff 48bb | 0000 0000 | 0000 0000 

  0x000001eb74bc7fc0: ;   {runtime_call}
  0x000001eb74bc7fc0: e9fb ffff 

  0x000001eb74bc7fc4: ;   {static_stub}
  0x000001eb74bc7fc4: ff48 bb00 | 0000 0000 

  0x000001eb74bc7fcc: ;   {runtime_call}
  0x000001eb74bc7fcc: 0000 00e9 | fbff ffff 

  0x000001eb74bc7fd4: ;   {static_stub}
  0x000001eb74bc7fd4: 48bb 0000 | 0000 0000 

  0x000001eb74bc7fdc: ;   {runtime_call}
  0x000001eb74bc7fdc: 0000 e9fb 

  0x000001eb74bc7fe0: ;   {static_stub}
  0x000001eb74bc7fe0: ffff ff48 | bb00 0000 | 0000 0000 

  0x000001eb74bc7fec: ;   {runtime_call}
  0x000001eb74bc7fec: 00e9 fbff 

  0x000001eb74bc7ff0: ;   {static_stub}
  0x000001eb74bc7ff0: ffff 48bb | 0000 0000 | 0000 0000 

  0x000001eb74bc7ffc: ;   {runtime_call}
  0x000001eb74bc7ffc: e9fb ffff 

  0x000001eb74bc8000: ;   {static_stub}
  0x000001eb74bc8000: ff48 bb00 | 0000 0000 

  0x000001eb74bc8008: ;   {runtime_call}
  0x000001eb74bc8008: 0000 00e9 | fbff ffff 

  0x000001eb74bc8010: ;   {static_stub}
  0x000001eb74bc8010: 48bb 0000 | 0000 0000 

  0x000001eb74bc8018: ;   {runtime_call}
  0x000001eb74bc8018: 0000 e9fb 

  0x000001eb74bc801c: ;   {static_stub}
  0x000001eb74bc801c: ffff ff48 | bb00 0000 | 0000 0000 

  0x000001eb74bc8028: ;   {runtime_call}
  0x000001eb74bc8028: 00e9 fbff 

  0x000001eb74bc802c: ;   {static_stub}
  0x000001eb74bc802c: ffff 48bb | 0000 0000 | 0000 0000 

  0x000001eb74bc8038: ;   {runtime_call}
  0x000001eb74bc8038: e9fb ffff 

  0x000001eb74bc803c: ;   {runtime_call ExceptionBlob}
  0x000001eb74bc803c: ffe9 3edf | 85ff e800 | 0000 0048 | 832c 2405 

  0x000001eb74bc804c: ;   {runtime_call DeoptimizationBlob}
  0x000001eb74bc804c: e94f c979 | fff4 f4f4 | f4f4 f4f4 
[/MachCode]


Compiled method (c2) 3573382 3609 % !   4       java.util.concurrent.ThreadPoolExecutor::runWorker @ 21 (187 bytes)
 total in heap  [0x000001eb74bbca10,0x000001eb74bc0450] = 14912
 relocation     [0x000001eb74bbcb70,0x000001eb74bbcdc0] = 592
 main code      [0x000001eb74bbcdc0,0x000001eb74bbee38] = 8312
 stub code      [0x000001eb74bbee38,0x000001eb74bbeef8] = 192
 oops           [0x000001eb74bbeef8,0x000001eb74bbef10] = 24
 metadata       [0x000001eb74bbef10,0x000001eb74bbf150] = 576
 scopes data    [0x000001eb74bbf150,0x000001eb74bbfc38] = 2792
 scopes pcs     [0x000001eb74bbfc38,0x000001eb74bc01e8] = 1456
 dependencies   [0x000001eb74bc01e8,0x000001eb74bc0238] = 80
 handler table  [0x000001eb74bc0238,0x000001eb74bc0388] = 336
 nul chk table  [0x000001eb74bc0388,0x000001eb74bc0450] = 200

[Constant Pool (empty)]

[MachCode]
[Verified Entry Point]
  # {method} {0x000001eb047c16e0} 'runWorker' '(Ljava/util/concurrent/ThreadPoolExecutor$Worker;)V' in 'java/util/concurrent/ThreadPoolExecutor'
  0x000001eb74bbcdc0: cc66 6666 | 0f1f 8400 | 0000 0000 | 6666 6690 | 8984 2400 | 80ff ff55 | 4881 eca0 | 0000 0090 
  0x000001eb74bbcde0: 4181 7f20 | 0100 0000 | 0f85 3f20 | 0000 488b | 7238 488b | 6a30 8b7a | 184c 8b6a | 2848 8b5a 
  0x000001eb74bbce00: 204d 8b97 | 8003 0000 | 4d8b 3248 | 8bca 49ba | 40ae d5ca | fe7f 0000 

  0x000001eb74bbce18: ;   {other}
  0x000001eb74bbce18: 41ff d20f | 1f84 0000 | 0000 0048 | 85f6 0f84 | 0418 0000 | 448b 5608 

  0x000001eb74bbce30: ;   {metadata('java/util/concurrent/ThreadPoolExecutor')}
  0x000001eb74bbce30: 49bb d8a1 | 0a00 0800 | 0000 49b8 | 0000 0000 | 0800 0000 | 4d03 c24d | 8b50 404d | 3bd3 0f85 
  0x000001eb74bbce50: 8c19 0000 | 4c8b d64d | 8bc2 4885 | ed0f 84d5 | 1700 0044 

  0x000001eb74bbce64: ;   {metadata('java/util/concurrent/ThreadPoolExecutor$Worker')}
  0x000001eb74bbce64: 8b5d 0841 | 81fb e0da | 0a00 0f85 | 6c19 0000 | 4c8b d549 | 8bca 4d85 | ed0f 84bc | 1700 0045 
  0x000001eb74bbce84: ;   {metadata('java/lang/Thread')}
  0x000001eb74bbce84: 8b55 0849 | bb58 7404 | 0008 0000 | 0049 b900 | 0000 0008 | 0000 004d | 03ca 4d8b | 5138 4d3b 
  0x000001eb74bbcea4: d30f 8535 | 1900 0045 | 8b50 0848 | 85c9 0f84 | 0019 0000 

  0x000001eb74bbceb8: ;   {metadata('com/sun/javafx/tk/quantum/QuantumRenderer')}
  0x000001eb74bbceb8: 4181 fa80 | 220e 000f | 85f3 1800 | 0048 894c | 2450 4c89 | 6c24 3089 | 7c24 404d | 8bd0 4c89 
  0x000001eb74bbced8: 4424 484c | 8954 2420 | 4d8b d649 | c1ea 0344 | 8954 2428 | 4c89 7424 | 58e9 d106 | 0000 4c8b 
  0x000001eb74bbcef8: 5424 6041 | 8b5a 1441 | 8b7c dc10 | 4180 7f40 | 000f 8536 | 0a00 0041 | 807f 4000 | 0f85 630a 
  0x000001eb74bbcf18: 0000 4189 | 5cdc 104c | 8b54 2460 | 4189 7a14 | 4c8b d749 | c1e2 034c | 8b5c 2460 | 4d33 d349 
  0x000001eb74bbcf38: c1ea 154d | 85d2 741e | 85ff 741a | 49c1 eb09 | 48b9 0030 | 2f79 eb01 | 0000 4903 | cb80 3902 
  0x000001eb74bbcf58: 0f85 8f0b | 0000 458b | 54fc 0c44 | 8954 2470 | 4180 7f40 | 000f 8546 | 0a00 0045 | 8964 fc0c 
  0x000001eb74bbcf78: bdff ffff | ff44 8b54 | 246c f043 | 0fc1 6cd4 | 0c83 fd01 | 0f8f 1e13 | 0000 448b | 5c24 6843 
  0x000001eb74bbcf98: 8b5c dc0c 

  0x000001eb74bbcf9c: ; implicit exception: dispatches to 0x000001eb74bbe94c
  0x000001eb74bbcf9c: 458b 5cdc | 1045 8b54 | dc0c 4d8b | c249 c1e0 | 034c 8b4c | 2458 4d3b 

  0x000001eb74bbcfb4: ;   {no_reloc}
  0x000001eb74bbcfb4: c10f 852d | 1300 0041 | 8d73 ff41 | 83fb 010f | 8540 0900 | 0041 807f | 4000 0f85 | 9f0b 0000 
  0x000001eb74bbcfd4: 4589 64dc | 0c41 bb01 | 0000 0041 | 8974 dc10 | f083 4424 | c000 4585 | db74 0e45 | 8b54 dc14 
  0x000001eb74bbcff4: 4585 d20f | 857c 0800 | 004c 8b54 | 2460 458b | 5a0c 413b | eb0f 841d | 1300 0044 | 8b54 2470 
  0x000001eb74bbd014: ; implicit exception: dispatches to 0x000001eb74bbe97c
  0x000001eb74bbd014: 478b 54d4 

  0x000001eb74bbd018: ;   {metadata('com/sun/javafx/tk/quantum/PaintRenderJob')}
  0x000001eb74bbd018: 0841 81fa | 08c7 1b00 | 0f85 e217 | 0000 4c8b | 5424 5033 | c041 b801 | 0000 00f0 | 450f b142 
  0x000001eb74bbd038: 1041 0f94 | c345 0fb6 | db44 8b54 | 2470 49c1 | e203 4c89 | 5424 6045 | 85db 0f84 | 1413 0000 
  0x000001eb74bbd058: 4180 7f40 | 000f 858e | 0900 004c | 8b54 2450 | 448b 4424 | 2845 8942 | 0c4c 8b54 | 2458 4c8b 
  0x000001eb74bbd078: 5c24 504d | 33d3 49c1 | ea15 4d85 | d274 1a49 | c1eb 0948 | b900 302f | 79eb 0100 | 0049 03cb 
  0x000001eb74bbd098: 8039 020f | 85fe 0900 | 004c 8b54 | 2448 458b | 522c 478b | 54d4 0c41 | 81fa 0000 | 0020 0f8d 
  0x000001eb74bbd0b8: e412 0000 | 4c8b 5424 | 5845 0fb6 | 5a3a 4585 | db0f 85f5 | 1200 004c | 8b54 2460 | 458b 520c 
  0x000001eb74bbd0d8: 4585 d20f | 855f 0e00 | 004c 8b54 | 2460 4983 | c218 4c89 | 5424 3848 | 33c0 448b | 5c24 28f0 
  0x000001eb74bbd0f8: 450f b11a | 0f94 c30f | b6db 85db | 742b 4c8b | 5c24 584d | 33da 49c1 | eb15 4d85 | db74 1a49 
  0x000001eb74bbd118: ;   {no_reloc}
  0x000001eb74bbd118: c1ea 0948 | b900 302f | 79eb 0100 | 0049 03ca | 8039 020f | 85c8 0a00 | 0085 db0f | 84c3 1200 
  0x000001eb74bbd138: 004c 8b54 | 2460 458b | 520c 4c8b | 5c24 6045 | 8b5b 1047 | 8b4c dc08 | 4585 d20f | 8527 0e00 
  0x000001eb74bbd158: ;   {metadata('java/util/concurrent/Executors$RunnableAdapter')}
  0x000001eb74bbd158: 0041 81f9 | 803f 0b00 | 0f85 960b | 0000 4b8d | 2cdc 448b | 550c 478b 

  0x000001eb74bbd170: ;   {metadata('com/sun/javafx/tk/quantum/PresentingPainter')}
  0x000001eb74bbd170: 44d4 0841 | 81f8 e8ce | 1b00 0f85 | c00b 0000 | 4b8d 14d4 

  0x000001eb74bbd184: ;   {optimized virtual_call}
  0x000001eb74bbd184: 6666 90e8 

  0x000001eb74bbd188: ; ImmutableOopMap {rbp=Oop [32]=Oop [40]=NarrowOop [48]=Oop [72]=Oop [80]=Oop [88]=Oop [96]=Oop [56]=Derived_oop_[96] }
                      ;*invokeinterface run {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.concurrent.Executors$RunnableAdapter::call@4 (line 572)
                      ; - java.util.concurrent.FutureTask::runAndReset@44 (line 358)
                      ; - com.sun.javafx.tk.RenderJob::run@1 (line 58)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@92 (line 1144)
  0x000001eb74bbd188: 546f 0000 

  0x000001eb74bbd18c: ;   {other}
  0x000001eb74bbd18c: 0f1f 8400 | 7c07 0000 | bf01 0000 | 0041 807f | 4000 0f85 | 8908 0000 | 4c8b 5424 | 3845 8922 
  0x000001eb74bbd1ac: f083 4424 | c000 4c8b | 5424 6045 | 8b52 0c41 | 83fa 050f | 8d73 1200 | 0085 ff0f | 84bb 1200 
  0x000001eb74bbd1cc: 0045 85d2 | 0f85 ee0d | 0000 4c8b | 5424 6045 | 8b52 2047 | 8b5c d408 

  0x000001eb74bbd1e4: ;   {metadata('com/sun/javafx/tk/quantum/PaintCollector')}
  0x000001eb74bbd1e4: 4181 fba8 | 920e 000f | 8587 0b00 | 004c 8b5c | 2460 458b | 4328 4489 | 4424 6845 | 85c0 0f84 
  0x000001eb74bbd204: bc12 0000 | 49c1 e203 | 4c89 5424 | 704f 8d14 | c44c 8954 | 2438 4c8b | 5c24 3848 | 8d9c 2480 
  0x000001eb74bbd224: 0000 0049 | 8b03 a802 | 0f85 2300 | 0000 4883 | c801 4889 | 03f0 490f | b11b 0f84 | 3700 0000 
  0x000001eb74bbd244: 482b c448 | 2507 f0ff | ff48 8903 | e924 0000 | 004c 8bd0 | 4833 c0f0 | 4d0f b17a | 3e48 c703 
  0x000001eb74bbd264: 0300 0000 | 7411 4c3b | f875 1549 | ff82 8600 | 0000 4833 | c075 0949 | ff87 5005 | 0000 33c0 
  0x000001eb74bbd284: 0f85 2e0b | 0000 448b | 5c24 6847 | 8b54 dc28 

  0x000001eb74bbd294: ; implicit exception: dispatches to 0x000001eb74bbeb44
  0x000001eb74bbd294: 478b 5cd4 

  0x000001eb74bbd298: ;   {metadata('javafx/scene/Scene$ScenePeerPaintListener')}
  0x000001eb74bbd298: 0841 81fb | 0090 1b00 | 0f85 2f0b | 0000 4b8d 

  0x000001eb74bbd2a8: ;   {oop(a 'java/lang/Object'{0x0000000706543320})}
  0x000001eb74bbd2a8: 2cd4 49bb | 2033 5406 | 0700 0000 | 488d 9c24 | 8800 0000 | 498b 03a8 | 020f 8523 | 0000 0048 
  0x000001eb74bbd2c8: 83c8 0148 | 8903 f049 | 0fb1 1b0f | 8437 0000 | 0048 2bc4 | 4825 07f0 | ffff 4889 | 03e9 2400 
  0x000001eb74bbd2e8: 0000 4c8b | d048 33c0 | f04d 0fb1 | 7a3e 48c7 | 0303 0000 | 0074 114c | 3bf8 7515 | 49ff 8286 
  0x000001eb74bbd308: 0000 0048 | 33c0 7509 | 49ff 8750 | 0500 0033 | c00f 85f1 | 0a00 0044 | 8b5d 0c47 | 8b9c dc90 
  0x000001eb74bbd328: 0000 0045 | 85db 0f85 | c411 0000 

  0x000001eb74bbd334: ;   {oop(a 'java/lang/Object'{0x0000000706543320})}
  0x000001eb74bbd334: 49bb 2033 | 5406 0700 | 0000 488d | 8424 8800 | 0000 4883 | 3800 0f84 | 7900 0000 | 4d8b 1341 
  0x000001eb74bbd354: f6c2 020f | 8462 0000 | 0049 83ba | 8600 0000 | 0074 0949 | ff8a 8600 | 0000 eb4b | 498b 8296 
  0x000001eb74bbd374: 0000 0049 | 0b82 8e00 | 0000 750a | 49c7 423e | 0000 0000 | eb3d 4983 | ba9e 0000 | 0000 7422 
  0x000001eb74bbd394: 4833 c049 | c742 3e00 | 0000 00f0 | 8304 2400 | 4983 ba9e | 0000 0000 | 750d f04d | 0fb1 7a3e 
  0x000001eb74bbd3b4: 7505 83c8 | 01eb 0ca8 | 00eb 084c | 8b10 f04d | 0fb1 1375 | 0a49 ff8f | 5005 0000 | 4533 d20f 
  0x000001eb74bbd3d4: 855c 0a00 | 004c 8b5c | 2438 488d | 8424 8000 | 0000 4883 | 3800 0f84 | 7900 0000 | 4d8b 1341 
  0x000001eb74bbd3f4: f6c2 020f | 8462 0000 | 0049 83ba | 8600 0000 | 0074 0949 | ff8a 8600 | 0000 eb4b | 498b 8296 
  0x000001eb74bbd414: 0000 0049 | 0b82 8e00 | 0000 750a | 49c7 423e | 0000 0000 | eb3d 4983 | ba9e 0000 

  0x000001eb74bbd430: ;   {no_reloc}
  0x000001eb74bbd430: 0000 7422 | 4833 c049 | c742 3e00 | 0000 00f0 | 8304 2400 | 4983 ba9e | 0000 0000 | 750d f04d 
  0x000001eb74bbd450: 0fb1 7a3e | 7505 83c8 | 01eb 0ca8 | 00eb 084c | 8b10 f04d | 0fb1 1375 | 0a49 ff8f | 5005 0000 
  0x000001eb74bbd470: 4533 d20f | 85eb 0900 | 004c 8b54 | 2470 458b | 5a14 478b | 54dc 0c47 | 8b5c d410 | 4183 fb01 
  0x000001eb74bbd490: 0f85 c50b | 0000 4c8b | 5424 7045 | 0fb6 520d | 4585 d20f | 847b 1000 | 004c 8b54 | 2470 458b 
  0x000001eb74bbd4b0: 5a18 470f | b654 dc44 | 4585 d20f | 85f0 0b00 | 0047 3b64 | dc78 0f84 | d407 0000 

  0x000001eb74bbd4cc: ;   {oop(a 'java/lang/Class'{0x00000007063d07d8} = 'com/sun/javafx/tk/quantum/QuantumToolkit')}
  0x000001eb74bbd4cc: 49ba d807 | 3d06 0700 | 0000 450f | b692 8b00 | 0000 4585 | d20f 8571 | 1000 004b 

  0x000001eb74bbd4e8: ;   {optimized virtual_call}
  0x000001eb74bbd4e8: 8d14 dce8 

  0x000001eb74bbd4ec: ; ImmutableOopMap {[32]=Oop [40]=NarrowOop [48]=Oop [72]=Oop [80]=Oop [88]=Oop [96]=Oop [112]=Oop }
                      ;*invokevirtual postPulse {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.QuantumToolkit::vsyncHint@28 (line 613)
                      ; - com.sun.javafx.tk.quantum.PaintCollector::done@101 (line 304)
                      ; - com.sun.javafx.tk.RenderJob::run@81 (line 77)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@92 (line 1144)
  0x000001eb74bbd4ec: b0f9 f1ff 

  0x000001eb74bbd4f0: ;   {other}
  0x000001eb74bbd4f0: 0f1f 8400 | e00a 0001 

  0x000001eb74bbd4f8: ;   {oop(a 'java/lang/Class'{0x00000007064700e0} = 'com/sun/glass/ui/Application')}
  0x000001eb74bbd4f8: 49ba e000 | 4706 0700 | 0000 453b | 6274 0f84 | b007 0000 | 4c8b 5424 | 7045 8b5a | 1447 8b54 
  0x000001eb74bbd518: dc0c 438b | 4cd4 1085 | c90f 8499 | 1000 0044 | 8d59 ff8b | c1f0 470f | b15c d410 | 410f 94c1 
  0x000001eb74bbd538: 450f b6c9 | 4585 c90f | 84b3 1000 | 0083 f901 | 0f85 b30b | 0000 478b | 54d4 1445 | 85d2 0f85 
  0x000001eb74bbd558: 8d02 0000 

  0x000001eb74bbd55c: ;   {oop(a 'java/lang/Class'{0x00000007063d01d0} = 'com/sun/javafx/tk/quantum/QuantumRenderer')}
  0x000001eb74bbd55c: 49ba d001 | 3d06 0700 | 0000 450f | b652 7445 | 85d2 0f85 | 2410 0000 | 4c8b 5424 | 504d 8b52 
  0x000001eb74bbd57c: 2049 83c2 | 014c 8b5c | 2450 4d89 | 5320 f083 | 4424 c000 | 4180 7f40 | 000f 85cd | 0400 004c 
  0x000001eb74bbd59c: 8b54 2450 | 4589 620c | 4589 6210 | f083 4424 | c000 458b | 5a14 4585 | db0f 859f | 0100 004d 
  0x000001eb74bbd5bc: 8b97 5804 

  0x000001eb74bbd5c0: ; ImmutableOopMap {[32]=Oop [40]=NarrowOop [48]=Oop [72]=Oop [80]=Oop [88]=Oop }
                      ;*goto {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.concurrent.ThreadPoolExecutor::runWorker@158 (line 1154)
                      ;   {poll}
  0x000001eb74bbd5c0: 0000 4185 | 0233 db48 | 85db 0f85 | 3c09 0000 | 4c8b 5424 | 4845 8b5a | 2c47 8b44 | dc0c 4585 
  0x000001eb74bbd5e0: c00f 8dac | 0b00 0045 | 0fb6 5a28 | 458b d041 | 81e2 ffff | ff1f 4585 | db0f 85cd | 0800 004c 
  0x000001eb74bbd600: 8b5c 2448 | 458b 5b20 | 453b d30f | 8fb7 0b00 | 004c 8b5c | 2448 458b | 5b24 453b | d30f 8fed 
  0x000001eb74bbd620: 0b00 004c | 8b54 2448 | 458b 5230 

  0x000001eb74bbd62c: ; implicit exception: dispatches to 0x000001eb74bbe860
  0x000001eb74bbd62c: 478b 5cd4 

  0x000001eb74bbd630: ;   {metadata('java/util/concurrent/LinkedBlockingQueue')}
  0x000001eb74bbd630: 0841 81fb | 78bb 0a00 | 0f85 9a06 | 0000 49c1 | e203 4c89 | 5424 6045 | 8b5a 1c44 | 895c 2468 
  0x000001eb74bbd650: 458b 5210 | 4489 5424 | 6c43 8b5c | dc0c 85db | 0f84 0206 | 0000 4c8b | 5424 5845 | 0fb6 523a 
  0x000001eb74bbd670: 4585 d20f | 85df 0b00 | 0033 c041 | bb01 0000 | 00f0 450f | b15c dc10 | 410f 94c0 | 450f b6c0 
  0x000001eb74bbd690: 448b 5424 | 6849 c1e2 | 034c 8954 | 2438 498d | 3cdc 4585 | c00f 8466 | 0200 0041 | 807f 4000 
  0x000001eb74bbd6b0: 0f85 8504 | 0000 448b | 5c24 2845 | 895c dc0c | 4c8b 5424 | 584d 8bda | 4c8b d74d | 33da 49c1 
  0x000001eb74bbd6d0: eb15 4d85 | db74 1a49 | c1ea 0948 | b900 302f | 79eb 0100 | 0049 03ca | 8039 020f | 85ba 0400 
  0x000001eb74bbd6f0: 0044 8b54 | 246c 478b | 5cd4 0c45 | 85db 0f85 | f2f7 ffff | 4b8d 2cd4 | 0f1f 8400 | 0000 0000 
  0x000001eb74bbd710: 4c8b 5424 | 6045 8b5a | 2047 8b44 

  0x000001eb74bbd71c: ;   {metadata('java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject')}
  0x000001eb74bbd71c: dc08 4181 | f850 5307 | 000f 8561 | 0700 004b 

  0x000001eb74bbd72c: ;   {optimized virtual_call}
  0x000001eb74bbd72c: 8d14 dce8 

  0x000001eb74bbd730: ; ImmutableOopMap {rbp=Oop [32]=Oop [40]=NarrowOop [48]=Oop [56]=Oop [72]=Oop [80]=Oop [88]=Oop [96]=Oop [104]=NarrowOop [108]=NarrowOop }
                      ;*invokeinterface await {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.concurrent.LinkedBlockingQueue::take@27 (line 435)
                      ; - java.util.concurrent.ThreadPoolExecutor::getTask@147 (line 1070)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@26 (line 1130)
  0x000001eb74bbd730: 4cca ffff 

  0x000001eb74bbd734: ;   {other}
  0x000001eb74bbd734: 0f1f 8400 | 240d 0003 | 4d8b 9758 

  0x000001eb74bbd740: ; ImmutableOopMap {rbp=Oop [32]=Oop [40]=NarrowOop [48]=Oop [56]=Oop [72]=Oop [80]=Oop [88]=Oop [96]=Oop [104]=NarrowOop [108]=NarrowOop }
                      ;*goto {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.concurrent.LinkedBlockingQueue::take@32 (line 435)
                      ; - java.util.concurrent.ThreadPoolExecutor::getTask@147 (line 1070)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@26 (line 1130)
                      ;   {poll}
  0x000001eb74bbd740: 0400 0041 | 8502 448b | 5c24 6c47 | 8b5c dc0c | 4585 db74 | bbe9 9cf7 | ffff 478b | 54dc 1445 
  0x000001eb74bbd760: 85d2 0f84 | 53fe ffff | 478b 5cd4 | 0c45 85db | 0f84 45fe | ffff 438b | 44d4 0c44 | 8bc0 4183 
  0x000001eb74bbd780: e0fe f047 | 0fb1 44d4 | 0c41 0f94 | c045 0fb6 | c045 85c0 | 0f84 3a0f | 0000 478b | 5cd4 1847 
  0x000001eb74bbd7a0: 8b44 dc08 | 49ba 0000 | 0000 0800 | 0000 4d03 | d04d 8b52 

  0x000001eb74bbd7b4: ;   {metadata('java/lang/BaseVirtualThread')}
  0x000001eb74bbd7b4: 4049 b8d0 | 7f04 0008 | 0000 004d | 3bd0 0f84 | 7f0e 0000 | 4f8d 04dc 

  0x000001eb74bbd7cc: ;   {oop(a 'jdk/internal/misc/Unsafe'{0x0000000706359d58})}
  0x000001eb74bbd7cc: 48ba 589d | 3506 0700 

  0x000001eb74bbd7d4: ;   {optimized virtual_call}
  0x000001eb74bbd7d4: 0000 90e8 

  0x000001eb74bbd7d8: ; ImmutableOopMap {[32]=Oop [40]=NarrowOop [48]=Oop [72]=Oop [80]=Oop [88]=Oop }
                      ;*invokevirtual unpark {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.concurrent.locks.LockSupport::unpark@22 (line 181)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::signalNext@30 (line 645)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::release@12 (line 1060)
                      ; - java.util.concurrent.ThreadPoolExecutor$Worker::unlock@2 (line 670)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@131 (line 1153)
  0x000001eb74bbd7d8: a412 7aff 

  0x000001eb74bbd7dc: ;   {other}
  0x000001eb74bbd7dc: 0f1f 8400 | cc0d 0005 | e9d2 fdff | ff47 8b44 | d414 4585 | c00f 8465 | fdff ff47 | 8b54 c40c 
  0x000001eb74bbd7fc: 4585 d20f | 8457 fdff | ff43 8b44 | c40c 448b | d841 83e3 | fef0 470f | b15c c40c | 410f 94c2 
  0x000001eb74bbd81c: 450f b6d2 | 4585 d20f | 84d7 0e00 | 0047 8b5c | c418 478b | 54dc 0849 | b800 0000 | 0008 0000 
  0x000001eb74bbd83c: 004d 03c2 | 4d8b 5040 

  0x000001eb74bbd844: ;   {metadata('java/lang/BaseVirtualThread')}
  0x000001eb74bbd844: 49b8 d07f | 0400 0800 | 0000 4d3b | d00f 8419 | 0e00 004f 

  0x000001eb74bbd858: ;   {oop(a 'jdk/internal/misc/Unsafe'{0x0000000706359d58})}
  0x000001eb74bbd858: 8d04 dc48 | ba58 9d35 | 0607 0000 

  0x000001eb74bbd864: ;   {optimized virtual_call}
  0x000001eb74bbd864: 0066 90e8 

  0x000001eb74bbd868: ; ImmutableOopMap {[32]=Oop [40]=NarrowOop [48]=Oop [72]=Oop [80]=Oop [88]=Oop [96]=Oop }
                      ;*invokevirtual unpark {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.concurrent.locks.LockSupport::unpark@22 (line 181)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::signalNext@30 (line 645)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::releaseShared@12 (line 1147)
                      ; - java.util.concurrent.CountDownLatch::countDown@5 (line 290)
                      ; - com.sun.javafx.tk.quantum.PaintCollector::done@123 (line 318)
                      ; - com.sun.javafx.tk.RenderJob::run@81 (line 77)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@92 (line 1144)
  0x000001eb74bbd868: d431 e0ff 

  0x000001eb74bbd86c: ;   {other}
  0x000001eb74bbd86c: 0f1f 8400 | 5c0e 0006 | e9e3 fcff | ff47 8b54 | d414 4585 | d20f 8476 | f7ff ff47 | 8b44 d40c 
  0x000001eb74bbd88c: 4585 c00f | 8468 f7ff | ff43 8b44 | d40c 448b | d841 83e3 | fef0 470f | b15c d40c | 410f 94c0 
  0x000001eb74bbd8ac: 450f b6c0 | 4585 c00f | 847f 0e00 | 0047 8b5c | d418 478b | 44dc 0849 | ba00 0000 | 0008 0000 
  0x000001eb74bbd8cc: 004d 03d0 | 4d8b 5240 

  0x000001eb74bbd8d4: ;   {metadata('java/lang/BaseVirtualThread')}
  0x000001eb74bbd8d4: 49b8 d07f | 0400 0800 | 0000 4d3b | d00f 84ad | 0d00 004f 

  0x000001eb74bbd8e8: ;   {oop(a 'jdk/internal/misc/Unsafe'{0x0000000706359d58})}
  0x000001eb74bbd8e8: 8d04 dc48 | ba58 9d35 | 0607 0000 

  0x000001eb74bbd8f4: ;   {optimized virtual_call}
  0x000001eb74bbd8f4: 0066 90e8 

  0x000001eb74bbd8f8: ; ImmutableOopMap {[32]=Oop [40]=NarrowOop [48]=Oop [72]=Oop [80]=Oop [88]=Oop [96]=Oop [112]=NarrowOop }
                      ;*invokevirtual unpark {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.concurrent.locks.LockSupport::unpark@22 (line 181)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::signalNext@30 (line 645)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::release@12 (line 1060)
                      ; - java.util.concurrent.locks.ReentrantLock::unlock@5 (line 494)
                      ; - java.util.concurrent.LinkedBlockingQueue::take@61 (line 442)
                      ; - java.util.concurrent.ThreadPoolExecutor::getTask@147 (line 1070)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@26 (line 1130)
  0x000001eb74bbd8f8: 8411 7aff 

  0x000001eb74bbd8fc: ;   {other}
  0x000001eb74bbd8fc: 0f1f 8400 | ec0e 0007 | e9f4 f6ff | ff45 33db | e9ce f6ff | ff45 8b54 | dc0c 49c1 | e203 4c8b 
  0x000001eb74bbd91c: 5c24 584d | 3bd3 0f84 | 1f03 0000 | 488b d741 | b801 0000 

  0x000001eb74bbd930: ;   {optimized virtual_call}
  0x000001eb74bbd930: 0066 90e8 

  0x000001eb74bbd934: ; ImmutableOopMap {[32]=Oop [40]=NarrowOop [48]=Oop [56]=Oop [72]=Oop [80]=Oop [88]=Oop [96]=Oop [104]=NarrowOop [108]=NarrowOop }
                      ;*invokevirtual acquireInterruptibly {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.concurrent.locks.ReentrantLock$Sync::lockInterruptibly@23 (line 161)
                      ; - java.util.concurrent.locks.ReentrantLock::lockInterruptibly@4 (line 372)
                      ; - java.util.concurrent.LinkedBlockingQueue::take@13 (line 432)
                      ; - java.util.concurrent.ThreadPoolExecutor::getTask@147 (line 1070)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@26 (line 1130)
  0x000001eb74bbd934: 7815 0000 

  0x000001eb74bbd938: ;   {other}
  0x000001eb74bbd938: 0f1f 8400 | 280f 0008 | e9ac fdff | ff45 8b54 | dc10 4585 | d20f 84bc | f5ff ff4d | 8b5f 2849 
  0x000001eb74bbd958: 8bca 48c1 | e103 4d85 | db0f 84ba | 0600 004d | 8b57 384b | 894c 1af8 | 4983 c3f8 | 4d89 5f28 
  0x000001eb74bbd978: e992 f5ff | ff4c 8b54 | 2460 458b | 5a14 4585 | db0f 848b | f5ff ff4d | 8b57 2849 | 8bcb 48c1 
  0x000001eb74bbd998: e103 4d85 | d20f 8461 | 0600 004d | 8b5f 384b | 894c 13f8 | 4983 c2f8 | 4d89 5728 | e961 f5ff 
  0x000001eb74bbd9b8: ff45 8b5c | fc0c 4585 | db0f 84ac | f5ff ff4d | 8b57 2849 | 8bcb 48c1 | e103 4d85 | d20f 8463 
  0x000001eb74bbd9d8: 0600 004d | 8b5f 384b | 894c 13f8 | 4983 c2f8 | 4d89 5728 | e982 f5ff | ff4c 8b54 | 2450 458b 
  0x000001eb74bbd9f8: 5a0c 4585 | db0f 8460 | f6ff ff4d | 8b57 2849 | 8bcb 48c1 | e103 4d85 | d20f 847d | 0600 004d 
  0x000001eb74bbda18: 8b5f 384b | 894c 13f8 | 4983 c2f8 | 4d89 5728 | e936 f6ff | ff4c 8b54 | 2438 458b 

  0x000001eb74bbda34: ;   {no_reloc}
  0x000001eb74bbda34: 1a45 85db | 0f84 66f7 | ffff 4d8b | 5728 498b | cb48 c1e1 | 034d 85d2 | 0f84 9206 | 0000 4d8b 
  0x000001eb74bbda54: 5f38 4b89 | 4c13 f849 | 83c2 f84d | 8957 28e9 | 3cf7 ffff | 458b 5b0c | 4585 db0f | 8426 fbff 
  0x000001eb74bbda74: ff4d 8b57 | 2849 8bcb | 48c1 e103 | 4d85 d20f | 84b3 0600 | 004d 8b5f | 384b 894c | 13f8 4983 
  0x000001eb74bbda94: c2f8 4d89 | 5728 e9fc | faff ff4d | 8b57 484d | 8b5f 58f0 | 8344 24c0 | 0080 3900 | 0f84 ebf5 
  0x000001eb74bbdab4: ffff 4488 | 214d 85d2 | 751d 498b | d749 ba40 | f6cd cafe | 7f00 0041 

  0x000001eb74bbdacc: ;   {other}
  0x000001eb74bbdacc: ffd2 0f1f | 8400 0000 | 0000 e9c6 | f5ff ff4b | 894c 13f8 | 4983 c2f8 | 4d89 5748 | e9b4 f5ff 
  0x000001eb74bbdaec: ff4d 8b57 | 484d 8b5f | 58f0 8344 | 24c0 0080 | 3900 0f84 | 5af4 ffff | 4488 214d | 85d2 751d 
  0x000001eb74bbdb0c: 498b d749 | ba40 f6cd | cafe 7f00 | 0041 ffd2 

  0x000001eb74bbdb1c: ;   {other}
  0x000001eb74bbdb1c: 0f1f 8400 | 0000 0000 | e935 f4ff | ff4b 894c | 13f8 4983 | c2f8 4d89 | 5748 e923 | f4ff ff45 
  0x000001eb74bbdb3c: 8b5c dc0c | 4585 db0f | 846d fbff | ff4d 8b57 | 2849 8bcb | 48c1 e103 | 4d85 d20f | 84fc 0500 
  0x000001eb74bbdb5c: 004d 8b5f | 384b 894c | 13f8 4983 | c2f8 4d89 | 5728 e943 | fbff ff45 | 8b54 dc0c | 4585 d20f 
  0x000001eb74bbdb7c: 8453 f4ff | ff4d 8b5f | 2849 8bca | 48c1 e103 | 4d85 db0f | 84e1 0500 | 004d 8b57 | 384b 894c 
  0x000001eb74bbdb9c: 1af8 4983 | c3f8 4d89 | 5f28 e929 | f4ff ff4d | 8b57 484d | 8b5f 58f0 | 8344 24c0 | 0080 3900 
  0x000001eb74bbdbbc: 0f84 2ffb | ffff 4488 | 214d 85d2 | 751d 498b | d749 ba40 | f6cd cafe | 7f00 0041 

  0x000001eb74bbdbd8: ;   {other}
  0x000001eb74bbdbd8: ffd2 0f1f | 8400 0000 | 0000 e90a | fbff ff4b | 894c 13f8 | 4983 c2f8 | 4d89 5748 | e9f8 faff 
  0x000001eb74bbdbf8: ff4d 8b57 | 484d 8b5f | 58f0 8344 | 24c0 0080 | 3900 0f84 | 21f5 ffff | 4488 214d | 85d2 751d 
  0x000001eb74bbdc18: 498b d749 | ba40 f6cd | cafe 7f00 | 0041 ffd2 

  0x000001eb74bbdc28: ;   {other}
  0x000001eb74bbdc28: 0f1f 8400 | 0000 0000 | e9fc f4ff | ff4b 894c | 13f8 4983 | c2f8 4d89 | 5748 e9ea | f4ff ff45 
  0x000001eb74bbdc48: 8b5c dc10 | 41ff c345 | 85db 0f8c | 240b 0000 | 4589 5cdc | 10f0 8344 | 24c0 00e9 | 89fa ffff 
  0x000001eb74bbdc68: baf6 ffff | ff48 ff74 | 2430 488f | 4424 2848 | 8944 24f8 | 8b44 2440 | 8944 2430 | 488b 4424 
  0x000001eb74bbdc88: f848 ff74 | 2448 488f 

  0x000001eb74bbdc90: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bbdc90: 4424 38e8 

  0x000001eb74bbdc94: ; ImmutableOopMap {[40]=Oop [56]=Oop [80]=Oop [96]=Oop [104]=NarrowOop [108]=NarrowOop }
                      ;*invokevirtual lockInterruptibly {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.concurrent.locks.ReentrantLock::lockInterruptibly@4 (line 372)
                      ; - java.util.concurrent.LinkedBlockingQueue::take@13 (line 432)
                      ; - java.util.concurrent.ThreadPoolExecutor::getTask@147 (line 1070)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@26 (line 1130)
  0x000001eb74bbdc94: 6869 7aff 

  0x000001eb74bbdc98: ;   {other}
  0x000001eb74bbdc98: 0f1f 8400 | 8812 0009 | baf6 ffff | ff48 ff74 | 2430 488f 

  0x000001eb74bbdcac: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bbdcac: 4424 28e8 

  0x000001eb74bbdcb0: ; ImmutableOopMap {[40]=Oop [72]=Oop [80]=Oop [96]=Oop }
                      ;*invokevirtual isVsyncSupported {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.QuantumToolkit::isVsyncEnabled@10 (line 477)
                      ; - com.sun.javafx.tk.quantum.QuantumToolkit::vsyncHint@1 (line 609)
                      ; - com.sun.javafx.tk.quantum.PaintCollector::done@101 (line 304)
                      ; - com.sun.javafx.tk.RenderJob::run@81 (line 77)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@92 (line 1144)
  0x000001eb74bbdcb0: 4c69 7aff 

  0x000001eb74bbdcb4: ;   {other}
  0x000001eb74bbdcb4: 0f1f 8400 | a412 000a | baf6 ffff | ff48 ff74 | 2430 488f 

  0x000001eb74bbdcc8: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bbdcc8: 4424 28e8 

  0x000001eb74bbdccc: ; ImmutableOopMap {[40]=Oop [72]=Oop [80]=Oop [96]=Oop }
                      ;*invokevirtual notifyRenderingFinished {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.PaintCollector::done@107 (line 307)
                      ; - com.sun.javafx.tk.RenderJob::run@81 (line 77)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@92 (line 1144)
  0x000001eb74bbdccc: 3069 7aff 

  0x000001eb74bbdcd0: ;   {other}
  0x000001eb74bbdcd0: 0f1f 8400 | c012 000b | bade ffff | ff48 ff74 | 2430 488f | 4424 2844 | 8954 2434 

  0x000001eb74bbdcec: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bbdcec: 6666 90e8 

  0x000001eb74bbdcf0: ; ImmutableOopMap {[40]=Oop [52]=NarrowOop [72]=Oop [80]=Oop }
                      ;*invokeinterface take {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.concurrent.ThreadPoolExecutor::getTask@147 (line 1070)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@26 (line 1130)
  0x000001eb74bbdcf0: 0c69 7aff 

  0x000001eb74bbdcf4: ;   {other}
  0x000001eb74bbdcf4: 0f1f 8400 | e412 000c | bade ffff | ff48 8b6c | 2448 48ff | 7424 3048 | 8f44 2428 | 48ff 7424 
  0x000001eb74bbdd14: 6048 8f44 | 2430 4889 | 4424 f88b | 4424 4089 | 4424 3848 | 8b44 24f8 | 4489 5c24 

  0x000001eb74bbdd30: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bbdd30: 3c66 90e8 

  0x000001eb74bbdd34: ; ImmutableOopMap {rbp=Oop [40]=Oop [48]=Oop [60]=NarrowOop [80]=Oop }
                      ;*invokeinterface call {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.concurrent.FutureTask::runAndReset@44 (line 358)
                      ; - com.sun.javafx.tk.RenderJob::run@1 (line 58)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@92 (line 1144)
  0x000001eb74bbdd34: c868 7aff 

  0x000001eb74bbdd38: ;   {other}
  0x000001eb74bbdd38: 0f1f 8400 | 2813 000d | bade ffff | ff48 ff74 | 2448 488f | 4424 2048 | ff74 2450 | 488f 4424 
  0x000001eb74bbdd58: 2848 ff74 | 2460 488f | 4424 3844 | 8954 2444 

  0x000001eb74bbdd68: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bbdd68: 6666 90e8 

  0x000001eb74bbdd6c: ; ImmutableOopMap {rbp=Oop [32]=Oop [40]=Oop [48]=Oop [56]=Oop [68]=NarrowOop }
                      ;*invokeinterface run {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.concurrent.Executors$RunnableAdapter::call@4 (line 572)
                      ; - java.util.concurrent.FutureTask::runAndReset@44 (line 358)
                      ; - com.sun.javafx.tk.RenderJob::run@1 (line 58)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@92 (line 1144)
  0x000001eb74bbdd6c: 9068 7aff 

  0x000001eb74bbdd70: ;   {other}
  0x000001eb74bbdd70: 0f1f 8400 | 6013 000e | bade ffff | ff48 ff74 | 2430 488f | 4424 2848 | ff74 2460 | 488f 4424 
  0x000001eb74bbdd90: 3048 8944 | 24f8 8b44 | 2440 8944 | 2438 488b | 4424 f844 | 8954 243c 

  0x000001eb74bbdda8: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bbdda8: 6666 90e8 

  0x000001eb74bbddac: ; ImmutableOopMap {[40]=Oop [48]=Oop [60]=NarrowOop [72]=Oop [80]=Oop }
                      ;*invokeinterface done {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.RenderJob::run@81 (line 77)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@92 (line 1144)
  0x000001eb74bbddac: 5068 7aff 

  0x000001eb74bbddb0: ;   {other}
  0x000001eb74bbddb0: 0f1f 8400 | a013 000f | 498b d34c | 8d84 2480 

  0x000001eb74bbddc0: ;   {runtime_call _complete_monitor_locking_Java}
  0x000001eb74bbddc0: 0000 00e8 

  0x000001eb74bbddc4: ; ImmutableOopMap {[32]=Oop [40]=NarrowOop [48]=Oop [56]=Oop [72]=Oop [80]=Oop [88]=Oop [96]=Oop [104]=NarrowOop [112]=Oop }
                      ;*synchronization entry
                      ; - com.sun.javafx.tk.quantum.GlassScene::frameRendered@-1 (line 327)
                      ; - com.sun.javafx.tk.quantum.PaintCollector::done@65 (line 291)
                      ; - com.sun.javafx.tk.RenderJob::run@81 (line 77)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@92 (line 1144)
  0x000001eb74bbddc4: b8de 86ff 

  0x000001eb74bbddc8: ;   {other}
  0x000001eb74bbddc8: 0f1f 8400 | b813 0010 | e9b5 f4ff | ffba deff | ffff 488b | 6c24 4848 | ff74 2430 | 488f 4424 
  0x000001eb74bbdde8: 2848 8944 | 24f8 8b44 | 2440 8944 | 2438 488b | 4424 f844 | 8954 243c 

  0x000001eb74bbde00: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bbde00: 6666 90e8 

  0x000001eb74bbde04: ; ImmutableOopMap {rbp=Oop [40]=Oop [60]=NarrowOop [80]=Oop [96]=Oop [104]=NarrowOop [112]=Oop }
                      ;*invokeinterface frameRendered {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.GlassScene::frameRendered@11 (line 328)
                      ; - com.sun.javafx.tk.quantum.PaintCollector::done@65 (line 291)
                      ; - com.sun.javafx.tk.RenderJob::run@81 (line 77)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@92 (line 1144)
  0x000001eb74bbde04: f867 7aff 

  0x000001eb74bbde08: ;   {other}
  0x000001eb74bbde08: 0f1f 8400 | f813 0011 

  0x000001eb74bbde10: ;   {oop(a 'java/lang/Object'{0x0000000706543320})}
  0x000001eb74bbde10: 48ba 2033 | 5406 0700 | 0000 4c8d | 8424 8800 

  0x000001eb74bbde20: ;   {runtime_call _complete_monitor_locking_Java}
  0x000001eb74bbde20: 0000 90e8 

  0x000001eb74bbde24: ; ImmutableOopMap {rbp=Oop [32]=Oop [40]=NarrowOop [48]=Oop [56]=Oop [72]=Oop [80]=Oop [88]=Oop [96]=Oop [104]=NarrowOop [112]=Oop }
                      ;*monitorenter {reexecute=0 rethrow=0 return_oop=0}
                      ; - javafx.scene.Scene$ScenePeerPaintListener::frameRendered@5 (line 2997)
                      ; - com.sun.javafx.tk.quantum.GlassScene::frameRendered@11 (line 328)
                      ; - com.sun.javafx.tk.quantum.PaintCollector::done@65 (line 291)
                      ; - com.sun.javafx.tk.RenderJob::run@81 (line 77)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@92 (line 1144)
  0x000001eb74bbde24: 58de 86ff 

  0x000001eb74bbde28: ;   {other}
  0x000001eb74bbde28: 0f1f 8400 | 1814 0012 | e9ea f4ff 

  0x000001eb74bbde34: ;   {oop(a 'java/lang/Object'{0x0000000706543320})}
  0x000001eb74bbde34: ff48 b920 | 3354 0607 | 0000 0048 | 8d94 2488 | 0000 004d | 8bc7 49ba | 50df 0ecb | fe7f 0000 
  0x000001eb74bbde54: ;   {other}
  0x000001eb74bbde54: 41ff d20f | 1f84 0000 | 0000 00e9 | 75f5 ffff | 498b cb48 | 8d94 2480 | 0000 004d | 8bc7 49ba 
  0x000001eb74bbde74: 50df 0ecb | fe7f 0000 

  0x000001eb74bbde7c: ;   {other}
  0x000001eb74bbde7c: 41ff d20f | 1f84 0000 | 0000 00e9 | edf5 ffff | bade ffff | ff48 ff74 | 2430 488f | 4424 2848 
  0x000001eb74bbde9c: 8944 24f8 | 8b44 2440 | 8944 2430 | 488b 4424 | f848 ff74 | 2448 488f | 4424 3844 | 895c 244c 
  0x000001eb74bbdebc: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bbdebc: 6666 90e8 

  0x000001eb74bbdec0: ; ImmutableOopMap {[40]=Oop [56]=Oop [76]=NarrowOop [80]=Oop [96]=Oop [104]=NarrowOop [108]=NarrowOop }
                      ;*invokeinterface await {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.concurrent.LinkedBlockingQueue::take@27 (line 435)
                      ; - java.util.concurrent.ThreadPoolExecutor::getTask@147 (line 1070)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@26 (line 1130)
  0x000001eb74bbdec0: 3c67 7aff 

  0x000001eb74bbdec4: ;   {other}
  0x000001eb74bbdec4: 0f1f 8400 | b414 0013 | ba45 ffff | ff48 ff74 | 2430 488f | 4424 2848 | 8944 24f8 | 8b44 2440 
  0x000001eb74bbdee4: 8944 2430 | 488b 4424 | f844 8944 | 2434 4489 | 5424 4044 | 895c 2444 

  0x000001eb74bbdefc: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bbdefc: 6666 90e8 

  0x000001eb74bbdf00: ; ImmutableOopMap {[40]=Oop [72]=Oop [80]=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.concurrent.ThreadPoolExecutor::getTask@54 (line 1058)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@26 (line 1130)
  0x000001eb74bbdf00: fc66 7aff 

  0x000001eb74bbdf04: ;   {other}
  0x000001eb74bbdf04: 0f1f 8400 | f414 0014 | ba45 ffff | ff48 ff74 | 2430 488f | 4424 2848 | 8944 24f8 | 8b44 2440 
  0x000001eb74bbdf24: 8944 2438 | 488b 4424 | f848 895c 

  0x000001eb74bbdf30: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bbdf30: 2440 90e8 

  0x000001eb74bbdf34: ; ImmutableOopMap {[40]=Oop [64]=Oop [72]=Oop [80]=Oop }
                      ;*ifnonnull {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.concurrent.ThreadPoolExecutor::runWorker@22 (line 1130)
  0x000001eb74bbdf34: c866 7aff 

  0x000001eb74bbdf38: ;   {other}
  0x000001eb74bbdf38: 0f1f 8400 | 2815 0015 | ba45 ffff | ff48 ff74 | 2430 488f | 4424 2848 | ff74 2460 | 488f 4424 
  0x000001eb74bbdf58: 3048 8944 | 24f8 8b44 | 2440 8944 | 2438 488b | 4424 f844 | 8954 243c 

  0x000001eb74bbdf70: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bbdf70: 6666 90e8 

  0x000001eb74bbdf74: ; ImmutableOopMap {[40]=Oop [48]=Oop [72]=Oop [80]=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.concurrent.FutureTask::runAndReset@4 (line 349)
                      ; - com.sun.javafx.tk.RenderJob::run@1 (line 58)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@92 (line 1144)
  0x000001eb74bbdf74: 8866 7aff 

  0x000001eb74bbdf78: ;   {other}
  0x000001eb74bbdf78: 0f1f 8400 | 6815 0016 | ba45 ffff | ff48 8b6c | 2448 48ff | 7424 3048 | 8f44 2428 | 48ff 7424 
  0x000001eb74bbdf98: 6048 8f44 | 2430 4889 | 4424 f88b | 4424 4089 | 4424 3848 | 8b44 24f8 | 4489 5424 

  0x000001eb74bbdfb4: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bbdfb4: 3c66 90e8 

  0x000001eb74bbdfb8: ; ImmutableOopMap {rbp=Oop [40]=Oop [48]=Oop [80]=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.concurrent.FutureTask::runAndReset@40 (line 356)
                      ; - com.sun.javafx.tk.RenderJob::run@1 (line 58)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@92 (line 1144)
  0x000001eb74bbdfb8: 4466 7aff 

  0x000001eb74bbdfbc: ;   {other}
  0x000001eb74bbdfbc: 0f1f 8400 | ac15 0017 | ba45 ffff | ff48 ff74 | 2430 488f | 4424 2848 | ff74 2460 | 488f 4424 
  0x000001eb74bbdfdc: 3048 8944 | 24f8 8b44 | 2440 8944 | 2438 488b | 4424 f844 | 8954 243c 

  0x000001eb74bbdff4: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bbdff4: 6666 90e8 

  0x000001eb74bbdff8: ; ImmutableOopMap {[40]=Oop [48]=Oop [72]=Oop [80]=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.concurrent.FutureTask::runAndReset@116 (line 374)
                      ; - com.sun.javafx.tk.RenderJob::run@1 (line 58)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@92 (line 1144)
  0x000001eb74bbdff8: 0466 7aff 

  0x000001eb74bbdffc: ;   {other}
  0x000001eb74bbdffc: 0f1f 8400 | ec15 0018 | 498b d749 | ba60 f6cd | cafe 7f00 | 0041 ffd2 

  0x000001eb74bbe014: ;   {other}
  0x000001eb74bbe014: 0f1f 8400 | 0000 0000 | e9f9 eeff | ff49 8bd7 | 49ba 60f6 | cdca fe7f | 0000 41ff 

  0x000001eb74bbe030: ;   {other}
  0x000001eb74bbe030: d20f 1f84 | 0000 0000 | 00e9 d1ee | ffff 498b | d749 ba60 | f6cd cafe | 7f00 0041 

  0x000001eb74bbe04c: ;   {other}
  0x000001eb74bbe04c: ffd2 0f1f | 8400 0000 | 0000 e918 | efff ff4d | 63d3 ba45 | ffff ff41 | bb01 0000 | 004d 3bd3 
  0x000001eb74bbe06c: bdff ffff | ff7c 0840 | 0f95 c540 | 0fb6 ed48 | ff74 2448 | 488f 4424 

  0x000001eb74bbe084: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bbe084: 2066 90e8 

  0x000001eb74bbe088: ; ImmutableOopMap {[32]=Oop [48]=Oop [80]=Oop [96]=Oop [112]=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.tk.quantum.PaintCollector::done@77 (line 300)
                      ; - com.sun.javafx.tk.RenderJob::run@81 (line 77)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@92 (line 1144)
  0x000001eb74bbe088: 7465 7aff 

  0x000001eb74bbe08c: ;   {other}
  0x000001eb74bbe08c: 0f1f 8400 | 7c16 0019 | 498b d749 | ba60 f6cd | cafe 7f00 | 0041 ffd2 

  0x000001eb74bbe0a4: ;   {other}
  0x000001eb74bbe0a4: 0f1f 8400 | 0000 0000 | e9b2 efff | ffba 45ff | ffff 48ff | 7424 3048 | 8f44 2428 | 4889 4424 
  0x000001eb74bbe0c4: f88b 4424 | 4089 4424 | 3848 8b44 | 24f8 4489 

  0x000001eb74bbe0d4: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bbe0d4: 5424 3ce8 

  0x000001eb74bbe0d8: ; ImmutableOopMap {[40]=Oop [72]=Oop [80]=Oop [96]=Oop [112]=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.tk.quantum.PaintCollector::done@94 (line 303)
                      ; - com.sun.javafx.tk.RenderJob::run@81 (line 77)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@92 (line 1144)
  0x000001eb74bbe0d8: 2465 7aff 

  0x000001eb74bbe0dc: ;   {other}
  0x000001eb74bbe0dc: 0f1f 8400 | cc16 001a | 498b d749 | ba60 f6cd | cafe 7f00 | 0041 ffd2 

  0x000001eb74bbe0f4: ;   {other}
  0x000001eb74bbe0f4: 0f1f 8400 | 0000 0000 | e9a3 f0ff | ffba 45ff | ffff 48ff | 7424 3048 | 8f44 2428 | 4889 4424 
  0x000001eb74bbe114: f88b 4424 | 4089 4424 | 3848 8b44 | 24f8 4489 | 5424 3c44 | 895c 2440 

  0x000001eb74bbe12c: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bbe12c: 6666 90e8 

  0x000001eb74bbe130: ; ImmutableOopMap {[40]=Oop [60]=NarrowOop [72]=Oop [80]=Oop [96]=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.concurrent.CountDownLatch$Sync::tryReleaseShared@25 (line 183)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::releaseShared@2 (line 1146)
                      ; - java.util.concurrent.CountDownLatch::countDown@5 (line 290)
                      ; - com.sun.javafx.tk.quantum.PaintCollector::done@123 (line 318)
                      ; - com.sun.javafx.tk.RenderJob::run@81 (line 77)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@92 (line 1144)
  0x000001eb74bbe130: cc64 7aff 

  0x000001eb74bbe134: ;   {other}
  0x000001eb74bbe134: 0f1f 8400 | 2417 001b | 498b d749 | ba60 f6cd | cafe 7f00 | 0041 ffd2 

  0x000001eb74bbe14c: ;   {other}
  0x000001eb74bbe14c: 0f1f 8400 | 0000 0000 | e942 f4ff | ff49 8bd7 | 49ba 60f6 | cdca fe7f | 0000 41ff 

  0x000001eb74bbe168: ;   {other}
  0x000001eb74bbe168: d20f 1f84 | 0000 0000 | 00e9 40f5 | ffff 498b | d749 ba60 | f6cd cafe | 7f00 0041 

  0x000001eb74bbe184: ;   {other}
  0x000001eb74bbe184: ffd2 0f1f | 8400 0000 | 0000 e941 | eeff ffba | 45ff ffff | 48ff 7424 | 3048 8f44 | 2428 4889 
  0x000001eb74bbe1a4: 4424 f88b | 4424 4089 | 4424 3048 | 8b44 24f8 | 4489 4424 

  0x000001eb74bbe1b8: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bbe1b8: 4066 90e8 

  0x000001eb74bbe1bc: ; ImmutableOopMap {[40]=Oop [72]=Oop [80]=Oop }
                      ;*if_icmplt {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.concurrent.ThreadPoolExecutor::runStateAtLeast@2 (line 413)
                      ; - java.util.concurrent.ThreadPoolExecutor::getTask@12 (line 1049)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@26 (line 1130)
  0x000001eb74bbe1bc: 4064 7aff 

  0x000001eb74bbe1c0: ;   {other}
  0x000001eb74bbe1c0: 0f1f 8400 | b017 001c | ba45 ffff | ff48 ff74 | 2430 488f | 4424 2848 | 8944 24f8 | 8b44 2440 
  0x000001eb74bbe1e0: 8944 2430 | 488b 4424 | f848 ff74 | 2448 488f | 4424 3844 | 8944 2434 | 4489 5424 | 4444 895c 
  0x000001eb74bbe200: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bbe200: 2448 90e8 

  0x000001eb74bbe204: ; ImmutableOopMap {[40]=Oop [56]=Oop [80]=Oop }
                      ;*if_icmple {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.concurrent.ThreadPoolExecutor::getTask@62 (line 1058)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@26 (line 1130)
  0x000001eb74bbe204: f863 7aff 

  0x000001eb74bbe208: ;   {other}
  0x000001eb74bbe208: 0f1f 8400 | f817 001d | ba45 ffff | ff48 ff74 | 2430 488f | 4424 2848 | 8944 24f8 | 8b44 2440 
  0x000001eb74bbe228: 8944 2430 | 488b 4424 | f848 ff74 | 2448 488f | 4424 3844 | 8944 2434 | 4489 5424 | 4444 895c 
  0x000001eb74bbe248: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bbe248: 2448 90e8 

  0x000001eb74bbe24c: ; ImmutableOopMap {[40]=Oop [56]=Oop [80]=Oop }
                      ;*if_icmpgt {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.concurrent.ThreadPoolExecutor::getTask@77 (line 1060)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@26 (line 1130)
  0x000001eb74bbe24c: b063 7aff 

  0x000001eb74bbe250: ;   {other}
  0x000001eb74bbe250: 0f1f 8400 | 4018 001e | ba45 ffff | ff48 ff74 | 2450 488f | 4424 2048 | ff74 2430 | 488f 4424 
  0x000001eb74bbe270: 2848 8944 | 24f8 8b44 | 2440 8944 | 2430 488b | 4424 f848 | ff74 2448 | 488f 4424 | 3889 5c24 
  0x000001eb74bbe290: 4c48 ff74 | 2458 488f | 4424 5044 | 8954 245c 

  0x000001eb74bbe2a0: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bbe2a0: 6666 90e8 

  0x000001eb74bbe2a4: ; ImmutableOopMap {[32]=Oop [40]=Oop [56]=Oop [76]=NarrowOop [80]=Oop [96]=Oop [104]=NarrowOop [108]=NarrowOop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.lang.Thread::getAndClearInterrupt@6 (line 1782)
                      ; - java.lang.Thread::interrupted@3 (line 1745)
                      ; - java.util.concurrent.locks.ReentrantLock$Sync::lockInterruptibly@0 (line 158)
                      ; - java.util.concurrent.locks.ReentrantLock::lockInterruptibly@4 (line 372)
                      ; - java.util.concurrent.LinkedBlockingQueue::take@13 (line 432)
                      ; - java.util.concurrent.ThreadPoolExecutor::getTask@147 (line 1070)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@26 (line 1130)
  0x000001eb74bbe2a4: 5863 7aff 

  0x000001eb74bbe2a8: ;   {other}
  0x000001eb74bbe2a8: 0f1f 8400 | 9818 001f | ba45 ffff | ff48 ff74 | 2450 488f | 4424 2848 | 8944 24f8 | 8b44 2440 
  0x000001eb74bbe2c8: 8944 2438 | 488b 4424 | f848 ff74 | 2448 488f 

  0x000001eb74bbe2d8: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bbe2d8: 4424 40e8 

  0x000001eb74bbe2dc: ; ImmutableOopMap {[40]=Oop [48]=Oop [64]=Oop [96]=Oop [104]=NarrowOop [112]=NarrowOop }
                      ;*if_icmple {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.concurrent.LinkedBlockingQueue::take@47 (line 439)
                      ; - java.util.concurrent.ThreadPoolExecutor::getTask@147 (line 1070)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@26 (line 1130)
  0x000001eb74bbe2dc: 2063 7aff 

  0x000001eb74bbe2e0: ;   {other}
  0x000001eb74bbe2e0: 0f1f 8400 | d018 0020 | ba45 ffff | ff48 ff74 | 2450 488f | 4424 2848 | 8944 24f8 | 8b44 2440 
  0x000001eb74bbe300: 8944 2438 | 488b 4424 | f848 ff74 | 2448 488f | 4424 4089 | 5c24 5044 | 8954 2454 

  0x000001eb74bbe31c: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bbe31c: 6666 90e8 

  0x000001eb74bbe320: ; ImmutableOopMap {[40]=Oop [48]=Oop [64]=Oop [80]=NarrowOop [84]=NarrowOop [88]=Oop [96]=Oop [112]=NarrowOop }
                      ;*if_acmpeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.concurrent.locks.ReentrantLock$Sync::tryRelease@14 (line 174)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::release@2 (line 1059)
                      ; - java.util.concurrent.locks.ReentrantLock::unlock@5 (line 494)
                      ; - java.util.concurrent.LinkedBlockingQueue::take@61 (line 442)
                      ; - java.util.concurrent.ThreadPoolExecutor::getTask@147 (line 1070)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@26 (line 1130)
  0x000001eb74bbe320: dc62 7aff 

  0x000001eb74bbe324: ;   {other}
  0x000001eb74bbe324: 0f1f 8400 | 1419 0021 | ba45 ffff | ff48 ff74 | 2450 488f | 4424 2848 | 8944 24f8 | 8b44 2440 
  0x000001eb74bbe344: 8944 2438 | 488b 4424 | f848 ff74 | 2448 488f | 4424 4044 | 895c 2450 

  0x000001eb74bbe35c: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bbe35c: 6666 90e8 

  0x000001eb74bbe360: ; ImmutableOopMap {[40]=Oop [48]=Oop [64]=Oop [96]=Oop [112]=NarrowOop }
                      ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.concurrent.LinkedBlockingQueue::take@82 (line 444)
                      ; - java.util.concurrent.ThreadPoolExecutor::getTask@147 (line 1070)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@26 (line 1130)
  0x000001eb74bbe360: 9c62 7aff 

  0x000001eb74bbe364: ;   {other}
  0x000001eb74bbe364: 0f1f 8400 | 5419 0022 | ba45 ffff | ff48 ff74 | 2430 488f | 4424 2848 | 8944 24f8 | 8b44 2440 
  0x000001eb74bbe384: 8944 2438 | 488b 4424 | f844 895c 

  0x000001eb74bbe390: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bbe390: 243c 90e8 

  0x000001eb74bbe394: ; ImmutableOopMap {[40]=Oop [72]=Oop [80]=Oop [96]=Oop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.concurrent.ThreadPoolExecutor$Worker::tryAcquire@6 (line 655)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::acquire@2 (line 989)
                      ; - java.util.concurrent.ThreadPoolExecutor$Worker::lock@2 (line 668)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@35 (line 1131)
  0x000001eb74bbe394: 6862 7aff 

  0x000001eb74bbe398: ;   {other}
  0x000001eb74bbe398: 0f1f 8400 | 8819 0023 | ba45 ffff | ff48 ff74 | 2430 488f | 4424 2844 | 8954 243c 

  0x000001eb74bbe3b4: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bbe3b4: 6666 90e8 

  0x000001eb74bbe3b8: ; ImmutableOopMap {[40]=Oop [72]=Oop [80]=Oop [96]=Oop }
                      ;*if_icmplt {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.concurrent.ThreadPoolExecutor::runStateAtLeast@2 (line 413)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@47 (line 1136)
  0x000001eb74bbe3b8: 4462 7aff 

  0x000001eb74bbe3bc: ;   {other}
  0x000001eb74bbe3bc: 0f1f 8400 | ac19 0024 | ba45 ffff | ff48 8b6c | 2448 48ff | 7424 3048 | 8f44 2428 | 4889 4424 
  0x000001eb74bbe3dc: f88b 4424 | 4089 4424 | 3848 8b44 | 24f8 4489 

  0x000001eb74bbe3ec: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bbe3ec: 5c24 48e8 

  0x000001eb74bbe3f0: ; ImmutableOopMap {rbp=Oop [40]=Oop [80]=Oop [88]=Oop [96]=Oop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.lang.Thread::getAndClearInterrupt@6 (line 1782)
                      ; - java.lang.Thread::interrupted@3 (line 1745)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@53 (line 1137)
  0x000001eb74bbe3f0: 0c62 7aff 

  0x000001eb74bbe3f4: ;   {other}
  0x000001eb74bbe3f4: 0f1f 8400 | e419 0025 | ba45 ffff | ff48 ff74 | 2430 488f | 4424 2848 | ff74 2460 | 488f 4424 
  0x000001eb74bbe414: 3048 8944 | 24f8 8b44 | 2440 8944 | 2438 488b | 4424 f889 

  0x000001eb74bbe428: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bbe428: 5c24 3ce8 

  0x000001eb74bbe42c: ; ImmutableOopMap {[40]=Oop [48]=Oop [72]=Oop [80]=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.concurrent.FutureTask::runAndReset@18 (line 350)
                      ; - com.sun.javafx.tk.RenderJob::run@1 (line 58)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@92 (line 1144)
  0x000001eb74bbe42c: d061 7aff 

  0x000001eb74bbe430: ;   {other}
  0x000001eb74bbe430: 0f1f 8400 | 201a 0026 | ba45 ffff | ff48 8b6c | 2448 48ff | 7424 5048 | 8f44 2420 | 48ff 7424 
  0x000001eb74bbe450: 3048 8f44 | 2428 48ff | 7424 6048 | 8f44 2430 | 4889 4424 | f88b 4424 | 4089 4424 | 3848 8b44 
  0x000001eb74bbe470: 24f8 897c | 243c 4489 

  0x000001eb74bbe478: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bbe478: 5424 54e8 

  0x000001eb74bbe47c: ; ImmutableOopMap {rbp=Oop [32]=Oop [40]=Oop [48]=Oop }
                      ;*if_icmplt {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.concurrent.FutureTask::runAndReset@75 (line 371)
                      ; - com.sun.javafx.tk.RenderJob::run@1 (line 58)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@92 (line 1144)
  0x000001eb74bbe47c: 8061 7aff 

  0x000001eb74bbe480: ;   {other}
  0x000001eb74bbe480: 0f1f 8400 | 701a 0027 | ba45 ffff | ff48 ff74 | 2430 488f | 4424 2848 | ff74 2460 | 488f 4424 
  0x000001eb74bbe4a0: 3048 8944 | 24f8 8b44 | 2440 8944 | 2438 488b | 4424 f889 

  0x000001eb74bbe4b4: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bbe4b4: 7c24 3ce8 

  0x000001eb74bbe4b8: ; ImmutableOopMap {[40]=Oop [48]=Oop [72]=Oop [80]=Oop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.concurrent.FutureTask::runAndReset@112 (line 374)
                      ; - com.sun.javafx.tk.RenderJob::run@1 (line 58)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@92 (line 1144)
  0x000001eb74bbe4b8: 4461 7aff 

  0x000001eb74bbe4bc: ;   {other}
  0x000001eb74bbe4bc: 0f1f 8400 | ac1a 0028 | ba45 ffff | ff48 ff74 | 2430 488f | 4424 2848 | 8944 24f8 | 8b44 2440 
  0x000001eb74bbe4dc: 8944 2438 | 488b 4424 | f844 8944 

  0x000001eb74bbe4e8: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bbe4e8: 2440 90e8 

  0x000001eb74bbe4ec: ; ImmutableOopMap {[40]=Oop [64]=NarrowOop [72]=Oop [80]=Oop [96]=Oop [104]=NarrowOop }
                      ;*ifnonnull {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.tk.quantum.PaintCollector::done@51 (line 282)
                      ; - com.sun.javafx.tk.RenderJob::run@81 (line 77)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@92 (line 1144)
  0x000001eb74bbe4ec: 1061 7aff 

  0x000001eb74bbe4f0: ;   {other}
  0x000001eb74bbe4f0: 0f1f 8400 | e01a 0029 | ba45 ffff | ff48 ff74 | 2448 488f | 4424 2048 | ff74 2450 | 488f 4424 
  0x000001eb74bbe510: 2844 895c 

  0x000001eb74bbe514: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bbe514: 2450 90e8 

  0x000001eb74bbe518: ; ImmutableOopMap {rbp=Oop [32]=Oop [40]=Oop [48]=Oop [80]=NarrowOop [96]=Oop [104]=NarrowOop [112]=Oop }
                      ;*ifnull {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) javafx.scene.Scene$ScenePeerPaintListener::frameRendered@13 (line 2998)
                      ; - com.sun.javafx.tk.quantum.GlassScene::frameRendered@11 (line 328)
                      ; - com.sun.javafx.tk.quantum.PaintCollector::done@65 (line 291)
                      ; - com.sun.javafx.tk.RenderJob::run@81 (line 77)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@92 (line 1144)
  0x000001eb74bbe518: e460 7aff 

  0x000001eb74bbe51c: ;   {other}
  0x000001eb74bbe51c: 0f1f 8400 | 0c1b 002a | ba45 ffff | ff48 ff74 | 2430 488f | 4424 2848 | 8944 24f8 | 8b44 2440 
  0x000001eb74bbe53c: 8944 2438 | 488b 4424 | f844 8954 

  0x000001eb74bbe548: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bbe548: 243c 90e8 

  0x000001eb74bbe54c: ; ImmutableOopMap {[40]=Oop [72]=Oop [80]=Oop [96]=Oop [112]=Oop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.tk.quantum.PaintCollector::done@84 (line 303)
                      ; - com.sun.javafx.tk.RenderJob::run@81 (line 77)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@92 (line 1144)
  0x000001eb74bbe54c: b060 7aff 

  0x000001eb74bbe550: ;   {other}
  0x000001eb74bbe550: 0f1f 8400 | 401b 002b | ba45 ffff | ff48 8b6c | 2448 48ff | 7424 3048 | 8f44 2428 | 4889 4424 
  0x000001eb74bbe570: f88b 4424 | 4089 4424 | 3848 8b44 | 24f8 4489 | 5c24 3c44 | 8954 2448 

  0x000001eb74bbe588: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bbe588: 6666 90e8 

  0x000001eb74bbe58c: ; ImmutableOopMap {rbp=Oop [40]=Oop [60]=NarrowOop [80]=Oop [96]=Oop [112]=Oop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.tk.quantum.QuantumToolkit::vsyncHint@10 (line 610)
                      ; - com.sun.javafx.tk.quantum.PaintCollector::done@101 (line 304)
                      ; - com.sun.javafx.tk.RenderJob::run@81 (line 77)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@92 (line 1144)
  0x000001eb74bbe58c: 7060 7aff 

  0x000001eb74bbe590: ;   {other}
  0x000001eb74bbe590: 0f1f 8400 | 801b 002c | ba45 ffff | ff48 8b6c | 2420 48ff | 7424 3048 | 8f44 2428 | 4489 5424 
  0x000001eb74bbe5b0: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bbe5b0: 3c66 90e8 

  0x000001eb74bbe5b4: ; ImmutableOopMap {rbp=Oop [40]=Oop [80]=Oop [96]=Oop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.tk.quantum.QuantumRenderer::afterExecute@9 (line 234)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@100 (line 1145)
  0x000001eb74bbe5b4: 4860 7aff 

  0x000001eb74bbe5b8: ;   {other}
  0x000001eb74bbe5b8: 0f1f 8400 | a81b 002d | ba45 ffff | ff48 ff74 | 2430 488f | 4424 2848 | 8944 24f8 | 8b44 2440 
  0x000001eb74bbe5d8: 8944 2438 | 488b 4424 | f844 8954 | 243c 894c 

  0x000001eb74bbe5e8: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bbe5e8: 2440 90e8 

  0x000001eb74bbe5ec: ; ImmutableOopMap {[40]=Oop [60]=NarrowOop [72]=Oop [80]=Oop [96]=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.concurrent.CountDownLatch$Sync::tryReleaseShared@6 (line 179)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::releaseShared@2 (line 1146)
                      ; - java.util.concurrent.CountDownLatch::countDown@5 (line 290)
                      ; - com.sun.javafx.tk.quantum.PaintCollector::done@123 (line 318)
                      ; - com.sun.javafx.tk.RenderJob::run@81 (line 77)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@92 (line 1144)
  0x000001eb74bbe5ec: 1060 7aff 

  0x000001eb74bbe5f0: ;   {other}
  0x000001eb74bbe5f0: 0f1f 8400 | e01b 002e | ba45 ffff | ff48 ff74 | 2430 488f | 4424 2848 | 8944 24f8 | 8b44 2440 
  0x000001eb74bbe610: 8944 2438 | 488b 4424 | f844 8954 | 2440 4489 

  0x000001eb74bbe620: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bbe620: 4c24 44e8 

  0x000001eb74bbe624: ; ImmutableOopMap {[40]=Oop [64]=NarrowOop [72]=Oop [80]=Oop [96]=Oop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.concurrent.CountDownLatch$Sync::tryReleaseShared@21 (line 182)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::releaseShared@2 (line 1146)
                      ; - java.util.concurrent.CountDownLatch::countDown@5 (line 290)
                      ; - com.sun.javafx.tk.quantum.PaintCollector::done@123 (line 318)
                      ; - com.sun.javafx.tk.RenderJob::run@81 (line 77)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@92 (line 1144)
  0x000001eb74bbe624: d85f 7aff 

  0x000001eb74bbe628: ;   {other}
  0x000001eb74bbe628: 0f1f 8400 | 181c 002f | 4533 c0e9 | 22e8 ffff | 33c9 e93b | e8ff ff45 | 33ed e964 | e8ff ffba 
  0x000001eb74bbe648: 45ff ffff | 488b 6c24 | 2048 ff74 | 2430 488f | 4424 2844 | 895c 2434 

  0x000001eb74bbe660: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bbe660: 6666 90e8 

  0x000001eb74bbe664: ; ImmutableOopMap {rbp=Oop [40]=Oop [52]=NarrowOop [80]=Oop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.concurrent.locks.LockSupport::unpark@8 (line 178)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::signalNext@30 (line 645)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::release@12 (line 1060)
                      ; - java.util.concurrent.ThreadPoolExecutor$Worker::unlock@2 (line 670)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@131 (line 1153)
  0x000001eb74bbe664: 985f 7aff 

  0x000001eb74bbe668: ;   {other}
  0x000001eb74bbe668: 0f1f 8400 | 581c 0030 | ba45 ffff | ff48 ff74 | 2430 488f | 4424 2844 | 895c 243c 

  0x000001eb74bbe684: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bbe684: 6666 90e8 

  0x000001eb74bbe688: ; ImmutableOopMap {[40]=Oop [60]=NarrowOop [72]=Oop [80]=Oop [96]=Oop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.concurrent.locks.LockSupport::unpark@8 (line 178)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::signalNext@30 (line 645)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::releaseShared@12 (line 1147)
                      ; - java.util.concurrent.CountDownLatch::countDown@5 (line 290)
                      ; - com.sun.javafx.tk.quantum.PaintCollector::done@123 (line 318)
                      ; - com.sun.javafx.tk.RenderJob::run@81 (line 77)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@92 (line 1144)
  0x000001eb74bbe688: 745f 7aff 

  0x000001eb74bbe68c: ;   {other}
  0x000001eb74bbe68c: 0f1f 8400 | 7c1c 0031 | ba45 ffff | ff48 ff74 | 2450 488f | 4424 2848 | 8944 24f8 | 8b44 2440 
  0x000001eb74bbe6ac: 8944 2438 | 488b 4424 | f848 ff74 | 2448 488f | 4424 4044 | 895c 2450 

  0x000001eb74bbe6c4: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bbe6c4: 6666 90e8 

  0x000001eb74bbe6c8: ; ImmutableOopMap {[40]=Oop [48]=Oop [64]=Oop [80]=NarrowOop [96]=Oop [112]=NarrowOop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.concurrent.locks.LockSupport::unpark@8 (line 178)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::signalNext@30 (line 645)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::release@12 (line 1060)
                      ; - java.util.concurrent.locks.ReentrantLock::unlock@5 (line 494)
                      ; - java.util.concurrent.LinkedBlockingQueue::take@61 (line 442)
                      ; - java.util.concurrent.ThreadPoolExecutor::getTask@147 (line 1070)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@26 (line 1130)
  0x000001eb74bbe6c8: 345f 7aff 

  0x000001eb74bbe6cc: ;   {other}
  0x000001eb74bbe6cc: 0f1f 8400 | bc1c 0032 | ba45 ffff | ff48 8b6c | 2420 48ff | 7424 3048 | 8f44 2428 | 4489 5424 
  0x000001eb74bbe6ec: 3844 8944 

  0x000001eb74bbe6f0: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bbe6f0: 243c 90e8 

  0x000001eb74bbe6f4: ; ImmutableOopMap {rbp=Oop [40]=Oop [56]=NarrowOop [80]=Oop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) jdk.internal.misc.Unsafe::getAndBitwiseAndInt@21 (line 3233)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer$Node::getAndUnsetStatus@10 (line 481)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::signalNext@22 (line 644)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::release@12 (line 1060)
                      ; - java.util.concurrent.ThreadPoolExecutor$Worker::unlock@2 (line 670)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@131 (line 1153)
  0x000001eb74bbe6f4: 085f 7aff 

  0x000001eb74bbe6f8: ;   {other}
  0x000001eb74bbe6f8: 0f1f 8400 | e81c 0033 | ba45 ffff | ff48 ff74 | 2430 488f | 4424 2848 | 8944 24f8 | 8b44 2440 
  0x000001eb74bbe718: 8944 2438 | 488b 4424 | f844 8944 | 2440 4489 

  0x000001eb74bbe728: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bbe728: 5424 44e8 

  0x000001eb74bbe72c: ; ImmutableOopMap {[40]=Oop [64]=NarrowOop [72]=Oop [80]=Oop [96]=Oop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) jdk.internal.misc.Unsafe::getAndBitwiseAndInt@21 (line 3233)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer$Node::getAndUnsetStatus@10 (line 481)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::signalNext@22 (line 644)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::releaseShared@12 (line 1147)
                      ; - java.util.concurrent.CountDownLatch::countDown@5 (line 290)
                      ; - com.sun.javafx.tk.quantum.PaintCollector::done@123 (line 318)
                      ; - com.sun.javafx.tk.RenderJob::run@81 (line 77)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@92 (line 1144)
  0x000001eb74bbe72c: d05e 7aff 

  0x000001eb74bbe730: ;   {other}
  0x000001eb74bbe730: 0f1f 8400 | 201d 0034 | ba45 ffff | ff48 ff74 | 2450 488f | 4424 2848 | 8944 24f8 | 8b44 2440 
  0x000001eb74bbe750: 8944 2438 | 488b 4424 | f848 ff74 | 2448 488f | 4424 4044 | 8954 2454 | 4489 4424 

  0x000001eb74bbe76c: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bbe76c: 5866 90e8 

  0x000001eb74bbe770: ; ImmutableOopMap {[40]=Oop [48]=Oop [64]=Oop [84]=NarrowOop [96]=Oop [112]=NarrowOop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) jdk.internal.misc.Unsafe::getAndBitwiseAndInt@21 (line 3233)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer$Node::getAndUnsetStatus@10 (line 481)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::signalNext@22 (line 644)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::release@12 (line 1060)
                      ; - java.util.concurrent.locks.ReentrantLock::unlock@5 (line 494)
                      ; - java.util.concurrent.LinkedBlockingQueue::take@61 (line 442)
                      ; - java.util.concurrent.ThreadPoolExecutor::getTask@147 (line 1070)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@26 (line 1130)
  0x000001eb74bbe770: 8c5e 7aff 

  0x000001eb74bbe774: ;   {other}
  0x000001eb74bbe774: 0f1f 8400 | 641d 0035 | ba1e 0000 | 0048 ff74 | 2430 488f | 4424 2848 | 8944 24f8 | 8b44 2440 
  0x000001eb74bbe794: 8944 2430 | 488b 4424 | f848 ff74 | 2448 488f | 4424 3889 

  0x000001eb74bbe7a8: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bbe7a8: 5c24 4ce8 

  0x000001eb74bbe7ac: ; ImmutableOopMap {[40]=Oop [56]=Oop [76]=NarrowOop [80]=Oop [96]=Oop [104]=NarrowOop [108]=NarrowOop }
                      ;*new {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.concurrent.locks.ReentrantLock$NonfairSync::initialTryLock@39 (line 231)
                      ; - java.util.concurrent.locks.ReentrantLock$Sync::lockInterruptibly@15 (line 160)
                      ; - java.util.concurrent.locks.ReentrantLock::lockInterruptibly@4 (line 372)
                      ; - java.util.concurrent.LinkedBlockingQueue::take@13 (line 432)
                      ; - java.util.concurrent.ThreadPoolExecutor::getTask@147 (line 1070)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@26 (line 1130)
  0x000001eb74bbe7ac: 505e 7aff 

  0x000001eb74bbe7b0: ;   {other}
  0x000001eb74bbe7b0: 0f1f 8400 | a01d 0036 | ba76 ffff | ff49 8be8 | 4889 4c24 | 204c 896c | 2428 4889 | 5c24 3089 
  0x000001eb74bbe7d0: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bbe7d0: 7c24 38e8 

  0x000001eb74bbe7d4: ; ImmutableOopMap {rbp=Oop [32]=Oop [40]=Oop [48]=Oop }
                      ;*aload_3 {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@21 (line 1130)
  0x000001eb74bbe7d4: 285e 7aff 

  0x000001eb74bbe7d8: ;   {other}
  0x000001eb74bbe7d8: 0f1f 8400 | c81d 0037 | ba8d ffff | ff4c 896c | 2420 4889 | 5c24 2889 | 7c24 3048 | 8974 2438 
  0x000001eb74bbe7f8: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bbe7f8: 6666 90e8 

  0x000001eb74bbe7fc: ; ImmutableOopMap {rbp=Oop [32]=Oop [40]=Oop [56]=Oop }
                      ;*aload_3 {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@21 (line 1130)
  0x000001eb74bbe7fc: 005e 7aff 

  0x000001eb74bbe800: ;   {other}
  0x000001eb74bbe800: 0f1f 8400 | f01d 0038 | bade ffff | ff48 ff74 | 2430 488f 

  0x000001eb74bbe814: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bbe814: 4424 28e8 

  0x000001eb74bbe818: ; ImmutableOopMap {[40]=Oop [72]=Oop [80]=Oop [112]=NarrowOop }
                      ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.concurrent.ThreadPoolExecutor::getTask@152 (line 1070)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@26 (line 1130)
  0x000001eb74bbe818: e45d 7aff 

  0x000001eb74bbe81c: ;   {other}
  0x000001eb74bbe81c: 0f1f 8400 | 0c1e 0039 | 488b 5424 | 604c 8bc0 

  0x000001eb74bbe82c: ;   {optimized virtual_call}
  0x000001eb74bbe82c: 6666 90e8 

  0x000001eb74bbe830: ; ImmutableOopMap {[32]=Oop [40]=NarrowOop [48]=Oop [72]=Oop [80]=Oop [88]=Oop [96]=Oop [56]=Derived_oop_[96] }
                      ;*invokevirtual setException {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.concurrent.FutureTask::runAndReset@60 (line 361)
                      ; - com.sun.javafx.tk.RenderJob::run@1 (line 58)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@92 (line 1144)
  0x000001eb74bbe830: 4c02 7aff 

  0x000001eb74bbe834: ;   {other}
  0x000001eb74bbe834: 0f1f 8400 | 241e 003a | 33ff e956 | e9ff ffba | f6ff ffff | 48ff 7424 | 3048 8f44 

  0x000001eb74bbe850: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bbe850: 2428 90e8 

  0x000001eb74bbe854: ; ImmutableOopMap {[40]=Oop [72]=Oop [80]=Oop }
                      ;*invokevirtual get {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.concurrent.ThreadPoolExecutor::getTask@6 (line 1046)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@26 (line 1130)
  0x000001eb74bbe854: a85d 7aff 

  0x000001eb74bbe858: ;   {other}
  0x000001eb74bbe858: 0f1f 8400 | 481e 003b | baf6 ffff | ff48 ff74 | 2430 488f 

  0x000001eb74bbe86c: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bbe86c: 4424 28e8 

  0x000001eb74bbe870: ; ImmutableOopMap {[40]=Oop [72]=Oop [80]=Oop }
                      ;*invokeinterface take {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.concurrent.ThreadPoolExecutor::getTask@147 (line 1070)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@26 (line 1130)
  0x000001eb74bbe870: 8c5d 7aff 

  0x000001eb74bbe874: ;   {other}
  0x000001eb74bbe874: 0f1f 8400 | 641e 003c | baf6 ffff | ff48 ff74 | 2430 488f | 4424 2848 | 8944 24f8 | 8b44 2440 
  0x000001eb74bbe894: 8944 2430 | 488b 4424 

  0x000001eb74bbe89c: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bbe89c: f866 90e8 

  0x000001eb74bbe8a0: ; ImmutableOopMap {[40]=Oop [72]=Oop [80]=Oop [96]=Oop [108]=NarrowOop }
                      ;*invokevirtual lockInterruptibly {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.concurrent.LinkedBlockingQueue::take@13 (line 432)
                      ; - java.util.concurrent.ThreadPoolExecutor::getTask@147 (line 1070)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@26 (line 1130)
  0x000001eb74bbe8a0: 5c5d 7aff 

  0x000001eb74bbe8a4: ;   {other}
  0x000001eb74bbe8a4: 0f1f 8400 | 941e 003d | baf6 ffff | ff48 ff74 | 2430 488f | 4424 2848 | 8944 24f8 | 8b44 2440 
  0x000001eb74bbe8c4: 8944 2430 | 488b 4424 

  0x000001eb74bbe8cc: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bbe8cc: f866 90e8 

  0x000001eb74bbe8d0: ; ImmutableOopMap {[40]=Oop [72]=Oop [80]=Oop [96]=Oop [104]=NarrowOop }
                      ;*invokevirtual get {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.concurrent.LinkedBlockingQueue::take@17 (line 434)
                      ; - java.util.concurrent.ThreadPoolExecutor::getTask@147 (line 1070)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@26 (line 1130)
  0x000001eb74bbe8d0: 2c5d 7aff 

  0x000001eb74bbe8d4: ;   {other}
  0x000001eb74bbe8d4: 0f1f 8400 | c41e 003e | baf6 ffff | ff48 ff74 | 2430 488f | 4424 2848 | 8944 24f8 | 8b44 2440 
  0x000001eb74bbe8f4: 8944 2430 | 488b 4424 | f848 ff74 | 2448 488f 

  0x000001eb74bbe904: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bbe904: 4424 38e8 

  0x000001eb74bbe908: ; ImmutableOopMap {[40]=Oop [56]=Oop [80]=Oop [96]=Oop [104]=NarrowOop [108]=NarrowOop }
                      ;*getfield next {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.concurrent.LinkedBlockingQueue::dequeue@6 (line 216)
                      ; - java.util.concurrent.LinkedBlockingQueue::take@36 (line 437)
                      ; - java.util.concurrent.ThreadPoolExecutor::getTask@147 (line 1070)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@26 (line 1130)
  0x000001eb74bbe908: f45c 7aff 

  0x000001eb74bbe90c: ;   {other}
  0x000001eb74bbe90c: 0f1f 8400 | fc1e 003f | baf6 ffff | ff48 ff74 | 2430 488f | 4424 2848 | 8944 24f8 | 8b44 2440 
  0x000001eb74bbe92c: 8944 2430 | 488b 4424 | f848 ff74 | 2448 488f 

  0x000001eb74bbe93c: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bbe93c: 4424 38e8 

  0x000001eb74bbe940: ; ImmutableOopMap {[40]=Oop [56]=Oop [80]=Oop [96]=Oop [104]=NarrowOop [108]=NarrowOop }
                      ;*getfield item {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.concurrent.LinkedBlockingQueue::dequeue@21 (line 219)
                      ; - java.util.concurrent.LinkedBlockingQueue::take@36 (line 437)
                      ; - java.util.concurrent.ThreadPoolExecutor::getTask@147 (line 1070)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@26 (line 1130)
  0x000001eb74bbe940: bc5c 7aff 

  0x000001eb74bbe944: ;   {other}
  0x000001eb74bbe944: 0f1f 8400 | 341f 0040 | baf6 ffff | ff48 8944 | 24f8 8b44 | 2440 8944 | 2438 488b | 4424 f848 
  0x000001eb74bbe964: ff74 2448 | 488f 4424 

  0x000001eb74bbe96c: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bbe96c: 4066 90e8 

  0x000001eb74bbe970: ; ImmutableOopMap {[48]=Oop [64]=Oop [80]=Oop [96]=Oop [112]=NarrowOop }
                      ;*invokevirtual release {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.concurrent.locks.ReentrantLock::unlock@5 (line 494)
                      ; - java.util.concurrent.LinkedBlockingQueue::take@61 (line 442)
                      ; - java.util.concurrent.ThreadPoolExecutor::getTask@147 (line 1070)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@26 (line 1130)
  0x000001eb74bbe970: 8c5c 7aff 

  0x000001eb74bbe974: ;   {other}
  0x000001eb74bbe974: 0f1f 8400 | 641f 0041 | baf4 ffff | ff48 ff74 | 2430 488f 

  0x000001eb74bbe988: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bbe988: 4424 28e8 

  0x000001eb74bbe98c: ; ImmutableOopMap {[40]=Oop [72]=Oop [80]=Oop }
                      ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.concurrent.ThreadPoolExecutor::getTask@152 (line 1070)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@26 (line 1130)
  0x000001eb74bbe98c: 705c 7aff 

  0x000001eb74bbe990: ;   {other}
  0x000001eb74bbe990: 0f1f 8400 | 801f 0042 | baf6 ffff | ff48 ff74 | 2430 488f 

  0x000001eb74bbe9a4: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bbe9a4: 4424 28e8 

  0x000001eb74bbe9a8: ; ImmutableOopMap {[40]=Oop [72]=Oop [80]=Oop [96]=Oop }
                      ;*invokevirtual get {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@42 (line 1136)
  0x000001eb74bbe9a8: 545c 7aff 

  0x000001eb74bbe9ac: ;   {other}
  0x000001eb74bbe9ac: 0f1f 8400 | 9c1f 0043 | baf6 ffff | ff48 8b6c | 2448 48ff | 7424 3048 | 8f44 2428 | 48ff 7424 
  0x000001eb74bbe9cc: 6048 8f44 | 2430 4889 | 4424 f88b | 4424 4089 | 4424 3848 | 8b44 24f8 

  0x000001eb74bbe9e4: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bbe9e4: 6666 90e8 

  0x000001eb74bbe9e8: ; ImmutableOopMap {rbp=Oop [40]=Oop [48]=Oop [80]=Oop }
                      ;*invokeinterface run {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.concurrent.Executors$RunnableAdapter::call@4 (line 572)
                      ; - java.util.concurrent.FutureTask::runAndReset@44 (line 358)
                      ; - com.sun.javafx.tk.RenderJob::run@1 (line 58)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@92 (line 1144)
  0x000001eb74bbe9e8: 145c 7aff 

  0x000001eb74bbe9ec: ;   {other}
  0x000001eb74bbe9ec: 0f1f 8400 | dc1f 0044 | baf6 ffff | ff48 ff74 | 2448 488f 

  0x000001eb74bbea00: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bbea00: 4424 20e8 

  0x000001eb74bbea04: ; ImmutableOopMap {rbp=Oop [32]=Oop [48]=Oop [80]=Oop [96]=Oop [104]=NarrowOop [112]=Oop }
                      ;*getfield tracker {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) javafx.scene.Scene$ScenePeerPaintListener::frameRendered@10 (line 2998)
                      ; - com.sun.javafx.tk.quantum.GlassScene::frameRendered@11 (line 328)
                      ; - com.sun.javafx.tk.quantum.PaintCollector::done@65 (line 291)
                      ; - com.sun.javafx.tk.RenderJob::run@81 (line 77)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@92 (line 1144)
  0x000001eb74bbea04: f85b 7aff 

  0x000001eb74bbea08: ;   {other}
  0x000001eb74bbea08: 0f1f 8400 | f81f 0045 | baf6 ffff | ff48 ff74 | 2430 488f 

  0x000001eb74bbea1c: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bbea1c: 4424 28e8 

  0x000001eb74bbea20: ; ImmutableOopMap {[40]=Oop [72]=Oop [80]=Oop [96]=Oop }
                      ;*invokevirtual getCount {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.PaintCollector::done@72 (line 300)
                      ; - com.sun.javafx.tk.RenderJob::run@81 (line 77)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@92 (line 1144)
  0x000001eb74bbea20: dc5b 7aff 

  0x000001eb74bbea24: ;   {other}
  0x000001eb74bbea24: 0f1f 8400 | 1420 0046 | baf6 ffff | ff48 ff74 | 2430 488f 

  0x000001eb74bbea38: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bbea38: 4424 28e8 

  0x000001eb74bbea3c: ; ImmutableOopMap {[40]=Oop [72]=Oop [80]=Oop [96]=Oop }
                      ;*invokevirtual getCount {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.concurrent.CountDownLatch::getCount@4 (line 301)
                      ; - com.sun.javafx.tk.quantum.PaintCollector::done@72 (line 300)
                      ; - com.sun.javafx.tk.RenderJob::run@81 (line 77)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@92 (line 1144)
  0x000001eb74bbea3c: c05b 7aff 

  0x000001eb74bbea40: ;   {other}
  0x000001eb74bbea40: 0f1f 8400 | 3020 0047 | baf6 ffff | ff48 ff74 | 2430 488f 

  0x000001eb74bbea54: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bbea54: 4424 28e8 

  0x000001eb74bbea58: ; ImmutableOopMap {[40]=Oop [72]=Oop [80]=Oop [96]=Oop }
                      ;*invokevirtual hasNativeSystemVsync {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.PaintCollector::done@91 (line 303)
                      ; - com.sun.javafx.tk.RenderJob::run@81 (line 77)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@92 (line 1144)
  0x000001eb74bbea58: a45b 7aff 

  0x000001eb74bbea5c: ;   {other}
  0x000001eb74bbea5c: 0f1f 8400 | 4c20 0048 | baf6 ffff | ff48 ff74 | 2430 488f 

  0x000001eb74bbea70: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bbea70: 4424 28e8 

  0x000001eb74bbea74: ; ImmutableOopMap {[40]=Oop [72]=Oop [80]=Oop [96]=Oop }
                      ;*invokevirtual countDown {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.PaintCollector::done@123 (line 318)
                      ; - com.sun.javafx.tk.RenderJob::run@81 (line 77)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@92 (line 1144)
  0x000001eb74bbea74: 885b 7aff 

  0x000001eb74bbea78: ;   {other}
  0x000001eb74bbea78: 0f1f 8400 | 6820 0049 | baf6 ffff | ff48 ff74 | 2430 488f 

  0x000001eb74bbea8c: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bbea8c: 4424 28e8 

  0x000001eb74bbea90: ; ImmutableOopMap {[40]=Oop [72]=Oop [80]=Oop [96]=Oop }
                      ;*invokevirtual releaseShared {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.concurrent.CountDownLatch::countDown@5 (line 290)
                      ; - com.sun.javafx.tk.quantum.PaintCollector::done@123 (line 318)
                      ; - com.sun.javafx.tk.RenderJob::run@81 (line 77)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@92 (line 1144)
  0x000001eb74bbea90: 6c5b 7aff 

  0x000001eb74bbea94: ;   {other}
  0x000001eb74bbea94: 0f1f 8400 | 8420 004a | baf6 ffff | ff48 ff74 | 2430 488f | 4424 2848 | 8944 24f8 | 8b44 2440 
  0x000001eb74bbeab4: 8944 2430 | 488b 4424 | f848 ff74 | 2448 488f 

  0x000001eb74bbeac4: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bbeac4: 4424 38e8 

  0x000001eb74bbeac8: ; ImmutableOopMap {[40]=Oop [56]=Oop [80]=Oop [96]=Oop [104]=NarrowOop [108]=NarrowOop }
                      ;*invokeinterface await {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.concurrent.LinkedBlockingQueue::take@27 (line 435)
                      ; - java.util.concurrent.ThreadPoolExecutor::getTask@147 (line 1070)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@26 (line 1130)
  0x000001eb74bbeac8: 345b 7aff 

  0x000001eb74bbeacc: ;   {other}
  0x000001eb74bbeacc: 0f1f 8400 | bc20 004b | ba45 ffff | ff48 8b6c | 2448 48ff | 7424 5048 | 8f44 2420 | 48ff 7424 
  0x000001eb74bbeaec: 3048 8f44 | 2428 48ff | 7424 6048 | 8f44 2430 | 4889 4424 | f88b 4424 | 4089 4424 | 3848 8b44 
  0x000001eb74bbeb0c: 24f8 4489 

  0x000001eb74bbeb10: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bbeb10: 5c24 50e8 

  0x000001eb74bbeb14: ; ImmutableOopMap {rbp=Oop [32]=Oop [40]=Oop [48]=Oop [80]=NarrowOop }
                      ;*ifnull {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.concurrent.FutureTask::runAndReset@36 (line 356)
                      ; - com.sun.javafx.tk.RenderJob::run@1 (line 58)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@92 (line 1144)
  0x000001eb74bbeb14: e85a 7aff 

  0x000001eb74bbeb18: ;   {other}
  0x000001eb74bbeb18: 0f1f 8400 | 0821 004c | ba45 ffff | ff48 ff74 | 2430 488f | 4424 2844 | 8954 243c 

  0x000001eb74bbeb34: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bbeb34: 6666 90e8 

  0x000001eb74bbeb38: ; ImmutableOopMap {[40]=Oop [60]=NarrowOop [72]=Oop [80]=Oop [96]=Oop }
                      ;*ifnull {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.tk.RenderJob::run@73 (line 75)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@92 (line 1144)
  0x000001eb74bbeb38: c45a 7aff 

  0x000001eb74bbeb3c: ;   {other}
  0x000001eb74bbeb3c: 0f1f 8400 | 2c21 004d | ba45 ffff | ff48 8b6c | 2448 48ff | 7424 3048 | 8f44 2428 | 4889 4424 
  0x000001eb74bbeb5c: f88b 4424 | 4089 4424 | 3848 8b44 | 24f8 4489 

  0x000001eb74bbeb6c: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bbeb6c: 5424 3ce8 

  0x000001eb74bbeb70: ; ImmutableOopMap {rbp=Oop [40]=Oop [60]=NarrowOop [80]=Oop [96]=Oop [104]=NarrowOop [112]=Oop }
                      ;*ifnull {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.tk.quantum.GlassScene::frameRendered@4 (line 327)
                      ; - com.sun.javafx.tk.quantum.PaintCollector::done@65 (line 291)
                      ; - com.sun.javafx.tk.RenderJob::run@81 (line 77)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@92 (line 1144)
  0x000001eb74bbeb70: 8c5a 7aff 

  0x000001eb74bbeb74: ;   {other}
  0x000001eb74bbeb74: 0f1f 8400 | 6421 004e | 488b d0eb | 0348 8bd0 

  0x000001eb74bbeb84: ;   {optimized virtual_call}
  0x000001eb74bbeb84: 6666 90e8 

  0x000001eb74bbeb88: ; ImmutableOopMap {[32]=Oop [40]=NarrowOop [48]=Oop [72]=Oop [80]=Oop [88]=Oop [96]=Oop }
                      ;*invokevirtual printStackTrace {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.RenderJob::run@91 (line 79)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@92 (line 1144)
  0x000001eb74bbeb88: f4fe 79ff 

  0x000001eb74bbeb8c: ;   {other}
  0x000001eb74bbeb8c: 0f1f 8400 | 7c21 004f | e9c3 e9ff | ffba 45ff | ffff 488b | 6c24 2048 | ff74 2430 | 488f 4424 
  0x000001eb74bbebac: 2844 895c 

  0x000001eb74bbebb0: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bbebb0: 2438 90e8 

  0x000001eb74bbebb4: ; ImmutableOopMap {rbp=Oop [40]=Oop [56]=NarrowOop [80]=Oop }
                      ;*ifnull {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.concurrent.locks.LockSupport::unpark@1 (line 177)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::signalNext@30 (line 645)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::release@12 (line 1060)
                      ; - java.util.concurrent.ThreadPoolExecutor$Worker::unlock@2 (line 670)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@131 (line 1153)
  0x000001eb74bbebb4: 485a 7aff 

  0x000001eb74bbebb8: ;   {other}
  0x000001eb74bbebb8: 0f1f 8400 | a821 0050 | ba45 ffff | ff48 ff74 | 2430 488f | 4424 2848 | 8944 24f8 | 8b44 2440 
  0x000001eb74bbebd8: 8944 2438 | 488b 4424 | f844 895c 

  0x000001eb74bbebe4: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bbebe4: 2440 90e8 

  0x000001eb74bbebe8: ; ImmutableOopMap {[40]=Oop [64]=NarrowOop [72]=Oop [80]=Oop [96]=Oop }
                      ;*ifnull {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.concurrent.locks.LockSupport::unpark@1 (line 177)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::signalNext@30 (line 645)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::releaseShared@12 (line 1147)
                      ; - java.util.concurrent.CountDownLatch::countDown@5 (line 290)
                      ; - com.sun.javafx.tk.quantum.PaintCollector::done@123 (line 318)
                      ; - com.sun.javafx.tk.RenderJob::run@81 (line 77)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@92 (line 1144)
  0x000001eb74bbebe8: 145a 7aff 

  0x000001eb74bbebec: ;   {other}
  0x000001eb74bbebec: 0f1f 8400 | dc21 0051 | ba45 ffff | ff48 ff74 | 2450 488f | 4424 2848 | 8944 24f8 | 8b44 2440 
  0x000001eb74bbec0c: 8944 2438 | 488b 4424 | f848 ff74 | 2448 488f | 4424 4044 | 895c 2454 

  0x000001eb74bbec24: ;   {runtime_call UncommonTrapBlob}
  0x000001eb74bbec24: 6666 90e8 

  0x000001eb74bbec28: ; ImmutableOopMap {[40]=Oop [48]=Oop [64]=Oop [84]=NarrowOop [96]=Oop [112]=NarrowOop }
                      ;*ifnull {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.concurrent.locks.LockSupport::unpark@1 (line 177)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::signalNext@30 (line 645)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::release@12 (line 1060)
                      ; - java.util.concurrent.locks.ReentrantLock::unlock@5 (line 494)
                      ; - java.util.concurrent.LinkedBlockingQueue::take@61 (line 442)
                      ; - java.util.concurrent.ThreadPoolExecutor::getTask@147 (line 1070)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@26 (line 1130)
  0x000001eb74bbec28: d459 7aff 

  0x000001eb74bbec2c: ;   {other}
  0x000001eb74bbec2c: 0f1f 8400 | 1c22 0052 | 498b d749 | ba60 f6cd | cafe 7f00 | 0041 ffd2 

  0x000001eb74bbec44: ;   {other}
  0x000001eb74bbec44: 0f1f 8400 | 0000 0000 | eb58 e98a | 0000 0048 | 8944 2420 | e967 0100 | 0048 8944 | 2420 e9ab 
  0x000001eb74bbec64: 0000 0048 | 8bd0 e976 | 0100 0044 | 8b40 0849 | ba00 0000 | 0008 0000 | 004d 03d0 | e90b 0100 
  0x000001eb74bbec84: 0048 8944 | 2430 488b | 6c24 60eb | 5148 8944 | 2428 4180 | 7f40 000f | 8551 0100 | 0048 8b5c 
  0x000001eb74bbeca4: 2438 4489 | 23f0 8344 | 24c0 0048 | 8b6c 2460 | 448b 450c | 4183 f805 | 7c1a 48ff | 7424 3048 
  0x000001eb74bbecc4: 8f44 2420 

  0x000001eb74bbecc8: ;   {optimized virtual_call}
  0x000001eb74bbecc8: 488b d5e8 

  0x000001eb74bbeccc: ; ImmutableOopMap {rbp=Oop [32]=Oop [40]=Oop [72]=Oop [80]=Oop }
                      ;*invokevirtual handlePossibleCancellationInterrupt {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.concurrent.FutureTask::runAndReset@105 (line 372)
                      ; - com.sun.javafx.tk.RenderJob::run@1 (line 58)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@92 (line 1144)
  0x000001eb74bbeccc: b0fd 79ff 

  0x000001eb74bbecd0: ;   {other}
  0x000001eb74bbecd0: 0f1f 8400 | c022 0053 | 488b 4424 | 2848 8944 | 2430 488b | 5424 484c | 8bc5 4c8b | 4c24 3066 
  0x000001eb74bbecf0: 9048 b8ff | ffff ffff 

  0x000001eb74bbecf8: ;   {virtual_call}
  0x000001eb74bbecf8: ffff ffe8 

  0x000001eb74bbecfc: ; ImmutableOopMap {[48]=Oop [72]=Oop [80]=Oop }
                      ;*invokevirtual afterExecute {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@112 (line 1147)
  0x000001eb74bbecfc: 8000 7aff 

  0x000001eb74bbed00: ;   {other}
  0x000001eb74bbed00: 0f1f 8400 | f022 0054 | 48ff 7424 | 3048 8f44 | 2420 488b | 6c24 504c | 8b55 2049 | 83c2 014c 
  0x000001eb74bbed20: 8955 20f0 | 8344 24c0 | 0048 8b54 

  0x000001eb74bbed2c: ;   {optimized virtual_call}
  0x000001eb74bbed2c: 2450 90e8 

  0x000001eb74bbed30: ; ImmutableOopMap {rbp=Oop [32]=Oop [72]=Oop [80]=Oop }
                      ;*invokevirtual unlock {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@152 (line 1153)
  0x000001eb74bbed30: 4cfd 79ff 

  0x000001eb74bbed34: ;   {other}
  0x000001eb74bbed34: 0f1f 8400 | 2423 0055 | e983 0000 | 0044 8b58 | 0849 ba00 | 0000 0008 | 0000 004d | 03d3 eb3c 
  0x000001eb74bbed54: 448b 5808 | 49ba 0000 | 0000 0800 | 0000 4d03 | d3eb 2948 | 8be8 488b 

  0x000001eb74bbed6c: ;   {optimized virtual_call}
  0x000001eb74bbed6c: 5424 38e8 

  0x000001eb74bbed70: ; ImmutableOopMap {rbp=Oop [32]=Oop [40]=NarrowOop [48]=Oop [72]=Oop [80]=Oop [88]=Oop }
                      ;*invokevirtual unlock {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.concurrent.LinkedBlockingQueue::take@71 (line 442)
                      ; - java.util.concurrent.ThreadPoolExecutor::getTask@147 (line 1070)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@26 (line 1130)
  0x000001eb74bbed70: 0cfd 79ff 

  0x000001eb74bbed74: ;   {other}
  0x000001eb74bbed74: 0f1f 8400 | 6423 0056 | 448b 4508 | 49ba 0000 | 0000 0800 | 0000 4d03 | d048 8bc5 

  0x000001eb74bbed90: ;   {metadata('java/lang/InterruptedException')}
  0x000001eb74bbed90: 49bb 50e6 | 0900 0800 | 0000 4d3b | d375 0f4d | 8b97 5804 

  0x000001eb74bbeda4: ; ImmutableOopMap {[32]=Oop [40]=NarrowOop [48]=Oop [72]=Oop [80]=Oop [88]=Oop }
                      ;*goto {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.concurrent.ThreadPoolExecutor::getTask@174 (line 1077)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@26 (line 1130)
                      ;   {poll}
  0x000001eb74bbeda4: 0000 4185 | 02e9 22e8 | ffff 4889 | 4424 2048 | 8b6c 2450 | eb0a 4889 | 4424 2048 | 8b6c 2450 
  0x000001eb74bbedc4: 488b 5424 | 484c 8bc5 | 448b 4c24 

  0x000001eb74bbedd0: ;   {optimized virtual_call}
  0x000001eb74bbedd0: 4066 90e8 

  0x000001eb74bbedd4: ; ImmutableOopMap {[32]=Oop }
                      ;*invokevirtual processWorkerExit {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@180 (line 1158)
  0x000001eb74bbedd4: a8fc 79ff 

  0x000001eb74bbedd8: ;   {other}
  0x000001eb74bbedd8: 0f1f 8400 | c823 0058 | 488b 5424 | 2048 81c4 | a000 0000 

  0x000001eb74bbedec: ;   {runtime_call _rethrow_Java}
  0x000001eb74bbedec: 5de9 8e7f | 86ff 488b | 5c24 3844 | 8b13 4585 | d20f 84a3 | feff ff4d | 8b5f 2849 | 8bca 48c1 
  0x000001eb74bbee0c: e103 4d85 | db0f 841d | feff ff4d | 8b57 384b | 894c 1af8 | 4983 c3f8 | 4d89 5f28 | e979 feff 
  0x000001eb74bbee2c: ;   {runtime_call StubRoutines (final stubs)}
  0x000001eb74bbee2c: ffe8 2e5f | 78ff e9b7 | dfff fff4 
[Stub Code]
  0x000001eb74bbee38: ;   {no_reloc}
  0x000001eb74bbee38: 48bb 0000 | 0000 0000 

  0x000001eb74bbee40: ;   {runtime_call}
  0x000001eb74bbee40: 0000 e9fb 

  0x000001eb74bbee44: ;   {static_stub}
  0x000001eb74bbee44: ffff ff48 | bb00 0000 | 0000 0000 

  0x000001eb74bbee50: ;   {runtime_call}
  0x000001eb74bbee50: 00e9 fbff 

  0x000001eb74bbee54: ;   {static_stub}
  0x000001eb74bbee54: ffff 48bb | 0000 0000 | 0000 0000 

  0x000001eb74bbee60: ;   {runtime_call}
  0x000001eb74bbee60: e9fb ffff 

  0x000001eb74bbee64: ;   {static_stub}
  0x000001eb74bbee64: ff48 bb00 | 0000 0000 

  0x000001eb74bbee6c: ;   {runtime_call}
  0x000001eb74bbee6c: 0000 00e9 | fbff ffff 

  0x000001eb74bbee74: ;   {static_stub}
  0x000001eb74bbee74: 48bb 0000 | 0000 0000 

  0x000001eb74bbee7c: ;   {runtime_call}
  0x000001eb74bbee7c: 0000 e9fb 

  0x000001eb74bbee80: ;   {static_stub}
  0x000001eb74bbee80: ffff ff48 | bb00 0000 | 0000 0000 

  0x000001eb74bbee8c: ;   {runtime_call}
  0x000001eb74bbee8c: 00e9 fbff 

  0x000001eb74bbee90: ;   {static_stub}
  0x000001eb74bbee90: ffff 48bb | 0000 0000 | 0000 0000 

  0x000001eb74bbee9c: ;   {runtime_call}
  0x000001eb74bbee9c: e9fb ffff 

  0x000001eb74bbeea0: ;   {static_stub}
  0x000001eb74bbeea0: ff48 bb80 | b7e6 04eb 

  0x000001eb74bbeea8: ;   {runtime_call I2C/C2I adapters}
  0x000001eb74bbeea8: 0100 00e9 | b345 7aff 

  0x000001eb74bbeeb0: ;   {static_stub}
  0x000001eb74bbeeb0: 48bb 40b0 | 2304 eb01 

  0x000001eb74bbeeb8: ;   {runtime_call I2C/C2I adapters}
  0x000001eb74bbeeb8: 0000 e9a8 

  0x000001eb74bbeebc: ;   {static_stub}
  0x000001eb74bbeebc: 4e7a ff48 | bb00 0000 | 0000 0000 

  0x000001eb74bbeec8: ;   {runtime_call}
  0x000001eb74bbeec8: 00e9 fbff 

  0x000001eb74bbeecc: ;   {static_stub}
  0x000001eb74bbeecc: ffff 48bb | 0000 0000 | 0000 0000 

  0x000001eb74bbeed8: ;   {runtime_call}
  0x000001eb74bbeed8: e9fb ffff 

  0x000001eb74bbeedc: ;   {runtime_call ExceptionBlob}
  0x000001eb74bbeedc: ffe9 9e70 | 86ff e800 | 0000 0048 | 832c 2405 

  0x000001eb74bbeeec: ;   {runtime_call DeoptimizationBlob}
  0x000001eb74bbeeec: e9af 5a7a | fff4 f4f4 | f4f4 f4f4 
[/MachCode]


---------------  P R O C E S S  ---------------

Threads class SMR info:
_java_thread_list=0x000001eb0cff4e30, length=17, elements={
0x000001eb67025a90, 0x000001eb0809cc90, 0x000001eb0809d460, 0x000001eb0809efd0,
0x000001eb0809fa30, 0x000001eb080a0490, 0x000001eb0807ab80, 0x000001eb0807bb30,
0x000001eb0807e050, 0x000001eb081db050, 0x000001eb08689280, 0x000001eb08686120,
0x000001eb0c0533c0, 0x000001eb0c147b60, 0x000001eb0c295a40, 0x000001eb0c241db0,
0x000001eb0cff52b0
}

Java Threads: ( => current thread )
  0x000001eb67025a90 JavaThread "main"                              [_thread_blocked, id=2648, stack(0x0000002cf0400000,0x0000002cf0500000) (1024K)]
  0x000001eb0809cc90 JavaThread "Reference Handler"          daemon [_thread_blocked, id=7880, stack(0x0000002cf0c00000,0x0000002cf0d00000) (1024K)]
  0x000001eb0809d460 JavaThread "Finalizer"                  daemon [_thread_blocked, id=17364, stack(0x0000002cf0d00000,0x0000002cf0e00000) (1024K)]
  0x000001eb0809efd0 JavaThread "Signal Dispatcher"          daemon [_thread_blocked, id=10660, stack(0x0000002cf0e00000,0x0000002cf0f00000) (1024K)]
  0x000001eb0809fa30 JavaThread "Attach Listener"            daemon [_thread_blocked, id=7596, stack(0x0000002cf0f00000,0x0000002cf1000000) (1024K)]
  0x000001eb080a0490 JavaThread "Service Thread"             daemon [_thread_blocked, id=13852, stack(0x0000002cf1000000,0x0000002cf1100000) (1024K)]
  0x000001eb0807ab80 JavaThread "Monitor Deflation Thread"   daemon [_thread_blocked, id=9736, stack(0x0000002cf1100000,0x0000002cf1200000) (1024K)]
  0x000001eb0807bb30 JavaThread "C2 CompilerThread0"         daemon [_thread_blocked, id=6164, stack(0x0000002cf1200000,0x0000002cf1300000) (1024K)]
  0x000001eb0807e050 JavaThread "C1 CompilerThread0"         daemon [_thread_blocked, id=7960, stack(0x0000002cf1300000,0x0000002cf1400000) (1024K)]
  0x000001eb081db050 JavaThread "Common-Cleaner"             daemon [_thread_blocked, id=9944, stack(0x0000002cf1400000,0x0000002cf1500000) (1024K)]
  0x000001eb08689280 JavaThread "Notification Thread"        daemon [_thread_blocked, id=7532, stack(0x0000002cf1700000,0x0000002cf1800000) (1024K)]
=>0x000001eb08686120 JavaThread "QuantumRenderer-0"          daemon [_thread_in_native, id=16776, stack(0x0000002cf1800000,0x0000002cf1900000) (1024K)]
  0x000001eb0c0533c0 JavaThread "InvokeLaterDispatcher"      daemon [_thread_blocked, id=4848, stack(0x0000002cf1b00000,0x0000002cf1c00000) (1024K)]
  0x000001eb0c147b60 JavaThread "JavaFX Application Thread"         [_thread_blocked, id=18684, stack(0x0000002cf1c00000,0x0000002cf1d00000) (1024K)]
  0x000001eb0c295a40 JavaThread "JavaFX-Launcher"                   [_thread_blocked, id=2084, stack(0x0000002cf1f00000,0x0000002cf2000000) (1024K)]
  0x000001eb0c241db0 JavaThread "Thread-2"                   daemon [_thread_in_native, id=13660, stack(0x0000002cf1e00000,0x0000002cf1f00000) (1024K)]
  0x000001eb0cff52b0 JavaThread "Prism Font Disposer"        daemon [_thread_blocked, id=4572, stack(0x0000002cf1500000,0x0000002cf1600000) (1024K)]
Total: 17

Other Threads:
  0x000001eb66ffb360 VMThread "VM Thread"                           [id=10380, stack(0x0000002cf0b00000,0x0000002cf0c00000) (1024K)]
  0x000001eb7ff176c0 WatcherThread "VM Periodic Task Thread"        [id=9092, stack(0x0000002cf0a00000,0x0000002cf0b00000) (1024K)]
  0x000001eb66ffafc0 WorkerThread "GC Thread#0"                     [id=1340, stack(0x0000002cf0500000,0x0000002cf0600000) (1024K)]
  0x000001eb66ffbe40 WorkerThread "GC Thread#1"                     [id=14856, stack(0x0000002cf2000000,0x0000002cf2100000) (1024K)]
  0x000001eb0c2bf3f0 WorkerThread "GC Thread#2"                     [id=13832, stack(0x0000002cf2100000,0x0000002cf2200000) (1024K)]
  0x000001eb0c2c10f0 WorkerThread "GC Thread#3"                     [id=4252, stack(0x0000002cf2200000,0x0000002cf2300000) (1024K)]
  0x000001eb0c2be1d0 WorkerThread "GC Thread#4"                     [id=14516, stack(0x0000002cf2300000,0x0000002cf2400000) (1024K)]
  0x000001eb0c2c1490 WorkerThread "GC Thread#5"                     [id=16452, stack(0x0000002cf2400000,0x0000002cf2500000) (1024K)]
  0x000001eb0c2becb0 WorkerThread "GC Thread#6"                     [id=3508, stack(0x0000002cf2800000,0x0000002cf2900000) (1024K)]
  0x000001eb0c2bf790 WorkerThread "GC Thread#7"                     [id=10008, stack(0x0000002cf2900000,0x0000002cf2a00000) (1024K)]
  0x000001eb11f40940 WorkerThread "GC Thread#8"                     [id=13076, stack(0x0000002cf1600000,0x0000002cf1700000) (1024K)]
  0x000001eb11f40ce0 WorkerThread "GC Thread#9"                     [id=17188, stack(0x0000002cf2d00000,0x0000002cf2e00000) (1024K)]
  0x000001eb6934aa30 ConcurrentGCThread "G1 Main Marker"            [id=14324, stack(0x0000002cf0600000,0x0000002cf0700000) (1024K)]
  0x000001eb66ffc1e0 WorkerThread "G1 Conc#0"                       [id=9528, stack(0x0000002cf0700000,0x0000002cf0800000) (1024K)]
  0x000001eb7fdec140 ConcurrentGCThread "G1 Refine#0"               [id=2528, stack(0x0000002cf0800000,0x0000002cf0900000) (1024K)]
  0x000001eb7fdec960 ConcurrentGCThread "G1 Service"                [id=10956, stack(0x0000002cf0900000,0x0000002cf0a00000) (1024K)]
Total: 16

Threads with active compile tasks:
Total: 0

VM state: not at safepoint (normal execution)

VM Mutex/Monitor currently owned by a thread: None

Heap address: 0x0000000705a00000, size: 4006 MB, Compressed Oops mode: Zero based, Oop shift amount: 3

CDS archive(s) not mapped
Compressed class space mapped at: 0x0000000800000000-0x0000000840000000, reserved size: 1073741824
Narrow klass base: 0x0000000800000000, Narrow klass shift: 0, Narrow klass range: 0x40000000

GC Precious Log:
 CardTable entry size: 512
 Card Set container configuration: InlinePtr #cards 4 size 8 Array Of Cards #cards 16 size 48 Howl #buckets 8 coarsen threshold 3686 Howl Bitmap #cards 512 size 80 coarsen threshold 460 Card regions per heap region 1 cards per card region 4096
 CPUs: 12 total, 12 available
 Memory: 16016M
 Large Page Support: Disabled
 NUMA Support: Disabled
 Compressed Oops: Enabled (Zero based)
 Heap Region Size: 2M
 Heap Min Capacity: 8M
 Heap Initial Capacity: 252M
 Heap Max Capacity: 4006M
 Pre-touch: Disabled
 Parallel Workers: 10
 Concurrent Workers: 3
 Concurrent Refinement Workers: 10
 Periodic GC: Disabled

Heap:
 garbage-first heap   total 258048K, used 112127K [0x0000000705a00000, 0x0000000800000000)
  region size 2048K, 48 young (98304K), 1 survivors (2048K)
 Metaspace       used 19679K, committed 19904K, reserved 1114112K
  class space    used 2089K, committed 2176K, reserved 1048576K

Heap Regions: E=young(eden), S=young(survivor), O=old, HS=humongous(starts), HC=humongous(continues), CS=collection set, F=free, TAMS=top-at-mark-start, PB=parsable bottom
|   0|0x0000000705a00000, 0x0000000705c00000, 0x0000000705c00000|100%| O|  |TAMS 0x0000000705a00000| PB 0x0000000705a00000| Untracked 
|   1|0x0000000705c00000, 0x0000000705e00000, 0x0000000705e00000|100%| O|  |TAMS 0x0000000705c00000| PB 0x0000000705c00000| Untracked 
|   2|0x0000000705e00000, 0x0000000706000000, 0x0000000706000000|100%| O|  |TAMS 0x0000000705e00000| PB 0x0000000705e00000| Untracked 
|   3|0x0000000706000000, 0x0000000706200000, 0x0000000706200000|100%| O|  |TAMS 0x0000000706000000| PB 0x0000000706000000| Untracked 
|   4|0x0000000706200000, 0x0000000706400000, 0x0000000706400000|100%| O|  |TAMS 0x0000000706200000| PB 0x0000000706200000| Untracked 
|   5|0x0000000706400000, 0x0000000706600000, 0x0000000706600000|100%| O|  |TAMS 0x0000000706400000| PB 0x0000000706400000| Untracked 
|   6|0x0000000706600000, 0x0000000706800000, 0x0000000706800000|100%| O|  |TAMS 0x0000000706600000| PB 0x0000000706600000| Untracked 
|   7|0x0000000706800000, 0x0000000706a00000, 0x0000000706a00000|100%| O|  |TAMS 0x0000000706800000| PB 0x0000000706800000| Untracked 
|   8|0x0000000706a00000, 0x0000000706b79eb0, 0x0000000706c00000| 73%| O|  |TAMS 0x0000000706a00000| PB 0x0000000706a00000| Untracked 
|   9|0x0000000706c00000, 0x0000000706c00000, 0x0000000706e00000|  0%| F|  |TAMS 0x0000000706c00000| PB 0x0000000706c00000| Untracked 
|  10|0x0000000706e00000, 0x0000000706e00000, 0x0000000707000000|  0%| F|  |TAMS 0x0000000706e00000| PB 0x0000000706e00000| Untracked 
|  11|0x0000000707000000, 0x0000000707000000, 0x0000000707200000|  0%| F|  |TAMS 0x0000000707000000| PB 0x0000000707000000| Untracked 
|  12|0x0000000707200000, 0x0000000707200000, 0x0000000707400000|  0%| F|  |TAMS 0x0000000707200000| PB 0x0000000707200000| Untracked 
|  13|0x0000000707400000, 0x0000000707400000, 0x0000000707600000|  0%| F|  |TAMS 0x0000000707400000| PB 0x0000000707400000| Untracked 
|  14|0x0000000707600000, 0x0000000707600000, 0x0000000707800000|  0%| F|  |TAMS 0x0000000707600000| PB 0x0000000707600000| Untracked 
|  15|0x0000000707800000, 0x0000000707800000, 0x0000000707a00000|  0%| F|  |TAMS 0x0000000707800000| PB 0x0000000707800000| Untracked 
|  16|0x0000000707a00000, 0x0000000707a00000, 0x0000000707c00000|  0%| F|  |TAMS 0x0000000707a00000| PB 0x0000000707a00000| Untracked 
|  17|0x0000000707c00000, 0x0000000707c00000, 0x0000000707e00000|  0%| F|  |TAMS 0x0000000707c00000| PB 0x0000000707c00000| Untracked 
|  18|0x0000000707e00000, 0x0000000707e00000, 0x0000000708000000|  0%| F|  |TAMS 0x0000000707e00000| PB 0x0000000707e00000| Untracked 
|  19|0x0000000708000000, 0x0000000708000000, 0x0000000708200000|  0%| F|  |TAMS 0x0000000708000000| PB 0x0000000708000000| Untracked 
|  20|0x0000000708200000, 0x0000000708200000, 0x0000000708400000|  0%| F|  |TAMS 0x0000000708200000| PB 0x0000000708200000| Untracked 
|  21|0x0000000708400000, 0x0000000708400000, 0x0000000708600000|  0%| F|  |TAMS 0x0000000708400000| PB 0x0000000708400000| Untracked 
|  22|0x0000000708600000, 0x0000000708600000, 0x0000000708800000|  0%| F|  |TAMS 0x0000000708600000| PB 0x0000000708600000| Untracked 
|  23|0x0000000708800000, 0x0000000708800000, 0x0000000708a00000|  0%| F|  |TAMS 0x0000000708800000| PB 0x0000000708800000| Untracked 
|  24|0x0000000708a00000, 0x0000000708a00000, 0x0000000708c00000|  0%| F|  |TAMS 0x0000000708a00000| PB 0x0000000708a00000| Untracked 
|  25|0x0000000708c00000, 0x0000000708c00000, 0x0000000708e00000|  0%| F|  |TAMS 0x0000000708c00000| PB 0x0000000708c00000| Untracked 
|  26|0x0000000708e00000, 0x0000000708e00000, 0x0000000709000000|  0%| F|  |TAMS 0x0000000708e00000| PB 0x0000000708e00000| Untracked 
|  27|0x0000000709000000, 0x0000000709000000, 0x0000000709200000|  0%| F|  |TAMS 0x0000000709000000| PB 0x0000000709000000| Untracked 
|  28|0x0000000709200000, 0x0000000709200000, 0x0000000709400000|  0%| F|  |TAMS 0x0000000709200000| PB 0x0000000709200000| Untracked 
|  29|0x0000000709400000, 0x0000000709400000, 0x0000000709600000|  0%| F|  |TAMS 0x0000000709400000| PB 0x0000000709400000| Untracked 
|  30|0x0000000709600000, 0x0000000709600000, 0x0000000709800000|  0%| F|  |TAMS 0x0000000709600000| PB 0x0000000709600000| Untracked 
|  31|0x0000000709800000, 0x0000000709800000, 0x0000000709a00000|  0%| F|  |TAMS 0x0000000709800000| PB 0x0000000709800000| Untracked 
|  32|0x0000000709a00000, 0x0000000709a00000, 0x0000000709c00000|  0%| F|  |TAMS 0x0000000709a00000| PB 0x0000000709a00000| Untracked 
|  33|0x0000000709c00000, 0x0000000709c00000, 0x0000000709e00000|  0%| F|  |TAMS 0x0000000709c00000| PB 0x0000000709c00000| Untracked 
|  34|0x0000000709e00000, 0x0000000709e00000, 0x000000070a000000|  0%| F|  |TAMS 0x0000000709e00000| PB 0x0000000709e00000| Untracked 
|  35|0x000000070a000000, 0x000000070a000000, 0x000000070a200000|  0%| F|  |TAMS 0x000000070a000000| PB 0x000000070a000000| Untracked 
|  36|0x000000070a200000, 0x000000070a200000, 0x000000070a400000|  0%| F|  |TAMS 0x000000070a200000| PB 0x000000070a200000| Untracked 
|  37|0x000000070a400000, 0x000000070a400000, 0x000000070a600000|  0%| F|  |TAMS 0x000000070a400000| PB 0x000000070a400000| Untracked 
|  38|0x000000070a600000, 0x000000070a600000, 0x000000070a800000|  0%| F|  |TAMS 0x000000070a600000| PB 0x000000070a600000| Untracked 
|  39|0x000000070a800000, 0x000000070a800000, 0x000000070aa00000|  0%| F|  |TAMS 0x000000070a800000| PB 0x000000070a800000| Untracked 
|  40|0x000000070aa00000, 0x000000070aa00000, 0x000000070ac00000|  0%| F|  |TAMS 0x000000070aa00000| PB 0x000000070aa00000| Untracked 
|  41|0x000000070ac00000, 0x000000070ac00000, 0x000000070ae00000|  0%| F|  |TAMS 0x000000070ac00000| PB 0x000000070ac00000| Untracked 
|  42|0x000000070ae00000, 0x000000070ae00000, 0x000000070b000000|  0%| F|  |TAMS 0x000000070ae00000| PB 0x000000070ae00000| Untracked 
|  43|0x000000070b000000, 0x000000070b000000, 0x000000070b200000|  0%| F|  |TAMS 0x000000070b000000| PB 0x000000070b000000| Untracked 
|  44|0x000000070b200000, 0x000000070b200000, 0x000000070b400000|  0%| F|  |TAMS 0x000000070b200000| PB 0x000000070b200000| Untracked 
|  45|0x000000070b400000, 0x000000070b400000, 0x000000070b600000|  0%| F|  |TAMS 0x000000070b400000| PB 0x000000070b400000| Untracked 
|  46|0x000000070b600000, 0x000000070b600000, 0x000000070b800000|  0%| F|  |TAMS 0x000000070b600000| PB 0x000000070b600000| Untracked 
|  47|0x000000070b800000, 0x000000070b800000, 0x000000070ba00000|  0%| F|  |TAMS 0x000000070b800000| PB 0x000000070b800000| Untracked 
|  48|0x000000070ba00000, 0x000000070ba00000, 0x000000070bc00000|  0%| F|  |TAMS 0x000000070ba00000| PB 0x000000070ba00000| Untracked 
|  49|0x000000070bc00000, 0x000000070bc05df0, 0x000000070be00000|  1%| S|CS|TAMS 0x000000070bc00000| PB 0x000000070bc00000| Complete 
|  50|0x000000070be00000, 0x000000070be00000, 0x000000070c000000|  0%| F|  |TAMS 0x000000070be00000| PB 0x000000070be00000| Untracked 
|  51|0x000000070c000000, 0x000000070c000000, 0x000000070c200000|  0%| F|  |TAMS 0x000000070c000000| PB 0x000000070c000000| Untracked 
|  52|0x000000070c200000, 0x000000070c200000, 0x000000070c400000|  0%| F|  |TAMS 0x000000070c200000| PB 0x000000070c200000| Untracked 
|  53|0x000000070c400000, 0x000000070c400000, 0x000000070c600000|  0%| F|  |TAMS 0x000000070c400000| PB 0x000000070c400000| Untracked 
|  54|0x000000070c600000, 0x000000070c600000, 0x000000070c800000|  0%| F|  |TAMS 0x000000070c600000| PB 0x000000070c600000| Untracked 
|  55|0x000000070c800000, 0x000000070c800000, 0x000000070ca00000|  0%| F|  |TAMS 0x000000070c800000| PB 0x000000070c800000| Untracked 
|  56|0x000000070ca00000, 0x000000070ca00000, 0x000000070cc00000|  0%| F|  |TAMS 0x000000070ca00000| PB 0x000000070ca00000| Untracked 
|  57|0x000000070cc00000, 0x000000070cc00000, 0x000000070ce00000|  0%| F|  |TAMS 0x000000070cc00000| PB 0x000000070cc00000| Untracked 
|  58|0x000000070ce00000, 0x000000070ce00000, 0x000000070d000000|  0%| F|  |TAMS 0x000000070ce00000| PB 0x000000070ce00000| Untracked 
|  59|0x000000070d000000, 0x000000070d000000, 0x000000070d200000|  0%| F|  |TAMS 0x000000070d000000| PB 0x000000070d000000| Untracked 
|  60|0x000000070d200000, 0x000000070d200000, 0x000000070d400000|  0%| F|  |TAMS 0x000000070d200000| PB 0x000000070d200000| Untracked 
|  61|0x000000070d400000, 0x000000070d400000, 0x000000070d600000|  0%| F|  |TAMS 0x000000070d400000| PB 0x000000070d400000| Untracked 
|  62|0x000000070d600000, 0x000000070d600000, 0x000000070d800000|  0%| F|  |TAMS 0x000000070d600000| PB 0x000000070d600000| Untracked 
|  63|0x000000070d800000, 0x000000070d800000, 0x000000070da00000|  0%| F|  |TAMS 0x000000070d800000| PB 0x000000070d800000| Untracked 
|  64|0x000000070da00000, 0x000000070da00000, 0x000000070dc00000|  0%| F|  |TAMS 0x000000070da00000| PB 0x000000070da00000| Untracked 
|  65|0x000000070dc00000, 0x000000070dc00000, 0x000000070de00000|  0%| F|  |TAMS 0x000000070dc00000| PB 0x000000070dc00000| Untracked 
|  66|0x000000070de00000, 0x000000070de00000, 0x000000070e000000|  0%| F|  |TAMS 0x000000070de00000| PB 0x000000070de00000| Untracked 
|  67|0x000000070e000000, 0x000000070e000000, 0x000000070e200000|  0%| F|  |TAMS 0x000000070e000000| PB 0x000000070e000000| Untracked 
|  68|0x000000070e200000, 0x000000070e200000, 0x000000070e400000|  0%| F|  |TAMS 0x000000070e200000| PB 0x000000070e200000| Untracked 
|  69|0x000000070e400000, 0x000000070e400000, 0x000000070e600000|  0%| F|  |TAMS 0x000000070e400000| PB 0x000000070e400000| Untracked 
|  70|0x000000070e600000, 0x000000070e600000, 0x000000070e800000|  0%| F|  |TAMS 0x000000070e600000| PB 0x000000070e600000| Untracked 
|  71|0x000000070e800000, 0x000000070e800000, 0x000000070ea00000|  0%| F|  |TAMS 0x000000070e800000| PB 0x000000070e800000| Untracked 
|  72|0x000000070ea00000, 0x000000070ea00000, 0x000000070ec00000|  0%| F|  |TAMS 0x000000070ea00000| PB 0x000000070ea00000| Untracked 
|  73|0x000000070ec00000, 0x000000070ec00000, 0x000000070ee00000|  0%| F|  |TAMS 0x000000070ec00000| PB 0x000000070ec00000| Untracked 
|  74|0x000000070ee00000, 0x000000070ee00000, 0x000000070f000000|  0%| F|  |TAMS 0x000000070ee00000| PB 0x000000070ee00000| Untracked 
|  75|0x000000070f000000, 0x000000070f000000, 0x000000070f200000|  0%| F|  |TAMS 0x000000070f000000| PB 0x000000070f000000| Untracked 
|  76|0x000000070f200000, 0x000000070f200000, 0x000000070f400000|  0%| F|  |TAMS 0x000000070f200000| PB 0x000000070f200000| Untracked 
|  77|0x000000070f400000, 0x000000070f400000, 0x000000070f600000|  0%| F|  |TAMS 0x000000070f400000| PB 0x000000070f400000| Untracked 
|  78|0x000000070f600000, 0x000000070f600000, 0x000000070f800000|  0%| F|  |TAMS 0x000000070f600000| PB 0x000000070f600000| Untracked 
|  79|0x000000070f800000, 0x000000070f900800, 0x000000070fa00000| 50%| E|  |TAMS 0x000000070f800000| PB 0x000000070f800000| Complete 
|  80|0x000000070fa00000, 0x000000070fc00000, 0x000000070fc00000|100%| E|CS|TAMS 0x000000070fa00000| PB 0x000000070fa00000| Complete 
|  81|0x000000070fc00000, 0x000000070fe00000, 0x000000070fe00000|100%| E|CS|TAMS 0x000000070fc00000| PB 0x000000070fc00000| Complete 
|  82|0x000000070fe00000, 0x0000000710000000, 0x0000000710000000|100%| E|CS|TAMS 0x000000070fe00000| PB 0x000000070fe00000| Complete 
|  83|0x0000000710000000, 0x0000000710200000, 0x0000000710200000|100%| E|CS|TAMS 0x0000000710000000| PB 0x0000000710000000| Complete 
|  84|0x0000000710200000, 0x0000000710400000, 0x0000000710400000|100%| E|CS|TAMS 0x0000000710200000| PB 0x0000000710200000| Complete 
|  85|0x0000000710400000, 0x0000000710600000, 0x0000000710600000|100%| E|CS|TAMS 0x0000000710400000| PB 0x0000000710400000| Complete 
|  86|0x0000000710600000, 0x0000000710800000, 0x0000000710800000|100%| E|CS|TAMS 0x0000000710600000| PB 0x0000000710600000| Complete 
|  87|0x0000000710800000, 0x0000000710a00000, 0x0000000710a00000|100%| E|CS|TAMS 0x0000000710800000| PB 0x0000000710800000| Complete 
|  88|0x0000000710a00000, 0x0000000710c00000, 0x0000000710c00000|100%| E|CS|TAMS 0x0000000710a00000| PB 0x0000000710a00000| Complete 
|  89|0x0000000710c00000, 0x0000000710e00000, 0x0000000710e00000|100%| E|CS|TAMS 0x0000000710c00000| PB 0x0000000710c00000| Complete 
|  90|0x0000000710e00000, 0x0000000711000000, 0x0000000711000000|100%| E|CS|TAMS 0x0000000710e00000| PB 0x0000000710e00000| Complete 
|  91|0x0000000711000000, 0x0000000711200000, 0x0000000711200000|100%| E|CS|TAMS 0x0000000711000000| PB 0x0000000711000000| Complete 
|  92|0x0000000711200000, 0x0000000711400000, 0x0000000711400000|100%| E|CS|TAMS 0x0000000711200000| PB 0x0000000711200000| Complete 
|  93|0x0000000711400000, 0x0000000711600000, 0x0000000711600000|100%| E|CS|TAMS 0x0000000711400000| PB 0x0000000711400000| Complete 
|  94|0x0000000711600000, 0x0000000711800000, 0x0000000711800000|100%| E|CS|TAMS 0x0000000711600000| PB 0x0000000711600000| Complete 
|  95|0x0000000711800000, 0x0000000711a00000, 0x0000000711a00000|100%| E|CS|TAMS 0x0000000711800000| PB 0x0000000711800000| Complete 
|  96|0x0000000711a00000, 0x0000000711c00000, 0x0000000711c00000|100%| E|CS|TAMS 0x0000000711a00000| PB 0x0000000711a00000| Complete 
|  97|0x0000000711c00000, 0x0000000711e00000, 0x0000000711e00000|100%| E|CS|TAMS 0x0000000711c00000| PB 0x0000000711c00000| Complete 
|  98|0x0000000711e00000, 0x0000000712000000, 0x0000000712000000|100%| E|CS|TAMS 0x0000000711e00000| PB 0x0000000711e00000| Complete 
|  99|0x0000000712000000, 0x0000000712200000, 0x0000000712200000|100%| E|CS|TAMS 0x0000000712000000| PB 0x0000000712000000| Complete 
| 100|0x0000000712200000, 0x0000000712400000, 0x0000000712400000|100%| E|CS|TAMS 0x0000000712200000| PB 0x0000000712200000| Complete 
| 101|0x0000000712400000, 0x0000000712600000, 0x0000000712600000|100%| E|CS|TAMS 0x0000000712400000| PB 0x0000000712400000| Complete 
| 102|0x0000000712600000, 0x0000000712800000, 0x0000000712800000|100%| E|CS|TAMS 0x0000000712600000| PB 0x0000000712600000| Complete 
| 103|0x0000000712800000, 0x0000000712a00000, 0x0000000712a00000|100%| E|CS|TAMS 0x0000000712800000| PB 0x0000000712800000| Complete 
| 104|0x0000000712a00000, 0x0000000712c00000, 0x0000000712c00000|100%| E|CS|TAMS 0x0000000712a00000| PB 0x0000000712a00000| Complete 
| 105|0x0000000712c00000, 0x0000000712e00000, 0x0000000712e00000|100%| E|CS|TAMS 0x0000000712c00000| PB 0x0000000712c00000| Complete 
| 106|0x0000000712e00000, 0x0000000713000000, 0x0000000713000000|100%| E|CS|TAMS 0x0000000712e00000| PB 0x0000000712e00000| Complete 
| 107|0x0000000713000000, 0x0000000713200000, 0x0000000713200000|100%| E|CS|TAMS 0x0000000713000000| PB 0x0000000713000000| Complete 
| 108|0x0000000713200000, 0x0000000713400000, 0x0000000713400000|100%| E|CS|TAMS 0x0000000713200000| PB 0x0000000713200000| Complete 
| 109|0x0000000713400000, 0x0000000713600000, 0x0000000713600000|100%| E|CS|TAMS 0x0000000713400000| PB 0x0000000713400000| Complete 
| 110|0x0000000713600000, 0x0000000713800000, 0x0000000713800000|100%| E|CS|TAMS 0x0000000713600000| PB 0x0000000713600000| Complete 
| 111|0x0000000713800000, 0x0000000713a00000, 0x0000000713a00000|100%| E|CS|TAMS 0x0000000713800000| PB 0x0000000713800000| Complete 
| 112|0x0000000713a00000, 0x0000000713c00000, 0x0000000713c00000|100%| E|CS|TAMS 0x0000000713a00000| PB 0x0000000713a00000| Complete 
| 113|0x0000000713c00000, 0x0000000713e00000, 0x0000000713e00000|100%| E|CS|TAMS 0x0000000713c00000| PB 0x0000000713c00000| Complete 
| 114|0x0000000713e00000, 0x0000000714000000, 0x0000000714000000|100%| E|CS|TAMS 0x0000000713e00000| PB 0x0000000713e00000| Complete 
| 115|0x0000000714000000, 0x0000000714200000, 0x0000000714200000|100%| E|CS|TAMS 0x0000000714000000| PB 0x0000000714000000| Complete 
| 116|0x0000000714200000, 0x0000000714400000, 0x0000000714400000|100%| E|CS|TAMS 0x0000000714200000| PB 0x0000000714200000| Complete 
| 117|0x0000000714400000, 0x0000000714600000, 0x0000000714600000|100%| E|CS|TAMS 0x0000000714400000| PB 0x0000000714400000| Complete 
| 118|0x0000000714600000, 0x0000000714800000, 0x0000000714800000|100%| E|CS|TAMS 0x0000000714600000| PB 0x0000000714600000| Complete 
| 119|0x0000000714800000, 0x0000000714a00000, 0x0000000714a00000|100%| E|CS|TAMS 0x0000000714800000| PB 0x0000000714800000| Complete 
| 120|0x0000000714a00000, 0x0000000714c00000, 0x0000000714c00000|100%| E|CS|TAMS 0x0000000714a00000| PB 0x0000000714a00000| Complete 
| 121|0x0000000714c00000, 0x0000000714e00000, 0x0000000714e00000|100%| E|CS|TAMS 0x0000000714c00000| PB 0x0000000714c00000| Complete 
| 122|0x0000000714e00000, 0x0000000715000000, 0x0000000715000000|100%| E|CS|TAMS 0x0000000714e00000| PB 0x0000000714e00000| Complete 
| 123|0x0000000715000000, 0x0000000715200000, 0x0000000715200000|100%| E|CS|TAMS 0x0000000715000000| PB 0x0000000715000000| Complete 
| 124|0x0000000715200000, 0x0000000715400000, 0x0000000715400000|100%| E|CS|TAMS 0x0000000715200000| PB 0x0000000715200000| Complete 
| 125|0x0000000715400000, 0x0000000715600000, 0x0000000715600000|100%| E|CS|TAMS 0x0000000715400000| PB 0x0000000715400000| Complete 

Card table byte_map: [0x000001eb7cb20000,0x000001eb7d300000] _byte_map_base: 0x000001eb792f3000

Marking Bits: (CMBitMap*) 0x000001eb69339ef0
 Bits: [0x000001eb00000000, 0x000001eb03e98000)

Polling page: 0x000001eb67270000

Metaspace:

Usage:
  Non-class:     17.18 MB used.
      Class:      2.04 MB used.
       Both:     19.22 MB used.

Virtual space:
  Non-class space:       64.00 MB reserved,      17.31 MB ( 27%) committed,  1 nodes.
      Class space:        1.00 GB reserved,       2.12 MB ( <1%) committed,  1 nodes.
             Both:        1.06 GB reserved,      19.44 MB (  2%) committed. 

Chunk freelists:
   Non-Class:  14.39 MB
       Class:  13.75 MB
        Both:  28.14 MB

MaxMetaspaceSize: unlimited
CompressedClassSpaceSize: 1.00 GB
Initial GC threshold: 21.00 MB
Current GC threshold: 21.00 MB
CDS: off
 - commit_granule_bytes: 65536.
 - commit_granule_words: 8192.
 - virtual_space_node_default_size: 8388608.
 - enlarge_chunks_in_place: 1.
 - use_allocation_guard: 0.


Internal statistics:

num_allocs_failed_limit: 0.
num_arena_births: 216.
num_arena_deaths: 0.
num_vsnodes_births: 2.
num_vsnodes_deaths: 0.
num_space_committed: 311.
num_space_uncommitted: 0.
num_chunks_returned_to_freelist: 0.
num_chunks_taken_from_freelist: 625.
num_chunk_merges: 0.
num_chunk_splits: 418.
num_chunks_enlarged: 306.
num_inconsistent_stats: 0.

CodeHeap 'non-profiled nmethods': size=120000Kb used=3223Kb max_used=3223Kb free=116776Kb
 bounds [0x000001eb748b0000, 0x000001eb74be0000, 0x000001eb7bde0000]
CodeHeap 'profiled nmethods': size=120000Kb used=6882Kb max_used=6882Kb free=113117Kb
 bounds [0x000001eb6cde0000, 0x000001eb6d4a0000, 0x000001eb74310000]
CodeHeap 'non-nmethods': size=5760Kb used=1734Kb max_used=1788Kb free=4025Kb
 bounds [0x000001eb74310000, 0x000001eb74580000, 0x000001eb748b0000]
 total_blobs=4385 nmethods=3629 adapters=660
 compilation: enabled
              stopped_count=0, restarted_count=0
 full_count=0

Compilation events (20 events):
Event: 1967.320 Thread 0x000001eb0807bb30 3620  s    4       com.sun.javafx.sg.prism.GrowableDataBuffer::returnBuffer (149 bytes)
Event: 1967.328 Thread 0x000001eb0807bb30 nmethod 3620 0x000001eb74bc1a90 code [0x000001eb74bc1ca0, 0x000001eb74bc2a00]
Event: 1967.504 Thread 0x000001eb0807bb30 3621       4       com.sun.javafx.sg.prism.NGCanvas::initCanvas (78 bytes)
Event: 1967.505 Thread 0x000001eb0807bb30 nmethod 3621 0x000001eb74bc2e90 code [0x000001eb74bc3040, 0x000001eb74bc3180]
Event: 1968.659 Thread 0x000001eb0807bb30 3622       4       com.sun.javafx.sg.prism.NGCanvas$RenderBuf::save (44 bytes)
Event: 1968.660 Thread 0x000001eb0807bb30 nmethod 3622 0x000001eb74bc3290 code [0x000001eb74bc3440, 0x000001eb74bc3630]
Event: 1973.064 Thread 0x000001eb0807bb30 3623   !   4       com.sun.javafx.tk.quantum.PresentingPainter::run (680 bytes)
Event: 1973.132 Thread 0x000001eb0807bb30 nmethod 3623 0x000001eb74bc3890 code [0x000001eb74bc40c0, 0x000001eb74bc8058]
Event: 1973.133 Thread 0x000001eb0807bb30 3624       4       com.sun.javafx.tk.quantum.SceneState::update (80 bytes)
Event: 1973.144 Thread 0x000001eb0807bb30 nmethod 3624 0x000001eb74bcae90 code [0x000001eb74bcb120, 0x000001eb74bcbfb0]
Event: 1973.393 Thread 0x000001eb0807bb30 3625       4       com.sun.javafx.sg.prism.NGCanvas::renderForcedContent (82 bytes)
Event: 1973.397 Thread 0x000001eb0807bb30 nmethod 3625 0x000001eb74bcc790 code [0x000001eb74bcc9a0, 0x000001eb74bccfa0]
Event: 1975.993 Thread 0x000001eb0807bb30 3626       4       com.sun.javafx.tk.quantum.ViewPainter::paintImpl (1455 bytes)
Event: 1976.039 Thread 0x000001eb0807bb30 nmethod 3626 0x000001eb74bcd490 code [0x000001eb74bcda00, 0x000001eb74bd0478]
Event: 1976.039 Thread 0x000001eb0807bb30 3627       4       com.sun.javafx.sg.prism.NGGroup::renderForcedContent (43 bytes)
Event: 1976.048 Thread 0x000001eb0807bb30 nmethod 3627 0x000001eb74bd2610 code [0x000001eb74bd2860, 0x000001eb74bd31c8]
Event: 2754.820 Thread 0x000001eb0807e050 3628   !   3       java.util.concurrent.LinkedBlockingDeque::takeFirst (47 bytes)
Event: 2754.829 Thread 0x000001eb0807e050 nmethod 3628 0x000001eb6d497a10 code [0x000001eb6d497c80, 0x000001eb6d498718]
Event: 2877.727 Thread 0x000001eb0807bb30 3629   !   4       java.util.concurrent.LinkedBlockingDeque::takeFirst (47 bytes)
Event: 2877.767 Thread 0x000001eb0807bb30 nmethod 3629 0x000001eb74bd3990 code [0x000001eb74bd3c40, 0x000001eb74bd5538]

GC Heap History (20 events):
Event: 1990.299 GC heap before
{Heap before GC invocations=17 (full 0):
 garbage-first heap   total 258048K, used 169376K [0x0000000705a00000, 0x0000000800000000)
  region size 2048K, 75 young (153600K), 1 survivors (2048K)
 Metaspace       used 19679K, committed 19904K, reserved 1114112K
  class space    used 2089K, committed 2176K, reserved 1048576K
}
Event: 1990.301 GC heap after
{Heap after GC invocations=18 (full 0):
 garbage-first heap   total 258048K, used 17994K [0x0000000705a00000, 0x0000000800000000)
  region size 2048K, 1 young (2048K), 1 survivors (2048K)
 Metaspace       used 19679K, committed 19904K, reserved 1114112K
  class space    used 2089K, committed 2176K, reserved 1048576K
}
Event: 2013.767 GC heap before
{Heap before GC invocations=18 (full 0):
 garbage-first heap   total 258048K, used 169546K [0x0000000705a00000, 0x0000000800000000)
  region size 2048K, 75 young (153600K), 1 survivors (2048K)
 Metaspace       used 19679K, committed 19904K, reserved 1114112K
  class space    used 2089K, committed 2176K, reserved 1048576K
}
Event: 2013.768 GC heap after
{Heap after GC invocations=19 (full 0):
 garbage-first heap   total 258048K, used 17924K [0x0000000705a00000, 0x0000000800000000)
  region size 2048K, 1 young (2048K), 1 survivors (2048K)
 Metaspace       used 19679K, committed 19904K, reserved 1114112K
  class space    used 2089K, committed 2176K, reserved 1048576K
}
Event: 2037.744 GC heap before
{Heap before GC invocations=19 (full 0):
 garbage-first heap   total 258048K, used 169476K [0x0000000705a00000, 0x0000000800000000)
  region size 2048K, 75 young (153600K), 1 survivors (2048K)
 Metaspace       used 19679K, committed 19904K, reserved 1114112K
  class space    used 2089K, committed 2176K, reserved 1048576K
}
Event: 2037.745 GC heap after
{Heap after GC invocations=20 (full 0):
 garbage-first heap   total 258048K, used 17911K [0x0000000705a00000, 0x0000000800000000)
  region size 2048K, 1 young (2048K), 1 survivors (2048K)
 Metaspace       used 19679K, committed 19904K, reserved 1114112K
  class space    used 2089K, committed 2176K, reserved 1048576K
}
Event: 2061.878 GC heap before
{Heap before GC invocations=20 (full 0):
 garbage-first heap   total 258048K, used 169463K [0x0000000705a00000, 0x0000000800000000)
  region size 2048K, 75 young (153600K), 1 survivors (2048K)
 Metaspace       used 19679K, committed 19904K, reserved 1114112K
  class space    used 2089K, committed 2176K, reserved 1048576K
}
Event: 2061.886 GC heap after
{Heap after GC invocations=21 (full 0):
 garbage-first heap   total 258048K, used 17898K [0x0000000705a00000, 0x0000000800000000)
  region size 2048K, 1 young (2048K), 1 survivors (2048K)
 Metaspace       used 19679K, committed 19904K, reserved 1114112K
  class space    used 2089K, committed 2176K, reserved 1048576K
}
Event: 2263.904 GC heap before
{Heap before GC invocations=21 (full 0):
 garbage-first heap   total 258048K, used 169450K [0x0000000705a00000, 0x0000000800000000)
  region size 2048K, 76 young (155648K), 1 survivors (2048K)
 Metaspace       used 19679K, committed 19904K, reserved 1114112K
  class space    used 2089K, committed 2176K, reserved 1048576K
}
Event: 2263.906 GC heap after
{Heap after GC invocations=22 (full 0):
 garbage-first heap   total 258048K, used 17907K [0x0000000705a00000, 0x0000000800000000)
  region size 2048K, 1 young (2048K), 1 survivors (2048K)
 Metaspace       used 19679K, committed 19904K, reserved 1114112K
  class space    used 2089K, committed 2176K, reserved 1048576K
}
Event: 2513.503 GC heap before
{Heap before GC invocations=22 (full 0):
 garbage-first heap   total 258048K, used 169459K [0x0000000705a00000, 0x0000000800000000)
  region size 2048K, 75 young (153600K), 1 survivors (2048K)
 Metaspace       used 19679K, committed 19904K, reserved 1114112K
  class space    used 2089K, committed 2176K, reserved 1048576K
}
Event: 2513.505 GC heap after
{Heap after GC invocations=23 (full 0):
 garbage-first heap   total 258048K, used 17899K [0x0000000705a00000, 0x0000000800000000)
  region size 2048K, 1 young (2048K), 1 survivors (2048K)
 Metaspace       used 19679K, committed 19904K, reserved 1114112K
  class space    used 2089K, committed 2176K, reserved 1048576K
}
Event: 2756.496 GC heap before
{Heap before GC invocations=23 (full 0):
 garbage-first heap   total 258048K, used 169451K [0x0000000705a00000, 0x0000000800000000)
  region size 2048K, 75 young (153600K), 1 survivors (2048K)
 Metaspace       used 19679K, committed 19904K, reserved 1114112K
  class space    used 2089K, committed 2176K, reserved 1048576K
}
Event: 2756.498 GC heap after
{Heap after GC invocations=24 (full 0):
 garbage-first heap   total 258048K, used 17902K [0x0000000705a00000, 0x0000000800000000)
  region size 2048K, 1 young (2048K), 1 survivors (2048K)
 Metaspace       used 19679K, committed 19904K, reserved 1114112K
  class space    used 2089K, committed 2176K, reserved 1048576K
}
Event: 2983.263 GC heap before
{Heap before GC invocations=24 (full 0):
 garbage-first heap   total 258048K, used 169454K [0x0000000705a00000, 0x0000000800000000)
  region size 2048K, 76 young (155648K), 1 survivors (2048K)
 Metaspace       used 19679K, committed 19904K, reserved 1114112K
  class space    used 2089K, committed 2176K, reserved 1048576K
}
Event: 2983.264 GC heap after
{Heap after GC invocations=25 (full 0):
 garbage-first heap   total 258048K, used 17921K [0x0000000705a00000, 0x0000000800000000)
  region size 2048K, 1 young (2048K), 1 survivors (2048K)
 Metaspace       used 19679K, committed 19904K, reserved 1114112K
  class space    used 2089K, committed 2176K, reserved 1048576K
}
Event: 3207.247 GC heap before
{Heap before GC invocations=25 (full 0):
 garbage-first heap   total 258048K, used 169473K [0x0000000705a00000, 0x0000000800000000)
  region size 2048K, 76 young (155648K), 1 survivors (2048K)
 Metaspace       used 19679K, committed 19904K, reserved 1114112K
  class space    used 2089K, committed 2176K, reserved 1048576K
}
Event: 3207.249 GC heap after
{Heap after GC invocations=26 (full 0):
 garbage-first heap   total 258048K, used 17916K [0x0000000705a00000, 0x0000000800000000)
  region size 2048K, 1 young (2048K), 1 survivors (2048K)
 Metaspace       used 19679K, committed 19904K, reserved 1114112K
  class space    used 2089K, committed 2176K, reserved 1048576K
}
Event: 3430.912 GC heap before
{Heap before GC invocations=26 (full 0):
 garbage-first heap   total 258048K, used 169468K [0x0000000705a00000, 0x0000000800000000)
  region size 2048K, 76 young (155648K), 1 survivors (2048K)
 Metaspace       used 19679K, committed 19904K, reserved 1114112K
  class space    used 2089K, committed 2176K, reserved 1048576K
}
Event: 3430.913 GC heap after
{Heap after GC invocations=27 (full 0):
 garbage-first heap   total 258048K, used 17919K [0x0000000705a00000, 0x0000000800000000)
  region size 2048K, 1 young (2048K), 1 survivors (2048K)
 Metaspace       used 19679K, committed 19904K, reserved 1114112K
  class space    used 2089K, committed 2176K, reserved 1048576K
}

Dll operation events (20 events):
Event: 0.188 Loaded shared library H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\api-ms-win-crt-locale-l1-1-0.dll
Event: 0.188 Loaded shared library H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\api-ms-win-crt-math-l1-1-0.dll
Event: 0.188 Loaded shared library H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\api-ms-win-crt-multibyte-l1-1-0.dll
Event: 0.189 Loaded shared library H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\api-ms-win-crt-private-l1-1-0.dll
Event: 0.189 Loaded shared library H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\api-ms-win-crt-process-l1-1-0.dll
Event: 0.189 Loaded shared library H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\api-ms-win-crt-runtime-l1-1-0.dll
Event: 0.190 Loaded shared library H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\api-ms-win-crt-stdio-l1-1-0.dll
Event: 0.190 Loaded shared library H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\api-ms-win-crt-string-l1-1-0.dll
Event: 0.191 Loaded shared library H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\api-ms-win-crt-time-l1-1-0.dll
Event: 0.191 Loaded shared library H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\api-ms-win-crt-utility-l1-1-0.dll
Event: 0.192 Loaded shared library H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\ucrtbase.dll
Event: 0.192 Loaded shared library H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\vcruntime140.dll
Event: 0.192 Loaded shared library H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\vcruntime140_1.dll
Event: 0.193 Loaded shared library H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\msvcp140.dll
Event: 0.193 Loaded shared library H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\msvcp140_1.dll
Event: 0.194 Loaded shared library H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\msvcp140_2.dll
Event: 0.212 Loaded shared library H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\prism_d3d.dll
Event: 0.269 Loaded shared library H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\glass.dll
Event: 0.383 Loaded shared library C:\Users\CYTech Student\.p2\pool\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_21.0.3.v20240426-1530\jre\bin\jimage.dll
Event: 0.393 Loaded shared library H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\javafx_font.dll

Deoptimization events (20 events):
Event: 1964.502 Thread 0x000001eb08686120 Uncommon trap: trap_request=0xffffff45 fr.pc=0x000001eb74b7be30 relative=0x0000000000001990
Event: 1964.502 Thread 0x000001eb08686120 Uncommon trap: reason=unstable_if action=reinterpret pc=0x000001eb74b7be30 method=com.sun.javafx.tk.quantum.ViewPainter.paintImpl(Lcom/sun/prism/Graphics;)V @ 15 c2
Event: 1964.502 Thread 0x000001eb08686120 DEOPT PACKING pc=0x000001eb74b7be30 sp=0x0000002cf18fef00
Event: 1964.502 Thread 0x000001eb08686120 DEOPT UNPACKING pc=0x000001eb743646a2 sp=0x0000002cf18feea0 mode 2
Event: 1964.502 Thread 0x000001eb08686120 Uncommon trap: trap_request=0xffffff45 fr.pc=0x000001eb74b48b58 relative=0x0000000000000198
Event: 1964.502 Thread 0x000001eb08686120 Uncommon trap: reason=unstable_if action=reinterpret pc=0x000001eb74b48b58 method=com.sun.javafx.sg.prism.NGCanvas.renderForcedContent(Lcom/sun/prism/Graphics;)V @ 4 c2
Event: 1964.502 Thread 0x000001eb08686120 DEOPT PACKING pc=0x000001eb74b48b58 sp=0x0000002cf18fee80
Event: 1964.502 Thread 0x000001eb08686120 DEOPT UNPACKING pc=0x000001eb743646a2 sp=0x0000002cf18fedb8 mode 2
Event: 1964.505 Thread 0x000001eb08686120 Uncommon trap: trap_request=0xffffff45 fr.pc=0x000001eb74b81b4c relative=0x000000000000010c
Event: 1964.505 Thread 0x000001eb08686120 Uncommon trap: reason=unstable_if action=reinterpret pc=0x000001eb74b81b4c method=com.sun.javafx.tk.quantum.ViewPainter.validateStageGraphics()Z @ 61 c2
Event: 1964.505 Thread 0x000001eb08686120 DEOPT PACKING pc=0x000001eb74b81b4c sp=0x0000002cf18fef60
Event: 1964.505 Thread 0x000001eb08686120 DEOPT UNPACKING pc=0x000001eb743646a2 sp=0x0000002cf18fef00 mode 2
Event: 2751.759 Thread 0x000001eb0c0533c0 Uncommon trap: trap_request=0xffffff45 fr.pc=0x000001eb74ae68a8 relative=0x0000000000002048
Event: 2751.760 Thread 0x000001eb0c0533c0 Uncommon trap: reason=unstable_if action=reinterpret pc=0x000001eb74ae68a8 method=java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await()V @ 90 c2
Event: 2751.760 Thread 0x000001eb0c0533c0 DEOPT PACKING pc=0x000001eb74ae68a8 sp=0x0000002cf1bff380
Event: 2751.761 Thread 0x000001eb0c0533c0 DEOPT UNPACKING pc=0x000001eb743646a2 sp=0x0000002cf1bff2d8 mode 2
Event: 3573.243 Thread 0x000001eb08686120 Uncommon trap: trap_request=0xffffff45 fr.pc=0x000001eb74bcf064 relative=0x0000000000001664
Event: 3573.243 Thread 0x000001eb08686120 Uncommon trap: reason=unstable_if action=reinterpret pc=0x000001eb74bcf064 method=com.sun.javafx.tk.quantum.ViewPainter.paintImpl(Lcom/sun/prism/Graphics;)V @ 73 c2
Event: 3573.243 Thread 0x000001eb08686120 DEOPT PACKING pc=0x000001eb74bcf064 sp=0x0000002cf18fef20
Event: 3573.243 Thread 0x000001eb08686120 DEOPT UNPACKING pc=0x000001eb743646a2 sp=0x0000002cf18feeb0 mode 2

Classes loaded (20 events):
Event: 0.797 Loading class jdk/internal/icu/text/BidiLine
Event: 0.798 Loading class jdk/internal/icu/text/BidiLine done
Event: 0.799 Loading class sun/invoke/util/ValueConversions$WrapperCache
Event: 0.799 Loading class sun/invoke/util/ValueConversions$WrapperCache done
Event: 0.799 Loading class sun/invoke/util/ValueConversions$1
Event: 0.799 Loading class sun/invoke/util/ValueConversions$1 done
Event: 0.800 Loading class java/lang/invoke/BoundMethodHandle$Species_LI
Event: 0.800 Loading class java/lang/invoke/BoundMethodHandle$Species_LI done
Event: 0.800 Loading class java/lang/invoke/ClassSpecializer$Factory$1Var
Event: 0.800 Loading class java/lang/invoke/ClassSpecializer$Factory$1Var done
Event: 0.810 Loading class java/nio/ShortBuffer
Event: 0.811 Loading class java/nio/ShortBuffer done
Event: 0.811 Loading class java/nio/DoubleBuffer
Event: 0.811 Loading class java/nio/DoubleBuffer done
Event: 2.768 Loading class java/util/Random
Event: 2.768 Loading class java/util/random/RandomGenerator
Event: 2.768 Loading class java/util/random/RandomGenerator done
Event: 2.768 Loading class java/util/Random done
Event: 3.984 Loading class java/nio/DirectFloatBufferU
Event: 3.984 Loading class java/nio/DirectFloatBufferU done

Classes unloaded (0 events):
No events

Classes redefined (0 events):
No events

Internal exceptions (20 events):
Event: 0.699 Thread 0x000001eb0c147b60 Exception <a 'java/lang/ClassNotFoundException'{0x0000000715179110}: com/sun/glass/ui/win/themes_ms_BN> (0x0000000715179110) 
thrown [s\src\hotspot\share\prims\jni.cpp, line 539]
Event: 0.699 Thread 0x000001eb0c147b60 Exception <a 'java/lang/ClassNotFoundException'{0x000000071517a610}: com/sun/glass/ui/win/themes_ccp_IN> (0x000000071517a610) 
thrown [s\src\hotspot\share\prims\jni.cpp, line 539]
Event: 0.717 Thread 0x000001eb0c147b60 Exception <a 'java/lang/NoSuchMethodError'{0x0000000714ffb838}: 'java.lang.Object java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial(java.lang.Object, java.lang.Object, int)'> (0x0000000714ffb838) 
thrown [s\src\hotspot\share\interpreter\linkResolver.cpp, line 773]
Event: 0.743 Thread 0x000001eb0c147b60 Exception <a 'java/lang/NoSuchMethodError'{0x0000000714cb1f10}: 'long java.lang.invoke.DirectMethodHandle$Holder.invokeStatic(java.lang.Object, java.lang.Object, java.lang.Object)'> (0x0000000714cb1f10) 
thrown [s\src\hotspot\share\interpreter\linkResolver.cpp, line 773]
Event: 0.743 Thread 0x000001eb0c147b60 Exception <a 'java/lang/NoSuchMethodError'{0x0000000714cb52e0}: 'long java.lang.invoke.DirectMethodHandle$Holder.invokeStaticInit(java.lang.Object, java.lang.Object, java.lang.Object)'> (0x0000000714cb52e0) 
thrown [s\src\hotspot\share\interpreter\linkResolver.cpp, line 773]
Event: 0.744 Thread 0x000001eb0c147b60 Exception <a 'java/lang/NoSuchMethodError'{0x0000000714cc9c18}: 'java.lang.Object java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial(java.lang.Object, java.lang.Object, long)'> (0x0000000714cc9c18) 
thrown [s\src\hotspot\share\interpreter\linkResolver.cpp, line 773]
Event: 0.744 Thread 0x000001eb0c147b60 Exception <a 'java/lang/NoSuchMethodError'{0x0000000714ccd510}: 'java.lang.Object java.lang.invoke.Invokers$Holder.linkToTargetMethod(java.lang.Object, long, java.lang.Object)'> (0x0000000714ccd510) 
thrown [s\src\hotspot\share\interpreter\linkResolver.cpp, line 773]
Event: 0.764 Thread 0x000001eb08686120 Exception <a 'java/lang/NoSuchMethodError'{0x0000000714aae468}: 'int java.lang.invoke.DirectMethodHandle$Holder.invokeStaticInit(java.lang.Object, java.lang.Object)'> (0x0000000714aae468) 
thrown [s\src\hotspot\share\interpreter\linkResolver.cpp, line 773]
Event: 0.771 Thread 0x000001eb08686120 Exception <a 'java/lang/NoSuchMethodError'{0x0000000714bf4ee8}: 'java.lang.Object java.lang.invoke.Invokers$Holder.invokeExact_MT(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)'> (0x0000000714bf4ee8) 
thrown [s\src\hotspot\share\interpreter\linkResolver.cpp, line 773]
Event: 0.798 Thread 0x000001eb08686120 Exception <a 'java/lang/NoSuchMethodError'{0x00000007148b91a0}: 'int java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial(java.lang.Object, java.lang.Object, int)'> (0x00000007148b91a0) 
thrown [s\src\hotspot\share\interpreter\linkResolver.cpp, line 773]
Event: 0.799 Thread 0x000001eb08686120 Exception <a 'java/lang/NoSuchMethodError'{0x00000007148c0580}: 'int java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial(java.lang.Object, java.lang.Object, java.lang.Object, int)'> (0x00000007148c0580) 
thrown [s\src\hotspot\share\interpreter\linkResolver.cpp, line 773]
Event: 0.800 Thread 0x000001eb08686120 Exception <a 'java/lang/NoSuchMethodError'{0x00000007148d26d8}: 'java.lang.Object java.lang.invoke.DirectMethodHandle$Holder.invokeStatic(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, int)'> (0x00000007148d26d8) 
thrown [s\src\hotspot\share\interpreter\linkResolver.cpp, line 773]
Event: 3.974 Thread 0x000001eb0c147b60 Implicit null exception at 0x000001eb749c470c to 0x000001eb749c4750
Event: 3.974 Thread 0x000001eb0c147b60 Implicit null exception at 0x000001eb749b16e5 to 0x000001eb749b233c
Event: 185.587 Thread 0x000001eb0c147b60 Implicit null exception at 0x000001eb74b5fadc to 0x000001eb74b602dc
Event: 185.598 Thread 0x000001eb08686120 Implicit null exception at 0x000001eb74a7de5c to 0x000001eb74a7e030
Event: 185.599 Thread 0x000001eb08686120 Implicit null exception at 0x000001eb749b4fba to 0x000001eb749b504c
Event: 185.599 Thread 0x000001eb08686120 Implicit null exception at 0x000001eb749b35ea to 0x000001eb749b3678
Event: 860.205 Thread 0x000001eb0c147b60 Implicit null exception at 0x000001eb74b38e20 to 0x000001eb74b39338
Event: 1964.502 Thread 0x000001eb08686120 Implicit null exception at 0x000001eb74b7a4fd to 0x000001eb74b7be1c

ZGC Phase Switch (0 events):
No events

VM Operations (20 events):
Event: 3185.453 Executing VM operation: HandshakeAllThreads (HandshakeForDeflation)
Event: 3185.453 Executing VM operation: HandshakeAllThreads (HandshakeForDeflation) done
Event: 3185.453 Executing VM operation: RendezvousGCThreads
Event: 3185.453 Executing VM operation: RendezvousGCThreads done
Event: 3207.247 Executing VM operation: G1CollectForAllocation (G1 Evacuation Pause)
Event: 3207.247 Executing VM operation: G1CollectForAllocation (G1 Evacuation Pause) done
Event: 3207.247 Executing VM operation: G1CollectForAllocation (GCLocker Initiated GC)
Event: 3207.249 Executing VM operation: G1CollectForAllocation (GCLocker Initiated GC) done
Event: 3365.823 Executing VM operation: HandshakeAllThreads (HandshakeForDeflation)
Event: 3365.823 Executing VM operation: HandshakeAllThreads (HandshakeForDeflation) done
Event: 3365.823 Executing VM operation: RendezvousGCThreads
Event: 3365.823 Executing VM operation: RendezvousGCThreads done
Event: 3430.912 Executing VM operation: G1CollectForAllocation (G1 Evacuation Pause)
Event: 3430.912 Executing VM operation: G1CollectForAllocation (G1 Evacuation Pause) done
Event: 3430.912 Executing VM operation: G1CollectForAllocation (GCLocker Initiated GC)
Event: 3430.913 Executing VM operation: G1CollectForAllocation (GCLocker Initiated GC) done
Event: 3486.059 Executing VM operation: HandshakeAllThreads (HandshakeForDeflation)
Event: 3486.059 Executing VM operation: HandshakeAllThreads (HandshakeForDeflation) done
Event: 3486.059 Executing VM operation: RendezvousGCThreads
Event: 3486.059 Executing VM operation: RendezvousGCThreads done

Events (20 events):
Event: 0.043 Thread 0x000001eb0809cc90 Thread added: 0x000001eb0809cc90
Event: 0.044 Thread 0x000001eb0809d460 Thread added: 0x000001eb0809d460
Event: 0.044 Thread 0x000001eb0809efd0 Thread added: 0x000001eb0809efd0
Event: 0.044 Thread 0x000001eb0809fa30 Thread added: 0x000001eb0809fa30
Event: 0.044 Thread 0x000001eb080a0490 Thread added: 0x000001eb080a0490
Event: 0.044 Thread 0x000001eb0807ab80 Thread added: 0x000001eb0807ab80
Event: 0.044 Thread 0x000001eb0807bb30 Thread added: 0x000001eb0807bb30
Event: 0.044 Thread 0x000001eb0807e050 Thread added: 0x000001eb0807e050
Event: 0.078 Thread 0x000001eb081db050 Thread added: 0x000001eb081db050
Event: 0.118 Thread 0x000001eb08287760 Thread added: 0x000001eb08287760
Event: 0.118 Thread 0x000001eb082f0e90 Thread added: 0x000001eb082f0e90
Event: 0.142 Thread 0x000001eb08689280 Thread added: 0x000001eb08689280
Event: 0.209 Thread 0x000001eb08686120 Thread added: 0x000001eb08686120
Event: 0.270 Thread 0x000001eb0c0533c0 Thread added: 0x000001eb0c0533c0
Event: 0.272 Thread 0x000001eb0c147b60 Thread added: 0x000001eb0c147b60
Event: 0.325 Thread 0x000001eb0c295a40 Thread added: 0x000001eb0c295a40
Event: 0.336 Thread 0x000001eb0c241db0 Thread added: 0x000001eb0c241db0
Event: 1.299 Thread 0x000001eb082f0e90 Thread exited: 0x000001eb082f0e90
Event: 1.849 Thread 0x000001eb08287760 Thread exited: 0x000001eb08287760
Event: 3.974 Thread 0x000001eb0cff52b0 Thread added: 0x000001eb0cff52b0


Dynamic libraries:
0x00007ff711300000 - 0x00007ff71130e000 	C:\Users\CYTech Student\.p2\pool\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_21.0.3.v20240426-1530\jre\bin\javaw.exe
0x00007fff24fd0000 - 0x00007fff251c8000 	C:\Windows\SYSTEM32\ntdll.dll
0x00007fff241d0000 - 0x00007fff2428d000 	C:\Windows\System32\KERNEL32.DLL
0x00007fff229a0000 - 0x00007fff22c96000 	C:\Windows\System32\KERNELBASE.dll
0x00007fff22ca0000 - 0x00007fff22da0000 	C:\Windows\System32\ucrtbase.dll
0x00007fff19620000 - 0x00007fff1963b000 	C:\Users\CYTech Student\.p2\pool\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_21.0.3.v20240426-1530\jre\bin\VCRUNTIME140.dll
0x00007fff1a070000 - 0x00007fff1a088000 	C:\Users\CYTech Student\.p2\pool\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_21.0.3.v20240426-1530\jre\bin\jli.dll
0x00007fff23c80000 - 0x00007fff23e1f000 	C:\Windows\System32\USER32.dll
0x00007fff22f30000 - 0x00007fff22f52000 	C:\Windows\System32\win32u.dll
0x00007fff01b20000 - 0x00007fff01dba000 	C:\Windows\WinSxS\amd64_microsoft.windows.common-controls_6595b64144ccf1df_6.0.19041.4355_none_60b8b9eb71f62e16\COMCTL32.dll
0x00007fff233c0000 - 0x00007fff233eb000 	C:\Windows\System32\GDI32.dll
0x00007fff23fb0000 - 0x00007fff2404e000 	C:\Windows\System32\msvcrt.dll
0x00007fff22e10000 - 0x00007fff22f27000 	C:\Windows\System32\gdi32full.dll
0x00007fff22f60000 - 0x00007fff22ffd000 	C:\Windows\System32\msvcp_win.dll
0x00007fff24310000 - 0x00007fff24342000 	C:\Windows\System32\IMM32.DLL
0x00007fff1e510000 - 0x00007fff1e51c000 	C:\Users\CYTech Student\.p2\pool\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_21.0.3.v20240426-1530\jre\bin\vcruntime140_1.dll
0x00007fff058f0000 - 0x00007fff0597e000 	C:\Users\CYTech Student\.p2\pool\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_21.0.3.v20240426-1530\jre\bin\msvcp140.dll
0x00007ffeca9c0000 - 0x00007ffecb742000 	C:\Users\CYTech Student\.p2\pool\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_21.0.3.v20240426-1530\jre\bin\server\jvm.dll
0x00007fff23aa0000 - 0x00007fff23b50000 	C:\Windows\System32\ADVAPI32.dll
0x00007fff24d40000 - 0x00007fff24de0000 	C:\Windows\System32\sechost.dll
0x00007fff23b50000 - 0x00007fff23c73000 	C:\Windows\System32\RPCRT4.dll
0x00007fff22890000 - 0x00007fff228b7000 	C:\Windows\System32\bcrypt.dll
0x00007fff242a0000 - 0x00007fff2430b000 	C:\Windows\System32\WS2_32.dll
0x00007fff18c70000 - 0x00007fff18c97000 	C:\Windows\SYSTEM32\WINMM.dll
0x00007fff21bb0000 - 0x00007fff21bfb000 	C:\Windows\SYSTEM32\POWRPROF.dll
0x00007fff1a840000 - 0x00007fff1a84a000 	C:\Windows\SYSTEM32\VERSION.dll
0x00007fff21a70000 - 0x00007fff21a82000 	C:\Windows\SYSTEM32\UMPDC.dll
0x00007fff204e0000 - 0x00007fff204f2000 	C:\Windows\SYSTEM32\kernel.appcore.dll
0x00007ffeccec0000 - 0x00007ffecceca000 	C:\Users\CYTech Student\.p2\pool\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_21.0.3.v20240426-1530\jre\bin\jimage.dll
0x00007fff105a0000 - 0x00007fff10784000 	C:\Windows\SYSTEM32\DBGHELP.DLL
0x00007ffef4b20000 - 0x00007ffef4b54000 	C:\Windows\SYSTEM32\dbgcore.DLL
0x00007fff228c0000 - 0x00007fff22942000 	C:\Windows\System32\bcryptPrimitives.dll
0x00007ffeccea0000 - 0x00007ffeccebf000 	C:\Users\CYTech Student\.p2\pool\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_21.0.3.v20240426-1530\jre\bin\java.dll
0x00007ffeca9a0000 - 0x00007ffeca9b8000 	C:\Users\CYTech Student\.p2\pool\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_21.0.3.v20240426-1530\jre\bin\zip.dll
0x00007fff24350000 - 0x00007fff24abb000 	C:\Windows\System32\SHELL32.dll
0x00007fff20700000 - 0x00007fff20e9d000 	C:\Windows\SYSTEM32\windows.storage.dll
0x00007fff23000000 - 0x00007fff23353000 	C:\Windows\System32\combase.dll
0x00007fff220a0000 - 0x00007fff220ce000 	C:\Windows\SYSTEM32\Wldp.dll
0x00007fff24100000 - 0x00007fff241cd000 	C:\Windows\System32\OLEAUT32.dll
0x00007fff23f00000 - 0x00007fff23fad000 	C:\Windows\System32\SHCORE.dll
0x00007fff233f0000 - 0x00007fff23445000 	C:\Windows\System32\shlwapi.dll
0x00007fff225b0000 - 0x00007fff225d4000 	C:\Windows\SYSTEM32\profapi.dll
0x00007ffeca990000 - 0x00007ffeca9a0000 	C:\Users\CYTech Student\.p2\pool\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_21.0.3.v20240426-1530\jre\bin\net.dll
0x00007fff1cf20000 - 0x00007fff1d02a000 	C:\Windows\SYSTEM32\WINHTTP.dll
0x00007fff21e00000 - 0x00007fff21e6a000 	C:\Windows\system32\mswsock.dll
0x00007ffeca970000 - 0x00007ffeca986000 	C:\Users\CYTech Student\.p2\pool\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_21.0.3.v20240426-1530\jre\bin\nio.dll
0x000001eb03fe0000 - 0x000001eb03fe4000 	H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\api-ms-win-core-console-l1-1-0.dll
0x000001eb03ff0000 - 0x000001eb03ff4000 	H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\api-ms-win-core-console-l1-2-0.dll
0x000001eb08c00000 - 0x000001eb08c04000 	H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\api-ms-win-core-datetime-l1-1-0.dll
0x000001eb08c10000 - 0x000001eb08c14000 	H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\api-ms-win-core-debug-l1-1-0.dll
0x000001eb08c20000 - 0x000001eb08c24000 	H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\api-ms-win-core-errorhandling-l1-1-0.dll
0x000001eb08c30000 - 0x000001eb08c35000 	H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\api-ms-win-core-file-l1-1-0.dll
0x000001eb08c40000 - 0x000001eb08c44000 	H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\api-ms-win-core-file-l1-2-0.dll
0x000001eb08c50000 - 0x000001eb08c54000 	H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\api-ms-win-core-file-l2-1-0.dll
0x000001eb08c60000 - 0x000001eb08c64000 	H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\api-ms-win-core-handle-l1-1-0.dll
0x000001eb08c70000 - 0x000001eb08c74000 	H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\api-ms-win-core-heap-l1-1-0.dll
0x000001eb08c80000 - 0x000001eb08c84000 	H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\api-ms-win-core-interlocked-l1-1-0.dll
0x000001eb08c90000 - 0x000001eb08c94000 	H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\api-ms-win-core-libraryloader-l1-1-0.dll
0x000001eb08ca0000 - 0x000001eb08ca4000 	H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\api-ms-win-core-localization-l1-2-0.dll
0x000001eb08cb0000 - 0x000001eb08cb4000 	H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\api-ms-win-core-memory-l1-1-0.dll
0x000001eb08cc0000 - 0x000001eb08cc4000 	H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\api-ms-win-core-namedpipe-l1-1-0.dll
0x000001eb08cd0000 - 0x000001eb08cd4000 	H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\api-ms-win-core-processenvironment-l1-1-0.dll
0x000001eb08ce0000 - 0x000001eb08ce4000 	H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\api-ms-win-core-processthreads-l1-1-0.dll
0x000001eb08cf0000 - 0x000001eb08cf4000 	H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\api-ms-win-core-processthreads-l1-1-1.dll
0x000001eb08d00000 - 0x000001eb08d04000 	H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\api-ms-win-core-profile-l1-1-0.dll
0x000001eb08d10000 - 0x000001eb08d14000 	H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\api-ms-win-core-rtlsupport-l1-1-0.dll
0x000001eb08d20000 - 0x000001eb08d24000 	H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\api-ms-win-core-string-l1-1-0.dll
0x000001eb08d30000 - 0x000001eb08d34000 	H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\api-ms-win-core-synch-l1-1-0.dll
0x000001eb08d40000 - 0x000001eb08d44000 	H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\api-ms-win-core-synch-l1-2-0.dll
0x000001eb08d50000 - 0x000001eb08d54000 	H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\api-ms-win-core-sysinfo-l1-1-0.dll
0x000001eb08d60000 - 0x000001eb08d64000 	H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\api-ms-win-core-timezone-l1-1-0.dll
0x000001eb08d70000 - 0x000001eb08d74000 	H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\api-ms-win-core-util-l1-1-0.dll
0x000001eb08d80000 - 0x000001eb08d84000 	H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\api-ms-win-crt-conio-l1-1-0.dll
0x000001eb08d90000 - 0x000001eb08d95000 	H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\api-ms-win-crt-convert-l1-1-0.dll
0x000001eb08da0000 - 0x000001eb08da4000 	H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\api-ms-win-crt-environment-l1-1-0.dll
0x000001eb08db0000 - 0x000001eb08db4000 	H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\api-ms-win-crt-filesystem-l1-1-0.dll
0x000001eb08dc0000 - 0x000001eb08dc4000 	H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\api-ms-win-crt-heap-l1-1-0.dll
0x000001eb08dd0000 - 0x000001eb08dd4000 	H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\api-ms-win-crt-locale-l1-1-0.dll
0x000001eb08de0000 - 0x000001eb08de6000 	H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\api-ms-win-crt-math-l1-1-0.dll
0x000001eb08df0000 - 0x000001eb08df6000 	H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\api-ms-win-crt-multibyte-l1-1-0.dll
0x000001eb08e00000 - 0x000001eb08e11000 	H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\api-ms-win-crt-private-l1-1-0.dll
0x000001eb08e20000 - 0x000001eb08e24000 	H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\api-ms-win-crt-process-l1-1-0.dll
0x000001eb08e30000 - 0x000001eb08e35000 	H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\api-ms-win-crt-runtime-l1-1-0.dll
0x000001eb08e40000 - 0x000001eb08e45000 	H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\api-ms-win-crt-stdio-l1-1-0.dll
0x000001eb08e50000 - 0x000001eb08e55000 	H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\api-ms-win-crt-string-l1-1-0.dll
0x000001eb08e60000 - 0x000001eb08e64000 	H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\api-ms-win-crt-time-l1-1-0.dll
0x000001eb08e70000 - 0x000001eb08e74000 	H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\api-ms-win-crt-utility-l1-1-0.dll
0x00007ffef5f50000 - 0x00007ffef6061000 	H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\ucrtbase.dll
0x00007fff0ef40000 - 0x00007fff0ef5b000 	H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\vcruntime140.dll
0x00007fff1df80000 - 0x00007fff1df8c000 	H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\vcruntime140_1.dll
0x00007ffee9f70000 - 0x00007ffee9ffe000 	H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\msvcp140.dll
0x00007fff18b90000 - 0x00007fff18b99000 	H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\msvcp140_1.dll
0x00007fff07760000 - 0x00007fff077a1000 	H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\msvcp140_2.dll
0x00007fff0ef10000 - 0x00007fff0ef40000 	H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\prism_d3d.dll
0x00007ffef6120000 - 0x00007ffef62ee000 	C:\Windows\system32\d3d9.dll
0x00007fff20110000 - 0x00007fff2013f000 	C:\Windows\SYSTEM32\dwmapi.dll
0x00007fff1ff90000 - 0x00007fff2002e000 	C:\Windows\system32\uxtheme.dll
0x00007ffee9b00000 - 0x00007ffee9bb8000 	C:\Windows\SYSTEM32\d3d9on12.dll
0x00007fff20f00000 - 0x00007fff20ff2000 	C:\Windows\SYSTEM32\dxgi.dll
0x00007ffef1230000 - 0x00007ffef1255000 	C:\Windows\SYSTEM32\d3d12.dll
0x00007fff18720000 - 0x00007fff1875b000 	C:\Windows\SYSTEM32\dxcore.dll
0x00007fff22950000 - 0x00007fff2299e000 	C:\Windows\System32\cfgmgr32.dll
0x00007ffee8900000 - 0x00007ffee8acd000 	C:\Windows\SYSTEM32\D3D12Core.dll
0x00007fff07580000 - 0x00007fff075a7000 	C:\Windows\System32\DriverStore\FileRepository\iigd_dch.inf_amd64_da775d7ecf291310\igd12umd64.dll
0x00007ffe78080000 - 0x00007ffe79a4c000 	C:\Windows\System32\DriverStore\FileRepository\iigd_dch.inf_amd64_da775d7ecf291310\igd12um64xel.dll
0x00007fff22680000 - 0x00007fff227de000 	C:\Windows\System32\CRYPT32.dll
0x00007fff24c00000 - 0x00007fff24d2b000 	C:\Windows\System32\ole32.dll
0x00007ffef0750000 - 0x00007ffef0795000 	C:\Windows\SYSTEM32\ControlLib.dll
0x00007fff157c0000 - 0x00007fff15850000 	C:\Windows\System32\DriverStore\FileRepository\iigd_dch.inf_amd64_da775d7ecf291310\IntelControlLib.dll
0x00007fff12b90000 - 0x00007fff12fcc000 	C:\Windows\System32\DriverStore\FileRepository\iigd_dch.inf_amd64_da775d7ecf291310\igdgmm64.dll
0x00007fff0ae80000 - 0x00007fff0eee6000 	C:\Windows\System32\DriverStore\FileRepository\iigd_dch.inf_amd64_da775d7ecf291310\igc64.dll
0x00007fff07460000 - 0x00007fff0748b000 	C:\Windows\SYSTEM32\D3DSCache.dll
0x00007fff22520000 - 0x00007fff2254e000 	C:\Windows\SYSTEM32\USERENV.dll
0x00007ffed9c10000 - 0x00007ffed9f11000 	C:\Windows\System32\DriverStore\FileRepository\iigd_dch.inf_amd64_da775d7ecf291310\igd12dxva64.dll
0x00007fff23540000 - 0x00007fff239ae000 	C:\Windows\System32\SETUPAPI.dll
0x00007ffec2770000 - 0x00007ffec3942000 	C:\Windows\System32\DriverStore\FileRepository\iigd_dch.inf_amd64_da775d7ecf291310\igddxvacommon64.dll
0x00007ffec0a40000 - 0x00007ffec2769000 	C:\Windows\System32\DriverStore\FileRepository\iigd_dch.inf_amd64_da775d7ecf291310\media_bin_64.dll
0x00007ffecf500000 - 0x00007ffecf527000 	C:\Windows\System32\DriverStore\FileRepository\iigd_dch.inf_amd64_da775d7ecf291310\igdinfo64.dll
0x00007fff1ca40000 - 0x00007fff1cc43000 	C:\Windows\SYSTEM32\twinapi.appcore.dll
0x00007fff04a20000 - 0x00007fff04a65000 	H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\glass.dll
0x00007fff23e20000 - 0x00007fff23efa000 	C:\Windows\System32\COMDLG32.dll
0x00007fff24ae0000 - 0x00007fff24bf4000 	C:\Windows\System32\MSCTF.dll
0x00007fff24050000 - 0x00007fff240f9000 	C:\Windows\System32\clbcatq.dll
0x00007fff046b0000 - 0x00007fff047ef000 	C:\Windows\System32\Windows.UI.dll
0x00007fff045b0000 - 0x00007fff046a9000 	C:\Windows\System32\TextInputFramework.dll
0x00007fff1cc50000 - 0x00007fff1ccf1000 	C:\Windows\System32\WindowManagementAPI.dll
0x00007fff04450000 - 0x00007fff045a2000 	C:\Windows\System32\InputHost.dll
0x00007fff1f520000 - 0x00007fff1f87b000 	C:\Windows\System32\CoreUIComponents.dll

dbghelp: loaded successfully - version: 4.0.5 - missing functions: none
symbol engine: initialized successfully - sym options: 0x614 - pdb path: .;C:\Users\CYTech Student\.p2\pool\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_21.0.3.v20240426-1530\jre\bin;C:\Windows\SYSTEM32;C:\Windows\WinSxS\amd64_microsoft.windows.common-controls_6595b64144ccf1df_6.0.19041.4355_none_60b8b9eb71f62e16;C:\Users\CYTech Student\.p2\pool\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_21.0.3.v20240426-1530\jre\bin\server;H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin;C:\Windows\System32\DriverStore\FileRepository\iigd_dch.inf_amd64_da775d7ecf291310;C:\Program Files\Common Files\Microsoft Shared\Ink

VM Arguments:
jvm_args: --module-path=H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\lib --add-modules=javafx.controls,javafx.graphics,javafx.fxml,javafx.media -Dfile.encoding=UTF-8 -Dstdout.encoding=UTF-8 -Dstderr.encoding=UTF-8 --module-path=C:\Users\CYTech Student\.p2\pool\plugins\org.eclipse.fx.ide.css.jfx8_3.8.0.202204150904.jar;H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\lib\javafx.base.jar;H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\lib\javafx.controls.jar;H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\lib\javafx.fxml.jar;H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\lib\javafx.graphics.jar;H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\lib\javafx.media.jar;H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\lib\javafx.swing.jar;H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\lib\javafx.web.jar;H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\lib\javafx-swt.jar -XX:+ShowCodeDetailsInExceptionMessages 
java_command: main.Main
java_class_path (initial): H:\Users\CYTech Student\eclipse-workspace\Project\bin
Launcher Type: SUN_STANDARD

[Global flags]
     intx CICompilerCount                          = 4                                         {product} {ergonomic}
     uint ConcGCThreads                            = 3                                         {product} {ergonomic}
     uint G1ConcRefinementThreads                  = 10                                        {product} {ergonomic}
   size_t G1HeapRegionSize                         = 2097152                                   {product} {ergonomic}
    uintx GCDrainStackTargetSize                   = 64                                        {product} {ergonomic}
   size_t InitialHeapSize                          = 264241152                                 {product} {ergonomic}
   size_t MarkStackSize                            = 4194304                                   {product} {ergonomic}
   size_t MaxHeapSize                              = 4200595456                                {product} {ergonomic}
   size_t MaxNewSize                               = 2518679552                                {product} {ergonomic}
   size_t MinHeapDeltaBytes                        = 2097152                                   {product} {ergonomic}
   size_t MinHeapSize                              = 8388608                                   {product} {ergonomic}
    uintx NonNMethodCodeHeapSize                   = 5839372                                {pd product} {ergonomic}
    uintx NonProfiledCodeHeapSize                  = 122909434                              {pd product} {ergonomic}
    uintx ProfiledCodeHeapSize                     = 122909434                              {pd product} {ergonomic}
    uintx ReservedCodeCacheSize                    = 251658240                              {pd product} {ergonomic}
     bool SegmentedCodeCache                       = true                                      {product} {ergonomic}
     bool ShowCodeDetailsInExceptionMessages       = true                                   {manageable} {command line}
   size_t SoftMaxHeapSize                          = 4200595456                             {manageable} {ergonomic}
     bool UseCompressedOops                        = true                           {product lp64_product} {ergonomic}
     bool UseG1GC                                  = true                                      {product} {ergonomic}
     bool UseLargePagesIndividualAllocation        = false                                  {pd product} {ergonomic}

Logging:
Log output configuration:
 #0: stdout all=warning uptime,level,tags foldmultilines=false
 #1: stderr all=off uptime,level,tags foldmultilines=false

Environment Variables:
PATH=C:/Users/CYTech Student/.p2/pool/plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_21.0.3.v20240426-1530/jre/bin/server;C:/Users/CYTech Student/.p2/pool/plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_21.0.3.v20240426-1530/jre/bin;H:\Program Files\ImageMagick-7.1.1-Q16-HDRI;H:\Program Files\Eclipse Adoptium\jdk-21.0.3.9-hotspot\bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\java8path;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\PuTTY\;C:\Program Files\MATLAB\R2020a\bin;C:\Program Files\dotnet\;C:\Program Files\Git\cmd;H:\Program Files\nodejs\;H;H;C:\Users\CYTech Student\scoop\shims;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\CYTech Student\AppData\Local\Microsoft\WindowsApps;H:\Users\CYTech Student\AppData\Local\Programs\Microsoft VS Code\bin;C:\MinGW\bin;C:\Users\CYTech Student\AppData\Roaming\npm;C:\Users\CYTech Student\AppData\Local\GitHubDesktop\bin;H:\Program Files\Java\jdk-21\bin;;C:\Windows\system32;
USERNAME=CYTech Student
OS=Windows_NT
PROCESSOR_IDENTIFIER=Intel64 Family 6 Model 186 Stepping 3, GenuineIntel
TMP=C:\Users\CYTECH~1\AppData\Local\Temp
TEMP=C:\Users\CYTECH~1\AppData\Local\Temp




Periodic native trim disabled

---------------  S Y S T E M  ---------------

OS:
 Windows 10 , 64 bit Build 19041 (10.0.19041.3636)
OS uptime: 0 days 4:29 hours

CPU: total 12 (initial active 12) (6 cores per cpu, 2 threads per core) family 6 model 186 stepping 3 microcode 0x411d, cx8, cmov, fxsr, ht, mmx, 3dnowpref, sse, sse2, sse3, ssse3, sse4.1, sse4.2, popcnt, lzcnt, tsc, tscinvbit, avx, avx2, aes, erms, clmul, bmi1, bmi2, adx, sha, fma, vzeroupper, clflush, clflushopt, clwb, serialize, rdtscp, rdpid, fsrm, f16c, pku, cet_ibt, cet_ss
Processor Information for processor 0
  Max Mhz: 1300, Current Mhz: 1300, Mhz Limit: 897
Processor Information for processor 1
  Max Mhz: 1300, Current Mhz: 1300, Mhz Limit: 897
Processor Information for processor 2
  Max Mhz: 1300, Current Mhz: 1300, Mhz Limit: 1300
Processor Information for processor 3
  Max Mhz: 1300, Current Mhz: 1300, Mhz Limit: 1300
Processor Information for processor 4
  Max Mhz: 1300, Current Mhz: 900, Mhz Limit: 897
Processor Information for processor 5
  Max Mhz: 1300, Current Mhz: 900, Mhz Limit: 897
Processor Information for processor 6
  Max Mhz: 1300, Current Mhz: 900, Mhz Limit: 897
Processor Information for processor 7
  Max Mhz: 1300, Current Mhz: 900, Mhz Limit: 897
Processor Information for processor 8
  Max Mhz: 1300, Current Mhz: 900, Mhz Limit: 897
Processor Information for processor 9
  Max Mhz: 1300, Current Mhz: 900, Mhz Limit: 897
Processor Information for processor 10
  Max Mhz: 1300, Current Mhz: 900, Mhz Limit: 897
Processor Information for processor 11
  Max Mhz: 1300, Current Mhz: 900, Mhz Limit: 897

Memory: 4k page, system-wide physical 16016M (1409M free)
TotalPageFile size 24781M (AvailPageFile size 3475M)
current process WorkingSet (physical memory assigned to process): 589M, peak: 7734M
current process commit charge ("private bytes"): 8413M, peak: 8413M

vm_info: OpenJDK 64-Bit Server VM (21.0.3+9-LTS) for windows-amd64 JRE (21.0.3+9-LTS), built on 2024-04-16T00:00:00Z by "admin" with MS VC++ 17.7 (VS2022)

END.
