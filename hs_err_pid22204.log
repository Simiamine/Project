#
# A fatal error has been detected by the Java Runtime Environment:
#
#  EXCEPTION_ACCESS_VIOLATION (0xc0000005) at pc=0x00007fffe98db440, pid=22204, tid=13372
#
# JRE version: OpenJDK Runtime Environment Temurin-21.0.3+9 (21.0.3+9) (build 21.0.3+9-LTS)
# Java VM: OpenJDK 64-Bit Server VM Temurin-21.0.3+9 (21.0.3+9-LTS, mixed mode, tiered, compressed oops, compressed class ptrs, g1 gc, windows-amd64)
# Problematic frame:
# C  [d3d9on12.dll+0x5b440]
#
# No core dump will be written. Minidumps are not enabled by default on client versions of Windows
#
# If you would like to submit a bug report, please visit:
#   https://github.com/adoptium/adoptium-support/issues
# The crash happened outside the Java Virtual Machine in native code.
# See problematic frame for where to report the bug.
#

---------------  S U M M A R Y ------------

Command Line: --module-path=H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\lib --add-modules=javafx.controls,javafx.graphics,javafx.fxml -Dfile.encoding=UTF-8 -Dstdout.encoding=UTF-8 -Dstderr.encoding=UTF-8 --module-path=C:\Users\CYTech Student\.p2\pool\plugins\org.eclipse.fx.ide.css.jfx8_3.8.0.202204150904.jar;H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\lib\javafx.base.jar;H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\lib\javafx.controls.jar;H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\lib\javafx.fxml.jar;H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\lib\javafx.graphics.jar;H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\lib\javafx.media.jar;H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\lib\javafx.swing.jar;H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\lib\javafx.web.jar;H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\lib\javafx-swt.jar -XX:+ShowCodeDetailsInExceptionMessages main.Main

Host: 13th Gen Intel(R) Core(TM) i5-1335U, 12 cores, 15G,  Windows 10 , 64 bit Build 19041 (10.0.19041.3636)
Time: Sun May 12 21:59:06 2024 Paris, Madrid (heure duild 19041 (10.0.19041.3636) elapsed time: 292.085194 seconds (0d 0h 4m 52s)

---------------  T H R E A D  ---------------

Current thread (0x000001c3ac871850):  JavaThread "QuantumRenderer-0" daemon [_thread_in_native, id=13372, stack(0x0000003ab5000000,0x0000003ab5100000) (1024K)]

Stack: [0x0000003ab5000000,0x0000003ab5100000],  sp=0x0000003ab50fe370,  free space=1016k
Native frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)
C  [d3d9on12.dll+0x5b440]

Java frames: (J=compiled Java code, j=interpreted, Vv=VM code)
J 2527  com.sun.prism.d3d.D3DSwapChain.nPresent(JJ)I javafx.graphics@22.0.1 (0 bytes) @ 0x000001c39874f79c [0x000001c39874f740+0x000000000000005c]
J 2675 c2 com.sun.javafx.tk.quantum.PresentingPainter.run()V javafx.graphics@22.0.1 (680 bytes) @ 0x000001c3987c66bc [0x000001c3987c5e60+0x000000000000085c]
J 2692% c2 java.util.concurrent.ThreadPoolExecutor.runWorker(Ljava/util/concurrent/ThreadPoolExecutor$Worker;)V java.base@21.0.3 (187 bytes) @ 0x000001c3987d3e0c [0x000001c3987d3a40+0x00000000000003cc]
j  java.util.concurrent.ThreadPoolExecutor$Worker.run()V+5 java.base@21.0.3
j  com.sun.javafx.tk.quantum.QuantumRenderer$PipelineRunnable.run()V+8 javafx.graphics@22.0.1
j  java.lang.Thread.runWith(Ljava/lang/Object;Ljava/lang/Runnable;)V+5 java.base@21.0.3
j  java.lang.Thread.run()V+19 java.base@21.0.3
v  ~StubRoutines::call_stub 0x000001c3980a100d

siginfo: EXCEPTION_ACCESS_VIOLATION (0xc0000005), reading address 0x0000000000000000


Registers:
RAX=0x0000000000000000, RBX=0x0000000000000000, RCX=0x000001c3acdb5f90, RDX=0x0000000000000000
RSP=0x0000003ab50fe370, RBP=0x0000003ab50fe470, RSI=0x000001c3acdb5f58, RDI=0x0000003ab50fe520
R8 =0x0000000000000000, R9 =0x0000000000000000, R10=0x0000000000000000, R11=0x0000003ab50fe520
R12=0x0000000000000000, R13=0x0000000000000000, R14=0x000001c3acda7700, R15=0x0000000000000000
RIP=0x00007fffe98db440, EFLAGS=0x0000000000010246


Register to memory mapping:

RAX=0x0 is null
RBX=0x0 is null
RCX=0x000001c3acdb5f90 points into unknown readable memory: 0x0000000000000000 | 00 00 00 00 00 00 00 00
RDX=0x0 is null
RSP=0x0000003ab50fe370 is pointing into the stack for thread: 0x000001c3ac871850
RBP=0x0000003ab50fe470 is pointing into the stack for thread: 0x000001c3ac871850
RSI=0x000001c3acdb5f58 points into unknown readable memory: 0x000001c3acdb1ae0 | e0 1a db ac c3 01 00 00
RDI=0x0000003ab50fe520 is pointing into the stack for thread: 0x000001c3ac871850
R8 =0x0 is null
R9 =0x0 is null
R10=0x0 is null
R11=0x0000003ab50fe520 is pointing into the stack for thread: 0x000001c3ac871850
R12=0x0 is null
R13=0x0 is null
R14=0x000001c3acda7700 points into unknown readable memory: 0x009381b800000028 | 28 00 00 00 b8 81 93 00
R15=0x0 is null

Top of Stack: (sp=0x0000003ab50fe370)
0x0000003ab50fe370:   0000000000000000 000001c3acdb5f58
0x0000003ab50fe380:   0000000000010000 00010001000004d0
0x0000003ab50fe390:   0000000100000000 0000000100000000
0x0000003ab50fe3a0:   0000000000000000 00002edda49abedb
0x0000003ab50fe3b0:   0000000000000000 00007ff86a3d0000
0x0000003ab50fe3c0:   0000003ab50fe370 00007fffe97ef1c0
0x0000003ab50fe3d0:   0000003ab50fe210 00007fffe98cf909
0x0000003ab50fe3e0:   0000000000000000 ffffffffffffffff
0x0000003ab50fe3f0:   0000000000000000 000001c300000000
0x0000003ab50fe400:   0000000000000000 0000000000000000
0x0000003ab50fe410:   00007ff800000003 0000000000010000
0x0000003ab50fe420:   0000000000000310 00010001000002c7
0x0000003ab50fe430:   0000000100000057 0000000000000000
0x0000003ab50fe440:   0000000000000021 0000000000000000
0x0000003ab50fe450:   0000000000240000 0000000000000001
0x0000003ab50fe460:   0000000100000000 00007ff86a3fb86b
0x0000003ab50fe470:   00000000000b000e 000000000000004f
0x0000003ab50fe480:   000001c3ad290310 00002edda49abf1b
0x0000003ab50fe490:   0000000000000003 000001c3acda77e0
0x0000003ab50fe4a0:   0000000000000000 0000000000000000
0x0000003ab50fe4b0:   0000000000000000 000001c3aca54c70
0x0000003ab50fe4c0:   0000003ab50fe5d0 00007fffe989760c
0x0000003ab50fe4d0:   0000000000000650 000001c3ac710a90
0x0000003ab50fe4e0:   0000003ab50fe630 0000000000000000
0x0000003ab50fe4f0:   0000000000000000 0000000000000640
0x0000003ab50fe500:   0000000000000638 0000000000000010
0x0000003ab50fe510:   000001c38ae60000 0000003ab50fe5d9
0x0000003ab50fe520:   0000000000000000 0000000000000000
0x0000003ab50fe530:   0000000000000000 0000000000000000
0x0000003ab50fe540:   0000000000000000 0000000000000000
0x0000003ab50fe550:   0000000000000000 0000000000000000
0x0000003ab50fe560:   0000000000000000 0000000000000000 

Instructions: (pc=0x00007fffe98db440)
0x00007fffe98db340:   48 89 5c 24 08 48 89 74 24 10 57 48 83 ec 20 8b
0x00007fffe98db350:   f2 48 8b f9 48 8d 59 28 48 8b cb 48 ff 15 ee 6e
0x00007fffe98db360:   03 00 0f 1f 44 00 00 85 c0 74 0f 8b c8 48 ff 15
0x00007fffe98db370:   e4 6e 03 00 0f 1f 44 00 00 cc 48 8b 47 10 48 8b
0x00007fffe98db380:   3c f0 48 8b cb 48 ff 15 d4 6e 03 00 0f 1f 44 00
0x00007fffe98db390:   00 85 c0 74 0f 8b c8 48 ff 15 ba 6e 03 00 0f 1f
0x00007fffe98db3a0:   44 00 00 90 48 8b c7 48 8b 5c 24 30 48 8b 74 24
0x00007fffe98db3b0:   38 48 83 c4 20 5f c3 cc cc cc cc cc cc cc cc cc
0x00007fffe98db3c0:   48 89 5c 24 10 55 56 57 41 54 41 55 41 56 41 57
0x00007fffe98db3d0:   48 8d 6c 24 e0 48 81 ec 20 01 00 00 48 8b 05 cd
0x00007fffe98db3e0:   df 04 00 48 33 c4 48 89 45 18 49 8b f9 8b da 48
0x00007fffe98db3f0:   8b f1 45 33 e4 4d 85 c9 0f 84 5b 05 00 00 33 d2
0x00007fffe98db400:   45 8d 44 24 70 49 8b c9 e8 87 fc 02 00 8b d3 48
0x00007fffe98db410:   8b ce e8 29 ff ff ff 48 8b d8 48 89 44 24 70 48
0x00007fffe98db420:   85 c0 74 11 48 8b 00 48 8b cb 48 8b 40 08 ff 15
0x00007fffe98db430:   5c 6e 03 00 90 45 8a f4 4d 8b fc 4c 89 64 24 40
0x00007fffe98db440:   48 8b 03 4c 8d 44 24 40 48 8d 15 79 a5 03 00 48
0x00007fffe98db450:   8b cb 48 8b 00 ff 15 35 6e 03 00 41 bd 01 00 00
0x00007fffe98db460:   00 85 c0 78 4c 48 8b 06 44 39 a8 68 3e 00 00 0f
0x00007fffe98db470:   84 03 05 00 00 48 8b 4c 24 40 48 8b 01 48 8d 55
0x00007fffe98db480:   b0 48 8b 40 40 ff 15 05 6e 03 00 0f 10 00 0f 11
0x00007fffe98db490:   07 0f 10 48 10 0f 11 4f 10 0f 10 40 20 0f 11 47
0x00007fffe98db4a0:   20 44 89 67 60 44 8a 77 28 45 22 f5 4c 8b 7c 24
0x00007fffe98db4b0:   40 4c 89 64 24 38 48 8b 03 4c 8d 44 24 38 48 8d
0x00007fffe98db4c0:   15 03 b8 03 00 48 8b cb 48 8b 00 ff 15 bf 6d 03
0x00007fffe98db4d0:   00 48 8b 4c 24 38 85 c0 78 31 44 89 6f 60 48 8b
0x00007fffe98db4e0:   01 4c 8d 44 24 30 33 d2 48 8b 40 70 ff 15 9e 6d
0x00007fffe98db4f0:   03 00 85 c0 78 0a 44 84 6c 24 30 45 8a f5 75 03
0x00007fffe98db500:   45 8a f4 48 8b 4c 24 38 4c 8b f9 48 85 c9 75 0b
0x00007fffe98db510:   4c 39 64 24 40 0f 84 7c 04 00 00 45 84 f6 75 0f
0x00007fffe98db520:   66 44 89 67 66 44 88 67 65 4c 89 67 68 eb 64 48
0x00007fffe98db530:   8b 06 48 8b 48 28 48 8b 01 c7 44 24 20 04 00 00 


Stack slot to memory mapping:

stack at sp + 0 slots: 0x0 is null
stack at sp + 1 slots: 0x000001c3acdb5f58 points into unknown readable memory: 0x000001c3acdb1ae0 | e0 1a db ac c3 01 00 00
stack at sp + 2 slots: 65536 is a compressed pointer to class: 0x0000000800010000
java.lang.invoke.LambdaFormEditor$Transform {0x0000000800010008}
 - instance size:     6
 - klass size:        73
 - access:            final synchronized 
 - flags:             rewritten has_nonstatic_fields has_localvariable_table 
 - state:             fully_initialized
 - name:              'java/lang/invoke/LambdaFormEditor$Transform'
 - super:             'java/lang/ref/SoftReference'
 - sub:               
 - arrays:            'java/lang/invoke/LambdaFormEditor$Transform'[]
 - methods:           Array<T>(0x000001c3a849f830)
 - method ordering:   Array<T>(0x000001c3a8000018)
 - default_methods:   Array<T>(0x0000000000000000)
 - local interfaces:  Array<T>(0x000001c3a8000058)
 - trans. interfaces: Array<T>(0x000001c3a8000058)
 - constants:         constant pool [111] {0x000001c3a849f420} for 'java/lang/invoke/LambdaFormEditor$Transform' cache=0x000001c3a849ff08
 - class loader data:  loader data: 0x000001c38d129160 of 'bootstrap'
 - source file:       'LambdaFormEditor.java'
 - class annotations:       Array<T>(0x0000000000000000)
 - class type annotations:  Array<T>(0x0000000000000000)
 - field annotations:       Array<T>(0x0000000000000000)
 - field type annotations:  Array<T>(0x0000000000000000)
 - generic signature: 'Ljava/lang/ref/SoftReference<Ljava/lang/invoke/LambdaForm;>;'
 - inner classes:     Array<T>(0x000001c3a849feb8)
 - nest members:     Array<T>(0x000001c3a8000028)
 - permitted subclasses:     Array<T>(0x000001c3a8000028)
 - java mirror:       a 'java/lang/Class'{0x0000000705f27bf8} = 'java/lang/invoke/LambdaFormEditor$Transform'
 - vtable length      12  (start addr: 0x00000008000101c8)
 - itable length      2 (start addr: 0x0000000800010228)
 - ---- static fields (1 words):
 - static final synthetic '$assertionsDisabled' 'Z' @112 
 - ---- non-static fields (9 words):
 - private 'referent' 'Ljava/lang/Object;' @12 
 - volatile 'queue' 'Ljava/lang/ref/ReferenceQueue;' @16 
 - volatile 'next' 'Ljava/lang/ref/Reference;' @20 
 - private transient 'discovered' 'Ljava/lang/ref/Reference;' @24 
 - private 'timestamp' 'J' @32 
 - final 'fullBytes' '[B' @28 
 - final 'packedBytes' 'J' @40 
 - non-static oop maps: 16-20 28-28 
stack at sp + 3 slots: 0x00010001000004d0 is an unknown value
stack at sp + 4 slots: 0x0000000100000000 is an unknown value
stack at sp + 5 slots: 0x0000000100000000 is an unknown value
stack at sp + 6 slots: 0x0 is null
stack at sp + 7 slots: 0x00002edda49abedb is an unknown value


Compiled method (n/a)  292122 2527     n 0       com.sun.prism.d3d.D3DSwapChain::nPresent (native)
 total in heap  [0x000001c39874f590,0x000001c39874f980] = 1008
 relocation     [0x000001c39874f6f0,0x000001c39874f728] = 56
 main code      [0x000001c39874f740,0x000001c39874f973] = 563
 stub code      [0x000001c39874f973,0x000001c39874f978] = 5
 oops           [0x000001c39874f978,0x000001c39874f980] = 8

[Constant Pool (empty)]

[MachCode]
[Entry Point]
  # {method} {0x000001c3a9000590} 'nPresent' '(JJ)I' in 'com/sun/prism/d3d/D3DSwapChain'
  # parm0:    rdx:rdx   = long
  # parm1:    r8:r8     = long
  #           [sp+0x70]  (sp of caller)
  0x000001c39874f740: 448b 5208 | 49bb 0000 | 0000 0800 | 0000 4d03 | d349 3bc2 | 0f84 0600 

  0x000001c39874f758: ;   {runtime_call ic_miss_stub}
  0x000001c39874f758: 0000 e921 | f099 ff90 
[Verified Entry Point]
  0x000001c39874f760: 8984 2400 | 80ff ff55 | 488b ec48 | 83ec 6090 | 4181 7f20 | 0100 0000 

  0x000001c39874f778: ;   {runtime_call StubRoutines (final stubs)}
  0x000001c39874f778: 7405 e8e1 | 5598 ff4d | 8bc8 4c8b 

  0x000001c39874f784: ;   {oop(a 'java/lang/Class'{0x000000070be10c58} = 'com/sun/prism/d3d/D3DSwapChain')}
  0x000001c39874f784: c249 be58 | 0ce1 0b07 | 0000 004c | 8974 2450 | 4c8d 7424 | 5049 8bd6 

  0x000001c39874f79c: ;   {internal_word}
  0x000001c39874f79c: c5f8 7749 | ba9c f774 | 98c3 0100 | 004d 8997 | a003 0000 | 4989 a798 

  0x000001c39874f7b4: ;   {external_word}
  0x000001c39874f7b4: 0300 0049 | ba18 9a03 | 0af8 7f00 | 0041 803a | 000f 844e | 0000 0052 | 4150 4151 

  0x000001c39874f7d0: ;   {metadata({method} {0x000001c3a9000590} 'nPresent' '(JJ)I' in 'com/sun/prism/d3d/D3DSwapChain')}
  0x000001c39874f7d0: 48ba 8805 | 00a9 c301 | 0000 498b | cf48 83ec | 2040 f6c4 | 0f0f 8419 | 0000 0048 

  0x000001c39874f7ec: ;   {runtime_call}
  0x000001c39874f7ec: 83ec 0848 | b830 f1ad | 09f8 7f00 | 00ff d048 | 83c4 08e9 | 0c00 0000 

  0x000001c39874f804: ;   {runtime_call}
  0x000001c39874f804: 48b8 30f1 | ad09 f87f | 0000 ffd0 | 4883 c420 | 4159 4158 | 5a49 8d8f | b803 0000 | 41c7 874c 
  0x000001c39874f824: 0400 0004 

  0x000001c39874f828: ;   {runtime_call}
  0x000001c39874f828: 0000 0048 | b8d0 420a | 49f8 7f00 | 00ff d0c5 | f877 41c7 | 874c 0400 | 0005 0000 | 00f0 8344 
  0x000001c39874f848: 24c0 0049 | 3baf 5004 | 0000 0f87 | 0e00 0000 | 4183 bf48 | 0400 0000 | 0f84 2b00 | 0000 c5f8 
  0x000001c39874f868: 7748 8945 | f849 8bcf | 4c8b e448 | 83ec 2048 

  0x000001c39874f878: ;   {runtime_call}
  0x000001c39874f878: 83e4 f048 | b810 8e79 | 09f8 7f00 | 00ff d049 | 8be4 4d33 | e448 8b45 | f841 c787 | 4c04 0000 
  0x000001c39874f898: 0800 0000 | 4183 bfc8 | 0400 0002 | 0f84 9c00 

  0x000001c39874f8a8: ;   {external_word}
  0x000001c39874f8a8: 0000 49ba | 189a 030a | f87f 0000 | 4180 3a00 | 0f84 4c00 | 0000 4889 

  0x000001c39874f8c0: ;   {metadata({method} {0x000001c3a9000590} 'nPresent' '(JJ)I' in 'com/sun/prism/d3d/D3DSwapChain')}
  0x000001c39874f8c0: 45f8 48ba | 8805 00a9 | c301 0000 | 498b cf48 | 83ec 2040 | f6c4 0f0f | 8419 0000 | 0048 83ec 
  0x000001c39874f8e0: ;   {runtime_call}
  0x000001c39874f8e0: 0848 b830 | f1ad 09f8 | 7f00 00ff | d048 83c4 | 08e9 0c00 

  0x000001c39874f8f4: ;   {runtime_call}
  0x000001c39874f8f4: 0000 48b8 | 30f1 ad09 | f87f 0000 | ffd0 4883 | c420 488b | 45f8 49c7 | 8798 0300 | 0000 0000 
  0x000001c39874f914: 0049 c787 | a003 0000 | 0000 0000 | c5f8 7749 | 8b8f 2804 | 0000 c781 | 0001 0000 | 0000 0000 
  0x000001c39874f934: c949 837f | 0800 0f85 | 0100 0000 

  0x000001c39874f940: ;   {runtime_call StubRoutines (initial stubs)}
  0x000001c39874f940: c3e9 ba15 | 95ff c5f8 | 7748 8945 | f84c 8be4 | 4883 ec20 | 4883 e4f0 

  0x000001c39874f958: ;   {runtime_call}
  0x000001c39874f958: 48b8 1029 | ae09 f87f | 0000 ffd0 | 498b e44d | 33e4 488b | 45f8 e937 | ffff fff4 | f4f4 f4f4 
[/MachCode]


Compiled method (c2)  292126 2675   !   4       com.sun.javafx.tk.quantum.PresentingPainter::run (680 bytes)
 total in heap  [0x000001c3987c5810,0x000001c3987cb370] = 23392
 relocation     [0x000001c3987c5970,0x000001c3987c5e30] = 1216
 constants      [0x000001c3987c5e40,0x000001c3987c5e60] = 32
 main code      [0x000001c3987c5e60,0x000001c3987c8c20] = 11712
 stub code      [0x000001c3987c8c20,0x000001c3987c8d90] = 368
 oops           [0x000001c3987c8d90,0x000001c3987c8dc0] = 48
 metadata       [0x000001c3987c8dc0,0x000001c3987c91e8] = 1064
 scopes data    [0x000001c3987c91e8,0x000001c3987ca200] = 4120
 scopes pcs     [0x000001c3987ca200,0x000001c3987cade0] = 3040
 dependencies   [0x000001c3987cade0,0x000001c3987caf08] = 296
 handler table  [0x000001c3987caf08,0x000001c3987cb190] = 648
 nul chk table  [0x000001c3987cb190,0x000001c3987cb370] = 480


[Constant Pool]
             Address          hex4                    hex8      
  0x000001c3987c5e40:   0x3f800000      0xf4f4f4f43f800000      
  0x000001c3987c5e44:   0xf4f4f4f4                              
  0x000001c3987c5e48:   0xf4f4f4f4      0xf4f4f4f4f4f4f4f4      
  0x000001c3987c5e4c:   0xf4f4f4f4                              
  0x000001c3987c5e50:   0xf4f4f4f4      0xf4f4f4f4f4f4f4f4      
  0x000001c3987c5e54:   0xf4f4f4f4                              
  0x000001c3987c5e58:   0xf4f4f4f4      0xf4f4f4f4f4f4f4f4      
  0x000001c3987c5e5c:   0xf4f4f4f4                              

[MachCode]
[Entry Point]
  # {method} {0x000001c3a8e31460} 'run' '()V' in 'com/sun/javafx/tk/quantum/PresentingPainter'
  #           [sp+0x90]  (sp of caller)
  0x000001c3987c5e60: ;   {no_reloc}
  0x000001c3987c5e60: 448b 5208 | 49bb 0000 | 0000 0800 | 0000 4d03 | d349 3bc2 

  0x000001c3987c5e74: ;   {runtime_call ic_miss_stub}
  0x000001c3987c5e74: 0f85 0689 | 92ff 6690 | 0f1f 4000 
[Verified Entry Point]
  0x000001c3987c5e80: 8984 2400 | 80ff ff55 | 4881 ec80 | 0000 0090 | 4181 7f20 | 0100 0000 | 0f85 742d | 0000 4889 
  0x000001c3987c5ea0: ;   {oop(a 'java/util/concurrent/locks/ReentrantLock'{0x000000070bef4218})}
  0x000001c3987c5ea0: 5424 2049 | ba18 42ef | 0b07 0000 | 0041 8b5a | 0c85 db0f | 84af 1700 | 0049 8d34 | dc4d 8b97 
  0x000001c3987c5ec0: 8003 0000 | 498b 3a33 | c041 bb01 | 0000 00f0 | 450f b15c | dc10 410f | 94c3 450f | b6db 4585 
  0x000001c3987c5ee0: db0f 8403 | 1400 0041 | 807f 4000 | 0f85 6d14 | 0000 4c8b | d64c 8bc7 | 49c1 e803 | 4589 44dc 
  0x000001c3987c5f00: 0c4c 8bdf | 4d33 da49 | c1eb 154d | 85db 741a | 49c1 ea09 | 48b9 0030 | 079d c301 | 0000 4903 
  0x000001c3987c5f20: ca80 3902 | 0f85 6d14 | 0000 4c8b | 4c24 2041 | 8b49 2845 | 8b5c cc64 | 4585 db0f | 842c 1900 
  0x000001c3987c5f40: 0045 8b54 | cc68 4b8b | 5cd4 1045 | 0fb6 44cc | 6245 85c0 | 0f85 a218 | 0000 458b | 44cc 2c45 
  0x000001c3987c5f60: 85c0 0f8e | b018 0000 | 458b 5ccc | 3045 85db | 0f8e be18 | 0000 4589 | 5920 4589 | 5918 4589 
  0x000001c3987c5f80: 4114 4589 | 411c 450f | b644 cc60 | 4585 c00f | 84f3 1800 | 0048 897c | 2428 450f | b65c cc61 
  0x000001c3987c5fa0: ;   {no_reloc}
  0x000001c3987c5fa0: 894c 2430 

  0x000001c3987c5fa4: ;   {oop([B{0x000000070be13098})}
  0x000001c3987c5fa4: 49b8 9830 | e10b 0700 

  0x000001c3987c5fac: ;   {oop([B{0x000000070be13098})}
  0x000001c3987c5fac: 0000 49b9 | 9830 e10b | 0700 0000 | 4983 c110 | 4c89 4c24 | 3845 85db | 0f85 f30a | 0000 4885 
  0x000001c3987c5fcc: db0f 8422 | 1d00 004f | 8b44 d410 | 4d8d 1ccc | 4b8d 14d4 

  0x000001c3987c5fe0: ;   {oop([B{0x000000070be13098})}
  0x000001c3987c5fe0: 48bd 9830 | e10b 0700 | 0000 4c89 

  0x000001c3987c5fec: ;   {optimized virtual_call}
  0x000001c3987c5fec: 5c24 40e8 

  0x000001c3987c5ff0: ; ImmutableOopMap {rbp=Oop [56]=Derived_oop_rbp [32]=Oop [40]=Oop [48]=NarrowOop [64]=Oop }
                      ;*invokevirtual _begin {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.glass.ui.View::lock@9 (line 731)
                      ; - com.sun.prism.PresentableState::lock@11 (line 285)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@106 (line 65)
  0x000001c3987c5ff0: 4c67 f8ff 

  0x000001c3987c5ff4: ;   {other}
  0x000001c3987c5ff4: 0f1f 8400 | e407 0000 | 448b 5424 | 3047 3b64 | d468 0f84 | 9818 0000 | 4c8b 5c24 | 2041 8b6b 
  0x000001c3987c6014: 3047 8964 | d40c 458b 

  0x000001c3987c601c: ;   {metadata('com/sun/prism/d3d/D3DResourceFactory')}
  0x000001c3987c601c: 5cec 0841 | 81fb 0068 | 0e00 0f85 | 0419 0000 | 4d8d 14ec | 410f b66a | 0c85 ed0f | 85e7 1c00 
  0x000001c3987c603c: 0045 8b52 | 3044 8954 | 2430 430f | b66c d420 | 85ed 0f85 | e41c 0000 | 4b8b 94d4 | 8000 0000 
  0x000001c3987c605c: 49c1 e203 

  0x000001c3987c6060: ;   {oop([B{0x000000070be13098})}
  0x000001c3987c6060: 48bd 9830 | e10b 0700 | 0000 4c89 

  0x000001c3987c606c: ;   {static_call}
  0x000001c3987c606c: 5424 40e8 

  0x000001c3987c6070: ; ImmutableOopMap {rbp=Oop [56]=Derived_oop_rbp [32]=Oop [40]=Oop [48]=NarrowOop [64]=Oop }
                      ;*invokestatic nTestCooperativeLevel {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.d3d.D3DContext::testLostStateAndReset@13 (line 158)
                      ; - com.sun.prism.d3d.D3DResourceFactory::isDeviceReady@17 (line 120)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@136 (line 71)
  0x000001c3987c6070: ec6a f8ff 

  0x000001c3987c6074: ;   {other}
  0x000001c3987c6074: 0f1f 8400 | 6408 0001 | 3d68 0876 | 880f 84c5 | 1c00 003d | 6908 7688 | 0f84 d61c | 0000 3d70 
  0x000001c3987c6094: 0876 880f | 84e7 1c00 | 003d 7408 | 7688 0f84 | f81c 0000 | 85c0 0f8c | 0c1d 0000 | 4c8b 5424 
  0x000001c3987c60b4: 2045 8b4a | 2c47 8b5c | cc08 458b 

  0x000001c3987c60c0: ;   {metadata('com/sun/prism/d3d/D3DSwapChain')}
  0x000001c3987c60c0: 5228 4181 | fb28 0a21 | 000f 8575 | 1800 0047 | 8b44 d43c | 4f8d 1ccc | 4c89 5c24 | 3045 8b4b 
  0x000001c3987c60e0: 2043 8b6c | cc1c 443b | c50f 85d1 | 1a00 0047 | 8b44 cc20 | 438b 6cd4 | 4041 3be8 | 0f85 d61a 
  0x000001c3987c6100: 0000 c4c1 | 7a10 4b18 | c481 7a10 | 44d4 34c5 | f82e c10f | 8ad7 1a00 | 000f 85d1 | 1a00 00c4 
  0x000001c3987c6120: c17a 1043 | 1cc4 817a | 1054 d438 | c5f8 2ed0 | 0f8a a21c | 0000 0f85 | 9c1c 0000 | 478b 5ccc 
  0x000001c3987c6140: 3443 8b6c | dc1c 4789 | 64dc 1443 | ff44 dc0c 

  0x000001c3987c6150: ; implicit exception: dispatches to 0x000001c3987c8954
  0x000001c3987c6150: 458b 5cec 

  0x000001c3987c6154: ;   {metadata('com/sun/prism/d3d/D3DTextureData')}
  0x000001c3987c6154: 0841 81fb | 4822 2100 | 0f85 3620 | 0000 4d8d | 14ec 4d8b | 5210 4d85 | d20f 8495 | 1c00 004c 
  0x000001c3987c6174: 8b54 2430 | 458b 5a14 

  0x000001c3987c617c: ; implicit exception: dispatches to 0x000001c3987c8640
  0x000001c3987c617c: 478b 54dc | 1849 8bd1 | 48c1 e203 | 4d8b c249 

  0x000001c3987c618c: ;   {oop([B{0x000000070be13098})}
  0x000001c3987c618c: c1e0 0348 | bd98 30e1 | 0b07 0000 

  0x000001c3987c6198: ;   {static_call}
  0x000001c3987c6198: 0066 90e8 

  0x000001c3987c619c: ; ImmutableOopMap {rbp=Oop [56]=Derived_oop_rbp [32]=Oop [40]=Oop [48]=Oop }
                      ;*invokestatic create {reexecute=0 rethrow=0 return_oop=1}
                      ; - com.sun.prism.d3d.D3DSwapChain::createGraphics@8 (line 148)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@304 (line 88)
  0x000001c3987c619c: e0d2 f9ff 

  0x000001c3987c61a0: ;   {other}
  0x000001c3987c61a0: 0f1f 8400 | 9009 0002 | 4c8b 5424 | 30c4 c17a | 104a 18c4 | c17a 1042 | 1c44 8b58 

  0x000001c3987c61bc: ;   {metadata('com/sun/prism/d3d/D3DGraphics')}
  0x000001c3987c61bc: 0841 81fb | b02d 2100 | 0f85 9e17 

  0x000001c3987c61c8: ;   {section_word}
  0x000001c3987c61c8: 0000 c5f8 | 2e0d 6efc | ffff 0f8a | 481a 0000 | 0f85 421a 

  0x000001c3987c61dc: ;   {section_word}
  0x000001c3987c61dc: 0000 c5f8 | 2e05 5afc | ffff 0f8a | 441c 0000 | 0f85 3e1c | 0000 4c8b | 5424 2045 | 8b5a 2847 
  0x000001c3987c61fc: 8b44 dc6c | 4489 4424 | 3049 8bd2 

  0x000001c3987c6208: ;   {optimized virtual_call}
  0x000001c3987c6208: 4c8b c0e8 

  0x000001c3987c620c: ; ImmutableOopMap {rbp=Oop [56]=Derived_oop_rbp [32]=Oop [40]=Oop [48]=NarrowOop }
                      ;*invokevirtual paintImpl {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@331 (line 92)
  0x000001c3987c620c: 1000 ffff 

  0x000001c3987c6210: ;   {other}
  0x000001c3987c6210: 0f1f 8400 | 000a 0003 | 4c8b 5424 | 2045 8862 | 2441 8b6a | 2c45 8b54 

  0x000001c3987c6228: ;   {metadata('com/sun/prism/d3d/D3DSwapChain')}
  0x000001c3987c6228: ec08 4181 | fa28 0a21 | 000f 8559 | 1700 004d | 8d14 ec4c | 8954 2440 | 458b 5a14 

  0x000001c3987c6244: ; implicit exception: dispatches to 0x000001c3987c86b0
  0x000001c3987c6244: 478b 54dc | 1844 8954 | 2434 430f | b66c d420 | 85ed 0f85 | 141c 0000 | 478b 5cd4 | 2c44 895c 
  0x000001c3987c6264: 2448 478b | 54dc 1044 | 8b44 2434 | 4f8d 1cc4 | 4c89 5c24 | 5045 85d2 | 7e70 448b | 5c24 4847 
  0x000001c3987c6284: 8b4c dc18 | 438b 4cdc | 2043 8b7c | dc1c 418b | 6ccc 0c85 | ed0f 8f6d | 1d00 0041 | 8b6c cc14 
  0x000001c3987c62a4: 85ed 0f8f | ac1d 0000 | 498b 94cc | 8000 0000 | 49c1 e103 | 49c1 e303 | 4c8b c749 | c1e0 0341 
  0x000001c3987c62c4: ;   {oop([B{0x000000070be13098})}
  0x000001c3987c62c4: 8bfa 48bd | 9830 e10b | 0700 0000 | 4c89 5c24 

  0x000001c3987c62d4: ;   {static_call}
  0x000001c3987c62d4: 5866 90e8 

  0x000001c3987c62d8: ; ImmutableOopMap {rbp=Oop [56]=Derived_oop_rbp [32]=Oop [40]=Oop [48]=NarrowOop [52]=NarrowOop [64]=Oop [72]=NarrowOop [80]=Oop [88]=Oop }
                      ;*invokestatic nDrawIndexedQuads {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.d3d.D3DContext::renderQuads@7 (line 630)
                      ; - com.sun.prism.impl.BaseContext::drawQuads@8 (line 125)
                      ; - com.sun.prism.impl.VertexBuffer::flush@23 (line 98)
                      ; - com.sun.prism.impl.BaseContext::flushVertexBuffer@12 (line 107)
                      ; - com.sun.prism.d3d.D3DSwapChain::prepare@6 (line 60)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@355 (line 99)
  0x000001c3987c62d8: 845a f4ff 

  0x000001c3987c62dc: ;   {other}
  0x000001c3987c62dc: 0f1f 8400 | cc0a 0004 | 448b 5c24 | 4847 8964 | dc10 488b | 5424 404c | 8b44 2450 

  0x000001c3987c62f8: ;   {oop([B{0x000000070be13098})}
  0x000001c3987c62f8: 48bd 9830 | e10b 0700 

  0x000001c3987c6300: ;   {static_call}
  0x000001c3987c6300: 0000 90e8 

  0x000001c3987c6304: ; ImmutableOopMap {rbp=Oop [56]=Derived_oop_rbp [32]=Oop [40]=Oop [48]=NarrowOop [52]=NarrowOop [64]=Oop [80]=Oop }
                      ;*invokestatic create {reexecute=0 rethrow=0 return_oop=1}
                      ; - com.sun.prism.d3d.D3DSwapChain::prepare@11 (line 61)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@355 (line 99)
  0x000001c3987c6304: 78d1 f9ff 

  0x000001c3987c6308: ;   {other}
  0x000001c3987c6308: 0f1f 8400 | f80a 0005 

  0x000001c3987c6310: ; implicit exception: dispatches to 0x000001c3987c86f8
  0x000001c3987c6310: 448b 5008 

  0x000001c3987c6314: ;   {metadata('com/sun/prism/d3d/D3DGraphics')}
  0x000001c3987c6314: 4181 fab0 | 2d21 000f | 858b 1e00 | 004c 8b54 | 2440 458b | 5220 478b | 5cd4 1c44 | 895c 2448 
  0x000001c3987c6334: 4c8b 5c24 | 4045 8b43 | 144b 8b54 | c410 4889 | 4424 5847 | 8b5c d420 | 4489 5c24 

  0x000001c3987c6350: ;   {static_call}
  0x000001c3987c6350: 4c66 90e8 

  0x000001c3987c6354: ; ImmutableOopMap {rbp=Oop [56]=Derived_oop_rbp [32]=Oop [40]=Oop [48]=NarrowOop [52]=NarrowOop [64]=Oop [80]=Oop [88]=Oop }
                      ;*invokestatic nGetTextureWidth {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.d3d.D3DSwapChain::getPhysicalWidth@7 (line 98)
                      ; - com.sun.prism.d3d.D3DSwapChain::getContentWidth@1 (line 108)
                      ; - com.sun.prism.d3d.D3DSwapChain::prepare@43 (line 67)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@355 (line 99)
  0x000001c3987c6354: 8845 f5ff 

  0x000001c3987c6358: ;   {other}
  0x000001c3987c6358: 0f1f 8400 | 480b 0006 | 8944 2460 | 4c8b 5424 | 4045 8b52 | 144b 8b54 

  0x000001c3987c6370: ;   {static_call}
  0x000001c3987c6370: d410 90e8 

  0x000001c3987c6374: ; ImmutableOopMap {rbp=Oop [56]=Derived_oop_rbp [32]=Oop [40]=Oop [48]=NarrowOop [52]=NarrowOop [64]=Oop [80]=Oop [88]=Oop }
                      ;*invokestatic nGetTextureHeight {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.d3d.D3DSwapChain::getPhysicalHeight@7 (line 103)
                      ; - com.sun.prism.d3d.D3DSwapChain::getContentHeight@1 (line 113)
                      ; - com.sun.prism.d3d.D3DSwapChain::prepare@49 (line 68)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@355 (line 99)
  0x000001c3987c6374: 6849 f5ff 

  0x000001c3987c6378: ;   {other}
  0x000001c3987c6378: 0f1f 8400 | 680b 0007 | 8bd8 4c8b | 5424 4041 | 8b7a 2045 | 8b4c fc34 

  0x000001c3987c6390: ; implicit exception: dispatches to 0x000001c3987c8758
  0x000001c3987c6390: 438b 6ccc | 0c85 ed0f | 8ee7 1a00 | 0043 8b6c | cc1c 458b 

  0x000001c3987c63a4: ;   {metadata('com/sun/prism/d3d/D3DTextureData')}
  0x000001c3987c63a4: 54ec 0841 | 81fa 4822 | 2100 0f85 | 281e 0000 | 4d8d 14ec | 418b 6a1c | 85ed 0f85 | 081b 0000 
  0x000001c3987c63c4: 4180 7f40 | 000f 8571 | 1000 004c | 8b54 2458 

  0x000001c3987c63d4: ;   {oop(a 'com/sun/prism/CompositeMode'{0x000000070be11c18})}
  0x000001c3987c63d4: 41c7 4244 | 8323 7ce1 | 448b 5424 | 60c4 c16a | 2ad2 c5e2 | 2adb 448b | 5c24 48c4 | c14a 2af3 
  0x000001c3987c63f4: 448b 5424 | 4cc4 c142 | 2afa 4c8b 

  0x000001c3987c6400: ;   {oop(a 'com/sun/prism/CompositeMode'{0x000000070be11c18})}
  0x000001c3987c6400: 5424 5849 | bb18 1ce1 | 0b07 0000 | 004d 33da | 49c1 eb15 | 4d85 db74 | 1b49 c1ea | 0949 b800 
  0x000001c3987c6420: 3007 9dc3 | 0100 004d | 03c2 4180 | 3802 0f85 | 4810 0000 | 4c8b c749 | c1e0 0348 | 8b54 2458 
  0x000001c3987c6440: c5f8 57c0 | c5f0 57c9 | c5d8 57e4 | c5d0 57ed 

  0x000001c3987c6450: ;   {oop([B{0x000000070be13098})}
  0x000001c3987c6450: 48bd 9830 | e10b 0700 

  0x000001c3987c6458: ;   {optimized virtual_call}
  0x000001c3987c6458: 0000 90e8 

  0x000001c3987c645c: ; ImmutableOopMap {rbp=Oop [56]=Derived_oop_rbp [32]=Oop [40]=Oop [48]=NarrowOop [52]=NarrowOop [64]=Oop [80]=Oop }
                      ;*invokevirtual drawTexture {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.d3d.D3DSwapChain::prepare@117 (line 74)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@355 (line 99)
  0x000001c3987c645c: 40a0 f3ff 

  0x000001c3987c6460: ;   {other}
  0x000001c3987c6460: 0f1f 8400 | 500c 0008 | 448b 5c24 | 3443 0fb6 | 6cdc 2085 | ed0f 8599 | 1a00 0045 | 8bd3 478b 
  0x000001c3987c6480: 44d4 2c47 | 8b54 c410 | 4585 d27e | 7944 8944 | 2434 438b | 4cc4 1847 | 8b4c c420 | 438b 7cc4 
  0x000001c3987c64a0: 1c43 8b6c | cc0c 85ed | 0f8f f61b | 0000 438b | 6ccc 1485 | ed0f 8f29 | 1c00 004b | 8b94 cc80 
  0x000001c3987c64c0: 0000 004c | 8bc9 49c1 | e103 4c8b | c749 c1e0 | 0344 8b5c | 2434 49c1 | e303 418b 

  0x000001c3987c64dc: ;   {oop([B{0x000000070be13098})}
  0x000001c3987c64dc: fa48 bd98 | 30e1 0b07 | 0000 004c | 895c 2448 

  0x000001c3987c64ec: ;   {static_call}
  0x000001c3987c64ec: 6666 90e8 

  0x000001c3987c64f0: ; ImmutableOopMap {rbp=Oop [56]=Derived_oop_rbp [32]=Oop [40]=Oop [48]=NarrowOop [52]=NarrowOop [64]=Oop [72]=Oop }
                      ;*invokestatic nDrawIndexedQuads {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.d3d.D3DContext::renderQuads@7 (line 630)
                      ; - com.sun.prism.impl.BaseContext::drawQuads@8 (line 125)
                      ; - com.sun.prism.impl.VertexBuffer::flush@23 (line 98)
                      ; - com.sun.prism.impl.BaseContext::flushVertexBuffer@12 (line 107)
                      ; - com.sun.prism.d3d.D3DSwapChain::prepare@121 (line 76)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@355 (line 99)
  0x000001c3987c64f0: 6c58 f4ff 

  0x000001c3987c64f4: ;   {other}
  0x000001c3987c64f4: 0f1f 8400 | e40c 0009 | 448b 5424 | 3447 8964 | d410 4c8b | 5424 4045 | 8b52 2047 | 8b54 d434 
  0x000001c3987c6514: ; implicit exception: dispatches to 0x000001c3987c87dc
  0x000001c3987c6514: 438b 6cd4 | 0c85 ed0f | 8e0f 1a00 | 00ff cd43 | 896c d40c | 448b 5c24 | 3045 85db | 0f84 8613 
  0x000001c3987c6534: 0000 4f8d | 14dc 4c89 | 5424 404c | 8b5c 2440 | 488d 5c24 | 7049 8b03 | a802 0f85 | 2300 0000 
  0x000001c3987c6554: 4883 c801 | 4889 03f0 | 490f b11b | 0f84 3700 | 0000 482b | c448 2507 | f0ff ff48 | 8903 e924 
  0x000001c3987c6574: 0000 004c | 8bd0 4833 | c0f0 4d0f | b17a 3e48 | c703 0300 | 0000 7411 | 4c3b f875 | 1549 ff82 
  0x000001c3987c6594: 8600 0000 | 4833 c075 | 0949 ff87 | 5005 0000 | 33c0 0f85 | f813 0000 | 448b 5c24 | 3043 0fb6 
  0x000001c3987c65b4: 6cdc 0d4c | 8b5c 2440 | 488d 4424 | 7048 8338 | 000f 8479 | 0000 004d | 8b13 41f6 | c202 0f84 
  0x000001c3987c65d4: 6200 0000 | 4983 ba86 | 0000 0000 | 7409 49ff | 8a86 0000 | 00eb 4b49 | 8b82 9600 

  0x000001c3987c65f0: ;   {no_reloc}
  0x000001c3987c65f0: 0000 490b | 828e 0000 | 0075 0a49 | c742 3e00 | 0000 00eb | 3d49 83ba | 9e00 0000 | 0074 2248 
  0x000001c3987c6610: 33c0 49c7 | 423e 0000 | 0000 f083 | 0424 0049 | 83ba 9e00 | 0000 0075 | 0df0 4d0f | b17a 3e75 
  0x000001c3987c6630: 0583 c801 | eb0c a800 | eb08 4c8b | 10f0 4d0f | b113 750a | 49ff 8f50 | 0500 0045 | 33d2 0f85 
  0x000001c3987c6650: 7513 0000 | 85ed 0f84 | ec18 0000 | 4c8b 4424 | 2041 8b68 | 2c45 8b54 

  0x000001c3987c6668: ;   {metadata('com/sun/prism/d3d/D3DSwapChain')}
  0x000001c3987c6668: ec08 4181 | fa28 0a21 | 000f 857a | 1300 004d | 8d14 ec45 | 8b5a 1447 | 8b54 dc18 | 4489 5424 
  0x000001c3987c6688: 3043 0fb6 | 6cd4 2085 | ed0f 85c5 | 1800 004b | 8b94 d480 | 0000 004f | 8b44 dc10 | 49c1 e203 
  0x000001c3987c66a8: ;   {oop([B{0x000000070be13098})}
  0x000001c3987c66a8: 48bd 9830 | e10b 0700 | 0000 4c89 

  0x000001c3987c66b4: ;   {static_call}
  0x000001c3987c66b4: 5424 40e8 

  0x000001c3987c66b8: ; ImmutableOopMap {rbp=Oop [56]=Derived_oop_rbp [32]=Oop [40]=Oop [48]=NarrowOop [64]=Oop }
                      ;*invokestatic nPresent {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.d3d.D3DSwapChain::present@25 (line 87)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@451 (line 107)
  0x000001c3987c66b8: a490 f8ff 

  0x000001c3987c66bc: ;   {other}
  0x000001c3987c66bc: 0f1f 8400 | ac0e 000a | 3d68 0876 | 880f 84a1 | 1800 003d | 6908 7688 | 0f84 b218 | 0000 85c0 
  0x000001c3987c66dc: 0f8c c618 | 0000 4c8b | 5424 2845 | 8b5a 3c43 | 8b5c dc14 

  0x000001c3987c66f0: ; implicit exception: dispatches to 0x000001c3987c8854
  0x000001c3987c66f0: 418b 7cdc | 0c43 0fbe | 6cdc 10c4 | 6252 f7df | 4183 c3f1 | 4585 db0f | 8cc7 1100 | 0085 ed0f 
  0x000001c3987c6710: 856c 1500 | 0085 ff0f | 86e7 1200 | 0049 8d34 | dc49 8d4c | dc10 8039 | 510f 85a5 | 1100 0048 
  0x000001c3987c6730: 8b54 2438 | 41b8 0f00 | 0000 4533 | c949 ba40 | 4f0d 98c3 | 0100 0041 

  0x000001c3987c6748: ;   {other}
  0x000001c3987c6748: ffd2 0f1f | 8400 0000 | 0000 85c0 | 0f8d 7a11 | 0000 83c0 | 1083 f80f | 0f8d 460b | 0000 3bc7 
  0x000001c3987c6768: 0f83 9e13 | 0000 83ff | 0e0f 8695 | 1300 0083 | f80f 0f83 | 8c13 0000 | 41ba 0100 | 0000 8bc8 
  0x000001c3987c6788: 4c63 d846 | 0fbe 441e 

  0x000001c3987c6790: ;   {oop([B{0x000000070be13098})}
  0x000001c3987c6790: 1049 b998 | 30e1 0b07 | 0000 0047 | 0fbe 4c19 | 1045 3bc1 | 0f84 b50a | 0000 85c0 | 0f8d 2211 
  0x000001c3987c67b0: 0000 458b 

  0x000001c3987c67b4: ;   {oop(a 'java/lang/Class'{0x000000070be12e50} = 'com/sun/prism/impl/Disposer')}
  0x000001c3987c67b4: da49 ba50 | 2ee1 0b07 | 0000 0045 | 8b52 7045 | 85d2 0f84 | 2011 0000 | 4b8d 0cd4 | 488d 5c24 
  0x000001c3987c67d4: 7048 8b01 | a802 0f85 | 2300 0000 | 4883 c801 | 4889 03f0 | 480f b119 | 0f84 3700 | 0000 482b 
  0x000001c3987c67f4: c448 2507 | f0ff ff48 | 8903 e924 | 0000 004c | 8bc0 4833 | c0f0 4d0f | b178 3e48 | c703 0300 
  0x000001c3987c6814: 0000 7411 | 4c3b f875 | 1549 ff80 | 8600 0000 | 4833 c075 | 0949 ff87 | 5005 0000 | 33c0 0f85 
  0x000001c3987c6834: e811 0000 | 438b 6cd4 | 0c45 8b4c 

  0x000001c3987c6840: ;   {metadata('java/lang/ref/ReferenceQueue')}
  0x000001c3987c6840: ec08 4181 | f970 1b06 | 000f 8507 | 1200 004d | 8d0c ec45 | 8b41 0c45 | 85c0 0f85 | 3814 0000 
  0x000001c3987c6860: 488d 4424 | 7048 8338 | 000f 8479 | 0000 004c | 8b11 41f6 | c202 0f84 | 6200 0000 | 4983 ba86 
  0x000001c3987c6880: 0000 0000 | 7409 49ff | 8a86 0000 | 00eb 4b49 | 8b82 9600 | 0000 490b | 828e 0000 | 0075 0a49 
  0x000001c3987c68a0: c742 3e00 | 0000 00eb | 3d49 83ba | 9e00 0000 | 0074 2248 | 33c0 49c7 | 423e 0000 | 0000 f083 
  0x000001c3987c68c0: 0424 0049 | 83ba 9e00 | 0000 0075 | 0df0 4d0f | b17a 3e75 | 0583 c801 | eb0c a800 | eb08 4c8b 
  0x000001c3987c68e0: 10f0 4c0f | b111 750a | 49ff 8f50 | 0500 0045 | 33d2 0f85 | 7811 0000 

  0x000001c3987c68f8: ;   {oop(a 'java/lang/Class'{0x000000070be12e50} = 'com/sun/prism/impl/Disposer')}
  0x000001c3987c68f8: 49ba 502e | e10b 0700 | 0000 458b | 5270 4585 | d20f 84f5 | 0f00 004f | 8d0c d448 | 8d5c 2470 
  0x000001c3987c6918: 498b 01a8 | 020f 8523 | 0000 0048 | 83c8 0148 | 8903 f049 | 0fb1 190f | 8437 0000 | 0048 2bc4 
  0x000001c3987c6938: 4825 07f0 | ffff 4889 | 03e9 2400 | 0000 4c8b | c048 33c0 | f04d 0fb1 | 783e 48c7 | 0303 0000 
  0x000001c3987c6958: 0074 114c | 3bf8 7515 | 49ff 8086 | 0000 0048 | 33c0 7509 | 49ff 8750 | 0500 0033 | c00f 851d 
  0x000001c3987c6978: 1100 0047 | 8b44 d414 

  0x000001c3987c6980: ; implicit exception: dispatches to 0x000001c3987c8888
  0x000001c3987c6980: 438b 6cc4 | 1085 ed0f | 8533 1300 | 0048 8d44 | 2470 4883 | 3800 0f84 | 7900 0000 | 4d8b 1141 
  0x000001c3987c69a0: f6c2 020f | 8462 0000 | 0049 83ba | 8600 0000 | 0074 0949 | ff8a 8600 | 0000 eb4b | 498b 8296 
  0x000001c3987c69c0: 0000 0049 | 0b82 8e00 | 0000 750a | 49c7 423e | 0000 0000 | eb3d 4983 | ba9e 0000 | 0000 7422 
  0x000001c3987c69e0: 4833 c049 | c742 3e00 | 0000 00f0 | 8304 2400 | 4983 ba9e 

  0x000001c3987c69f4: ;   {no_reloc}
  0x000001c3987c69f4: 0000 0000 | 750d f04d | 0fb1 7a3e | 7505 83c8 | 01eb 0ca8 | 00eb 084c | 8b10 f04d | 0fb1 1175 
  0x000001c3987c6a14: 0a49 ff8f | 5005 0000 | 4533 d20f | 85a9 1000 | 004c 8b4c | 2420 458b | 4128 438b | 4cc4 684d 
  0x000001c3987c6a34: 8b54 cc10 | 4d85 d20f | 8483 1500 | 0044 895c | 2420 498b | e94d 8b44 | cc10 498d 

  0x000001c3987c6a50: ;   {optimized virtual_call}
  0x000001c3987c6a50: 14cc 90e8 

  0x000001c3987c6a54: ; ImmutableOopMap {rbp=Oop [40]=Oop }
                      ;*invokevirtual _end {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.glass.ui.View::unlock@9 (line 742)
                      ; - com.sun.prism.PresentableState::unlock@11 (line 296)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@484 (line 120)
  0x000001c3987c6a54: 2880 92ff 

  0x000001c3987c6a58: ;   {other}
  0x000001c3987c6a58: 0f1f 8400 | 4812 000b | 448b 5528 

  0x000001c3987c6a64: ; implicit exception: dispatches to 0x000001c3987c88bc
  0x000001c3987c6a64: 478b 5cd4 | 6c47 8b54 | dc38 4585 | d20f 84a5 | 0e00 0045 | 33db 4787 | 5cd4 0c8b | 6d30 458b 
  0x000001c3987c6a84: ;   {metadata('com/sun/prism/d3d/D3DResourceFactory')}
  0x000001c3987c6a84: 54ec 0841 | 81fa 0068 | 0e00 0f85 | 6510 0000 

  0x000001c3987c6a94: ;   {oop(a 'com/sun/prism/d3d/D3DVramPool'{0x000000070be17160})}
  0x000001c3987c6a94: 49ba 6071 | e10b 0700 | 0000 458b | 5234 478b | 44d4 1845 | 85c0 0f84 | c805 0000 | 4b8d 34c4 
  0x000001c3987c6ab4: 4b8d 3cd4 | e92b 0500 | 0045 33c0 | 488b 5424 

  0x000001c3987c6ac4: ;   {oop([B{0x000000070be13098})}
  0x000001c3987c6ac4: 2048 bd98 | 30e1 0b07 

  0x000001c3987c6acc: ;   {optimized virtual_call}
  0x000001c3987c6acc: 0000 00e8 

  0x000001c3987c6ad0: ; ImmutableOopMap {rbp=Oop [56]=Derived_oop_rbp [32]=Oop [40]=Oop }
                      ;*invokevirtual paintImpl {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@37 (line 57)
  0x000001c3987c6ad0: 4cf7 feff 

  0x000001c3987c6ad4: ;   {other}
  0x000001c3987c6ad4: 0f1f 8400 | c412 000c | 4c8b 5c24 | 2845 8b53 | 3c43 8b7c | d414 418b | 5cfc 0c47 | 0fbe 54d4 
  0x000001c3987c6af4: 10c4 622a | f7c3 4183 | c0f1 4585 | c00f 8c79 | 0b00 0045 | 85d2 0f85 | 1c10 0000 | 85db 0f86 
  0x000001c3987c6b14: c80b 0000 | 498d 34fc | 498d 4cfc | 1080 3951 | 0f85 560b | 0000 488b | 5424 3841 | b80f 0000 
  0x000001c3987c6b34: 0045 33c9 | 49ba 404f | 0d98 c301 | 0000 41ff 

  0x000001c3987c6b44: ;   {other}
  0x000001c3987c6b44: d20f 1f84 | 0000 0000 | 0085 c00f | 8d2b 0b00 | 0083 c010 | 83f8 0f0f | 8df4 0600 | 003b c30f 
  0x000001c3987c6b64: 8373 0c00 | 0083 fb0e | 0f86 6a0c | 0000 83f8 | 0f0f 8361 | 0c00 0041 | ba01 0000 | 008b c84c 
  0x000001c3987c6b84: 63d9 460f | be44 1e10 

  0x000001c3987c6b8c: ;   {oop([B{0x000000070be13098})}
  0x000001c3987c6b8c: 49b9 9830 | e10b 0700 | 0000 470f | be5c 1910 | 453b c30f | 8464 0600 | 0085 c90f | 8dd3 0a00 
  0x000001c3987c6bac: 0041 8bfa 

  0x000001c3987c6bb0: ;   {oop(a 'java/lang/Class'{0x000000070be12e50} = 'com/sun/prism/impl/Disposer')}
  0x000001c3987c6bb0: 49ba 502e | e10b 0700 | 0000 458b | 4270 4585 | c00f 84d1 | 0a00 004b | 8d0c c448 | 8d5c 2470 
  0x000001c3987c6bd0: 488b 01a8 | 020f 8523 | 0000 0048 | 83c8 0148 | 8903 f048 | 0fb1 190f | 8437 0000 | 0048 2bc4 
  0x000001c3987c6bf0: 4825 07f0 | ffff 4889 | 03e9 2400 | 0000 4c8b | d048 33c0 | f04d 0fb1 | 7a3e 48c7 | 0303 0000 
  0x000001c3987c6c10: 0074 114c | 3bf8 7515 | 49ff 8286 | 0000 0048 | 33c0 7509 | 49ff 8750 | 0500 0033 | c00f 85c9 
  0x000001c3987c6c30: 0a00 0047 | 8b5c c40c 

  0x000001c3987c6c38: ; implicit exception: dispatches to 0x000001c3987c853c
  0x000001c3987c6c38: 478b 54dc 

  0x000001c3987c6c3c: ;   {metadata('java/lang/ref/ReferenceQueue')}
  0x000001c3987c6c3c: 0841 81fa | 701b 0600 | 0f85 e70a | 0000 4f8d | 14dc 458b | 4a0c 4585 | c90f 85f1 | 0e00 0048 
  0x000001c3987c6c5c: 8d44 2470 | 4883 3800 | 0f84 7900 | 0000 4c8b | 1141 f6c2 | 020f 8462 | 0000 0049 | 83ba 8600 
  0x000001c3987c6c7c: 0000 0074 | 0949 ff8a | 8600 0000 | eb4b 498b | 8296 0000 | 0049 0b82 | 8e00 0000 | 750a 49c7 
  0x000001c3987c6c9c: 423e 0000 | 0000 eb3d | 4983 ba9e | 0000 0000 | 7422 4833 | c049 c742 | 3e00 0000 | 00f0 8304 
  0x000001c3987c6cbc: 2400 4983 | ba9e 0000 | 0000 750d | f04d 0fb1 | 7a3e 7505 | 83c8 01eb | 0ca8 00eb | 084c 8b10 
  0x000001c3987c6cdc: f04c 0fb1 | 1175 0a49 | ff8f 5005 | 0000 4533 | d20f 8561 

  0x000001c3987c6cf0: ;   {oop(a 'java/lang/Class'{0x000000070be12e50} = 'com/sun/prism/impl/Disposer')}
  0x000001c3987c6cf0: 0a00 0049 | ba50 2ee1 | 0b07 0000 | 0041 8b6a | 7085 ed0f | 84a7 0900 | 004d 8d04 | ec48 8d5c 
  0x000001c3987c6d10: 2470 498b | 00a8 020f | 8523 0000 | 0048 83c8 | 0148 8903 | f049 0fb1 | 180f 8437 | 0000 0048 
  0x000001c3987c6d30: 2bc4 4825 | 07f0 ffff | 4889 03e9 | 2400 0000 | 4c8b d048 | 33c0 f04d | 0fb1 7a3e | 48c7 0303 
  0x000001c3987c6d50: 0000 0074 | 114c 3bf8 | 7515 49ff | 8286 0000 | 0048 33c0 | 7509 49ff | 8750 0500 | 0033 c00f 
  0x000001c3987c6d70: 8501 0a00 | 0045 8b5c | ec14 478b | 5cdc 1045 | 85db 0f85 | ec0d 0000 | 488d 4424 | 7048 8338 
  0x000001c3987c6d90: 000f 8479 | 0000 004d | 8b10 41f6 | c202 0f84 | 6200 0000 | 4983 ba86 | 0000 0000 | 7409 49ff 
  0x000001c3987c6db0: 8a86 0000 | 00eb 4b49 | 8b82 9600 | 0000 490b | 828e 0000 | 0075 0a49 | c742 3e00 | 0000 00eb 
  0x000001c3987c6dd0: 3d49 83ba | 9e00 0000 | 0074 2248 | 33c0 49c7 | 423e 0000 | 0000 f083 | 0424 0049 | 83ba 9e00 
  0x000001c3987c6df0: ;   {no_reloc}
  0x000001c3987c6df0: 0000 0075 | 0df0 4d0f | b17a 3e75 | 0583 c801 | eb0c a800 | eb08 4c8b | 10f0 4d0f | b110 750a 
  0x000001c3987c6e10: 49ff 8f50 | 0500 0045 | 33d2 0f85 | 8209 0000 | 4c8b 4424 | 2045 8b50 | 2847 8b5c | d46c 478b 
  0x000001c3987c6e30: 54dc 3845 | 85d2 0f84 | 8c08 0000 | 4533 db47 | 875c d40c | 458b 5830 

  0x000001c3987c6e48: ; implicit exception: dispatches to 0x000001c3987c890c
  0x000001c3987c6e48: 478b 54dc 

  0x000001c3987c6e4c: ;   {metadata('com/sun/prism/d3d/D3DResourceFactory')}
  0x000001c3987c6e4c: 0841 81fa | 0068 0e00 | 0f85 6d09 

  0x000001c3987c6e58: ;   {oop(a 'com/sun/prism/d3d/D3DVramPool'{0x000000070be17160})}
  0x000001c3987c6e58: 0000 49ba | 6071 e10b | 0700 0000 | 458b 5234 

  0x000001c3987c6e68: ; implicit exception: dispatches to 0x000001c3987c859c
  0x000001c3987c6e68: 478b 44d4 | 1845 85c0 | 0f84 c200 | 0000 4b8d | 1cc4 4b8d | 34d4 eb28 | 41ff c045 | 8943 1444 
  0x000001c3987c6e88: 8b53 184d | 8b9f 5804 

  0x000001c3987c6e90: ; ImmutableOopMap {r10=NarrowOop rbx=Oop [40]=Oop }
                      ;*goto {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.impl.BaseResourcePool::freeDisposalRequestedAndCheckResources@119 (line 302)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@90 (line 127)
                      ;   {poll}
  0x000001c3987c6e90: 0000 4185 | 0345 85d2 | 0f84 9a00 | 0000 49c1 | e203 488b | f349 8bda | 448b 5b0c 

  0x000001c3987c6eac: ; implicit exception: dispatches to 0x000001c3987c82ac
  0x000001c3987c6eac: 478b 6cdc | 0c41 807f | 4000 0f85 | fb03 0000 

  0x000001c3987c6ebc: ; implicit exception: dispatches to 0x000001c3987c82c0
  0x000001c3987c6ebc: 478b 5cec 

  0x000001c3987c6ec0: ;   {metadata('com/sun/prism/d3d/D3DTextureResource')}
  0x000001c3987c6ec0: 0841 81fb | 9079 2100 | 0f85 7613 | 0000 4f8d | 1cec 450f | b643 1a45 | 85c0 0f85 | 7006 0000 
  0x000001c3987c6ee0: 458b 531c 

  0x000001c3987c6ee4: ; implicit exception: dispatches to 0x000001c3987c830c
  0x000001c3987c6ee4: 478b 4cd4 

  0x000001c3987c6ee8: ;   {metadata('com/sun/prism/d3d/D3DTextureData')}
  0x000001c3987c6ee8: 0841 81f9 | 4822 2100 | 0f85 6e13 | 0000 49c1 | e203 4d8b | 5210 4d85 | d20f 846d | 0600 0045 
  0x000001c3987c6f08: 0fb6 4318 | 4585 c00f | 8572 ffff | ff45 8b43 | 0c45 85c0 | 0f8f 8a06 | 0000 458b | 4314 4181 
  0x000001c3987c6f28: f800 0400 | 000f 8c4d | ffff ffe9 | 4fff ffff 

  0x000001c3987c6f38: ;   {oop(a 'java/util/concurrent/locks/ReentrantLock'{0x000000070bef4218})}
  0x000001c3987c6f38: 49ba 1842 | ef0b 0700 | 0000 418b | 6a0c 458b | 54ec 1045 | 8b44 ec0c | 4d8b d849 | c1e3 034c 
  0x000001c3987c6f58: 8b4c 2428 | 4d3b d90f | 8544 0c00 | 0041 8d72 | ff41 83fa | 010f 85dd | 0300 0041 | 807f 4000 
  0x000001c3987c6f78: 0f85 8a04 | 0000 4589 | 64ec 0c41 | 8974 ec10 | f083 4424 | c000 85ff | 740e 458b | 54ec 1445 
  0x000001c3987c6f98: 85d2 0f85 | d901 0000 | 4881 c480 | 0000 005d 

  0x000001c3987c6fa8: ;   {poll_return}
  0x000001c3987c6fa8: 493b a750 | 0400 000f | 8747 1c00 | 00c3 6666 | 0f1f 8400 | 0000 0000 | 41ff c045 | 8943 1444 
  0x000001c3987c6fc8: 8b56 184d | 8b9f 5804 

  0x000001c3987c6fd0: ; ImmutableOopMap {r10=NarrowOop rsi=Oop [40]=Oop }
                      ;*goto {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.impl.BaseResourcePool::freeDisposalRequestedAndCheckResources@119 (line 302)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@523 (line 127)
                      ;   {poll}
  0x000001c3987c6fd0: 0000 4185 | 0345 85d2 | 0f84 9a00 | 0000 49c1 | e203 488b | fe49 8bf2 | 448b 5e0c 

  0x000001c3987c6fec: ; implicit exception: dispatches to 0x000001c3987c82dc
  0x000001c3987c6fec: 438b 5cdc | 0c41 807f | 4000 0f85 | 2203 0000 

  0x000001c3987c6ffc: ; implicit exception: dispatches to 0x000001c3987c82f0
  0x000001c3987c6ffc: 458b 5cdc 

  0x000001c3987c7000: ;   {metadata('com/sun/prism/d3d/D3DTextureResource')}
  0x000001c3987c7000: 0841 81fb | 9079 2100 | 0f85 1612 | 0000 4d8d | 1cdc 450f | b653 1a45 | 85d2 0f85 | c905 0000 
  0x000001c3987c7020: 458b 531c 

  0x000001c3987c7024: ; implicit exception: dispatches to 0x000001c3987c8330
  0x000001c3987c7024: 478b 4cd4 

  0x000001c3987c7028: ;   {metadata('com/sun/prism/d3d/D3DTextureData')}
  0x000001c3987c7028: 0841 81f9 | 4822 2100 | 0f85 5212 | 0000 49c1 | e203 4d8b | 5210 4d85 | d20f 84c9 | 0500 0045 
  0x000001c3987c7048: 0fb6 4318 | 4585 c00f | 8572 ffff | ff45 8b43 | 0c45 85c0 | 0f8f e605 | 0000 458b | 4314 4181 
  0x000001c3987c7068: f800 0400 | 000f 8c4d | ffff ffe9 | 4fff ffff 

  0x000001c3987c7078: ;   {oop(a 'java/util/concurrent/locks/ReentrantLock'{0x000000070bef4218})}
  0x000001c3987c7078: 49ba 1842 | ef0b 0700 | 0000 418b | 5a0c 458b | 54dc 1041 | 8b6c dc0c | 4c8b dd49 | c1e3 034c 
  0x000001c3987c7098: 8b44 2428 | 4d3b d80f | 854b 0f00 | 0041 8d72 | ff41 83fa | 010f 85a4 | 0200 0041 | 807f 4000 
  0x000001c3987c70b8: 0f85 3504 | 0000 4589 | 64dc 0c44 | 8b54 2420 | 4189 74dc | 10f0 8344 | 24c0 0045 | 85d2 0f84 
  0x000001c3987c70d8: c4fe ffff | 458b 5cdc | 1445 85db | 0f84 b6fe | ffff 478b | 44dc 1445 | 85c0 0f84 | a8fe ffff 
  0x000001c3987c70f8: 478b 54c4 | 0c45 85d2 | 0f84 9afe | ffff 438b | 44c4 0c44 | 8bd8 4183 | e3fe f047 | 0fb1 5cc4 
  0x000001c3987c7118: 0c40 0f94 | c540 0fb6 | ed85 ed0f | 843f 1000 | 0043 8b6c | c418 458b | 5cec 0849 | ba00 0000 
  0x000001c3987c7138: 0008 0000 | 004d 03d3 | 4d8b 5240 

  0x000001c3987c7144: ;   {metadata('java/lang/BaseVirtualThread')}
  0x000001c3987c7144: 49bb d07f | 0400 0800 | 0000 4d3b | d30f 84e5 | 0f00 004d 

  0x000001c3987c7158: ;   {oop(a 'jdk/internal/misc/Unsafe'{0x0000000706237b68})}
  0x000001c3987c7158: 8d04 ec48 | ba68 7b23 | 0607 0000 

  0x000001c3987c7164: ;   {optimized virtual_call}
  0x000001c3987c7164: 0066 90e8 

  0x000001c3987c7168: ; ImmutableOopMap {}
                      ;*invokevirtual unpark {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.concurrent.locks.LockSupport::unpark@22 (line 181)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::signalNext@30 (line 645)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::release@12 (line 1060)
                      ; - java.util.concurrent.locks.ReentrantLock::unlock@5 (line 494)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@531 (line 130)
  0x000001c3987c7168: 1479 92ff 

  0x000001c3987c716c: ;   {other}
  0x000001c3987c716c: 0f1f 8400 | 5c19 000f | e927 feff | ff47 8b4c | d414 4585 | c90f 8419 | feff ff47 | 8b5c cc0c 
  0x000001c3987c718c: 4585 db0f | 840b feff | ff43 8b44 | cc0c 448b | d041 83e2 | fef0 470f | b154 cc0c | 400f 94c5 
  0x000001c3987c71ac: 400f b6ed | 85ed 0f84 | 980f 0000 | 438b 6ccc | 1845 8b54 | ec08 49bb | 0000 0000 | 0800 0000 
  0x000001c3987c71cc: 4d03 da4d 

  0x000001c3987c71d0: ;   {metadata('java/lang/BaseVirtualThread')}
  0x000001c3987c71d0: 8b53 4049 | bbd0 7f04 | 0008 0000 | 004d 3bd3 | 0f84 420f | 0000 4d8d 

  0x000001c3987c71e8: ;   {oop(a 'jdk/internal/misc/Unsafe'{0x0000000706237b68})}
  0x000001c3987c71e8: 04ec 48ba | 687b 2306 | 0700 0000 

  0x000001c3987c71f4: ;   {optimized virtual_call}
  0x000001c3987c71f4: 6666 90e8 

  0x000001c3987c71f8: ; ImmutableOopMap {}
                      ;*invokevirtual unpark {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.concurrent.locks.LockSupport::unpark@22 (line 181)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::signalNext@30 (line 645)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::release@12 (line 1060)
                      ; - java.util.concurrent.locks.ReentrantLock::unlock@5 (line 494)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@98 (line 130)
  0x000001c3987c71f8: 8478 92ff 

  0x000001c3987c71fc: ;   {other}
  0x000001c3987c71fc: 0f1f 8400 | ec19 0010 | e997 fdff | ff41 b80f | 0000 0044 | 2bc0 4533 | c983 f80f | 450f 4fc1 
  0x000001c3987c721c: 4181 f8e8 | 0300 0041 | b9e8 0300 | 0045 0f47 | c144 03c0 | ffc1 413b | c80f 8c48 | f9ff ff4d 
  0x000001c3987c723c: 8b9f 5804 

  0x000001c3987c7240: ; ImmutableOopMap {rsi=Oop [32]=Oop [40]=Oop }
                      ;*goto {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) jdk.internal.util.ArraysSupport::mismatch@98 (line 401)
                      ; - java.lang.String::startsWith@70 (line 2297)
                      ; - java.lang.String::startsWith@3 (line 2327)
                      ; - com.sun.prism.impl.Disposer::cleanUp@8 (line 131)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@40 (line 117)
                      ;   {poll}
  0x000001c3987c7240: 0000 4185 | 0383 f90f | 0f8d dd02 | 0000 8bc1 | e92c f9ff | ffbf 0100 | 0000 e951 | f9ff ff41 
  0x000001c3987c7260: bb0f 0000 | 0044 2bd9 | 4533 c083 | f90f 450f | 4fd8 4181 | fbe8 0300 | 0041 b9e8 | 0300 0045 
  0x000001c3987c7280: 0f47 d944 | 03d9 ffc0 | 413b c30f | 8cf7 f4ff | ff4d 8b9f 

  0x000001c3987c7294: ; ImmutableOopMap {rsi=Oop [32]=Oop [40]=Oop }
                      ;*goto {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) jdk.internal.util.ArraysSupport::mismatch@98 (line 401)
                      ; - java.lang.String::startsWith@70 (line 2297)
                      ; - java.lang.String::startsWith@3 (line 2327)
                      ; - com.sun.prism.impl.Disposer::cleanUp@8 (line 131)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@473 (line 117)
  0x000001c3987c7294: 5804 0000 

  0x000001c3987c7298: ;   {poll}
  0x000001c3987c7298: 4185 0383 | f80f 0f8c | e2f4 ffff | 458b dae9 | 09f5 ffff | 41bb 0100 | 0000 e9fe | f4ff ff45 
  0x000001c3987c72b8: 85ed 0f84 | fcfb ffff | 4d8b 5728 | 498b cd48 | c1e1 034d | 85d2 0f84 | 5f02 0000 | 4d8b 5f38 
  0x000001c3987c72d8: 4b89 4c13 | f849 83c2 | f84d 8957 | 28e9 d2fb | ffff 458b | 5cdc 0c4d | 8bd3 49c1 | e203 4c3b 
  0x000001c3987c72f8: d70f 85e6 | 0000 0041 | 8b6c dc10 | ffc5 85ed | 0f8c 720e | 0000 4189 | 6cdc 10f0 | 8344 24c0 
  0x000001c3987c7318: 00e9 0cec | ffff 85db | 0f84 d6fc | ffff 4d8b | 5728 488b | cb48 c1e1 | 034d 85d2 | 0f84 9202 
  0x000001c3987c7338: 0000 4d8b | 5f38 4b89 | 4c13 f849 | 83c2 f84d | 8957 28e9 | acfc ffff | 33ff e92c | fcff ff45 
  0x000001c3987c7358: 33d2 e969 | fdff ff45 | 8b54 dc0c | 4585 d20f | 8485 ebff | ff4d 8b5f | 2849 8bca | 48c1 e103 
  0x000001c3987c7378: 4d85 db0f | 84cf 0400 | 004d 8b57 | 384b 894c | 1af8 4983 | c3f8 4d89 | 5f28 e95b 

  0x000001c3987c7394: ;   {no_reloc}
  0x000001c3987c7394: ebff ff4d | 8b57 484d | 8b5f 58f0 | 8344 24c0 | 0080 3900 | 0f84 7ceb | ffff 4488 | 214d 85d2 
  0x000001c3987c73b4: 751d 498b | d749 ba40 | f66c 09f8 | 7f00 0041 

  0x000001c3987c73c4: ;   {other}
  0x000001c3987c73c4: ffd2 0f1f | 8400 0000 | 0000 e957 | ebff ff4b | 894c 13f8 | 4983 c2f8 | 4d89 5748 | e945 ebff 
  0x000001c3987c73e4: ff48 8bef | 488b d641 | b801 0000 

  0x000001c3987c73f0: ;   {optimized virtual_call}
  0x000001c3987c73f0: 0066 90e8 

  0x000001c3987c73f4: ; ImmutableOopMap {rbp=Oop [32]=Oop }
                      ;*invokevirtual acquire {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.concurrent.locks.ReentrantLock$Sync::lock@9 (line 153)
                      ; - java.util.concurrent.locks.ReentrantLock::lock@4 (line 322)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@3 (line 45)
  0x000001c3987c73f4: 8876 92ff 

  0x000001c3987c73f8: ;   {other}
  0x000001c3987c73f8: 0f1f 8400 | e81b 0013 | 488b fde9 | 22eb ffff | 458b 5cec | 0c45 85db | 0f84 68fb | ffff 4d8b 
  0x000001c3987c7418: 5728 498b | cb48 c1e1 | 034d 85d2 | 0f84 6207 | 0000 4d8b | 5f38 4b89 | 4c13 f849 | 83c2 f84d 
  0x000001c3987c7438: 8957 28e9 | 3efb ffff | 4c8b 5424 | 5845 8b5a | 4445 85db | 0f84 7def | ffff 4d8b | 5728 498b 
  0x000001c3987c7458: cb48 c1e1 | 034d 85d2 | 0f84 fe07 | 0000 4d8b | 5f38 4b89 | 4c13 f849 | 83c2 f84d | 8957 28e9 
  0x000001c3987c7478: 53ef ffff | 4d8b 5758 | 4d8b 5f48 | f083 4424 | c000 4180 | 3800 7452 | 4588 204d | 85db 740f 
  0x000001c3987c7498: 4f89 441a | f849 83c3 | f84d 895f | 48eb 3bc5 | f97e fec5 | f97e f5c5 | f97e dbc5 | f97e d749 
  0x000001c3987c74b8: 8bc8 498b | d749 ba40 | f66c 09f8 | 7f00 0041 

  0x000001c3987c74c8: ;   {other}
  0x000001c3987c74c8: ffd2 0f1f | 8400 0000 | 0000 c5f9 | 6ed7 c5f9 | 6edb c5f9 | 6ef5 c5f9 | 6efe 4c8b | 5424 4045 
  0x000001c3987c74e8: 8b52 2041 | 8bfa e941 | efff ff45 | 8b54 dc0c | 4585 d20f | 84bd fbff | ff4d 8b5f | 2849 8bca 
  0x000001c3987c7508: 48c1 e103 | 4d85 db0f | 84c3 0700 | 004d 8b57 | 384b 894c | 1af8 4983 | c3f8 4d89 | 5f28 e993 
  0x000001c3987c7528: fbff ff41 | 8bfa e97d | f6ff ff49 | 8bd7 49ba | 60f6 6c09 | f87f 0000 

  0x000001c3987c7540: ;   {other}
  0x000001c3987c7540: 41ff d20f | 1f84 0000 | 0000 00e9 | 6cf9 ffff | ba45 ffff | ff48 8bee | 4889 5c24 | 204c 895c 
  0x000001c3987c7560: 2430 4489 

  0x000001c3987c7564: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c7564: 4424 38e8 

  0x000001c3987c7568: ; ImmutableOopMap {rbp=Oop [32]=Oop [48]=Oop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.impl.ManagedResource::_isgone@10 (line 36)
                      ; - com.sun.prism.impl.BaseResourcePool::freeDisposalRequestedAndCheckResources@27 (line 283)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@90 (line 127)
  0x000001c3987c7568: 94d0 92ff 

  0x000001c3987c756c: ;   {other}
  0x000001c3987c756c: 0f1f 8400 | 5c1d 0014 | 4533 c04d | 3bd0 bdff | ffff ff7c | 0840 0f95 | c540 0fb6 | edba 45ff 
  0x000001c3987c758c: ffff 4889 | 7424 2048 | 895c 2428 | 4c89 5c24 

  0x000001c3987c759c: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c759c: 3066 90e8 

  0x000001c3987c75a0: ; ImmutableOopMap {[32]=Oop [40]=Oop [48]=Oop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.d3d.D3DTextureResource::isValid@19 (line 46)
                      ; - com.sun.prism.impl.ManagedResource::_isgone@30 (line 42)
                      ; - com.sun.prism.impl.BaseResourcePool::freeDisposalRequestedAndCheckResources@27 (line 283)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@90 (line 127)
  0x000001c3987c75a0: 5cd0 92ff 

  0x000001c3987c75a4: ;   {other}
  0x000001c3987c75a4: 0f1f 8400 | 941d 0015 | ba45 ffff | ff48 8beb | 4c89 5c24 | 2044 8944 

  0x000001c3987c75bc: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c75bc: 2428 90e8 

  0x000001c3987c75c0: ; ImmutableOopMap {rbp=Oop [32]=Oop }
                      ;*ifle {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.impl.ManagedResource::isLocked@4 (line 87)
                      ; - com.sun.prism.impl.BaseResourcePool::freeDisposalRequestedAndCheckResources@68 (line 289)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@90 (line 127)
  0x000001c3987c75c0: 3cd0 92ff 

  0x000001c3987c75c4: ;   {other}
  0x000001c3987c75c4: 0f1f 8400 | b41d 0016 | 498b d749 | ba60 f66c | 09f8 7f00 | 0041 ffd2 

  0x000001c3987c75dc: ;   {other}
  0x000001c3987c75dc: 0f1f 8400 | 0000 0000 | e913 faff | ffba 45ff | ffff 488b | ef48 8974 | 2420 4c89 | 5c24 3044 
  0x000001c3987c75fc: 8954 2438 

  0x000001c3987c7600: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c7600: 6666 90e8 

  0x000001c3987c7604: ; ImmutableOopMap {rbp=Oop [32]=Oop [48]=Oop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.impl.ManagedResource::_isgone@10 (line 36)
                      ; - com.sun.prism.impl.BaseResourcePool::freeDisposalRequestedAndCheckResources@27 (line 283)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@523 (line 127)
  0x000001c3987c7604: f8cf 92ff 

  0x000001c3987c7608: ;   {other}
  0x000001c3987c7608: 0f1f 8400 | f81d 0017 | 4533 c04d | 3bd0 bdff | ffff ff7c | 0840 0f95 | c540 0fb6 | edba 45ff 
  0x000001c3987c7628: ffff 4889 | 7c24 2048 | 8974 2428 | 4c89 5c24 

  0x000001c3987c7638: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c7638: 3066 90e8 

  0x000001c3987c763c: ; ImmutableOopMap {[32]=Oop [40]=Oop [48]=Oop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.d3d.D3DTextureResource::isValid@19 (line 46)
                      ; - com.sun.prism.impl.ManagedResource::_isgone@30 (line 42)
                      ; - com.sun.prism.impl.BaseResourcePool::freeDisposalRequestedAndCheckResources@27 (line 283)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@523 (line 127)
  0x000001c3987c763c: c0cf 92ff 

  0x000001c3987c7640: ;   {other}
  0x000001c3987c7640: 0f1f 8400 | 301e 0018 | ba45 ffff | ff48 8bee | 4c89 5c24 | 2044 8944 

  0x000001c3987c7658: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c7658: 2428 90e8 

  0x000001c3987c765c: ; ImmutableOopMap {rbp=Oop [32]=Oop }
                      ;*ifle {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.impl.ManagedResource::isLocked@4 (line 87)
                      ; - com.sun.prism.impl.BaseResourcePool::freeDisposalRequestedAndCheckResources@68 (line 289)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@523 (line 127)
  0x000001c3987c765c: a0cf 92ff 

  0x000001c3987c7660: ;   {other}
  0x000001c3987c7660: 0f1f 8400 | 501e 0019 | baf6 ffff | ff48 8b6c 

  0x000001c3987c7670: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c7670: 2420 90e8 

  0x000001c3987c7674: ; ImmutableOopMap {rbp=Oop }
                      ;*invokevirtual lock {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.concurrent.locks.ReentrantLock::lock@4 (line 322)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@3 (line 45)
  0x000001c3987c7674: 88cf 92ff 

  0x000001c3987c7678: ;   {other}
  0x000001c3987c7678: 0f1f 8400 | 681e 001a | ba45 ffff | ff48 8b6c 

  0x000001c3987c7688: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c7688: 2420 90e8 

  0x000001c3987c768c: ; ImmutableOopMap {rbp=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.impl.Disposer::cleanUp@11 (line 131)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@40 (line 117)
  0x000001c3987c768c: 70cf 92ff 

  0x000001c3987c7690: ;   {other}
  0x000001c3987c7690: 0f1f 8400 | 801e 001b | baf6 ffff | ff48 8b6c 

  0x000001c3987c76a0: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c76a0: 2420 90e8 

  0x000001c3987c76a4: ; ImmutableOopMap {rbp=Oop }
                      ;*invokevirtual disposeUnreachables {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.Disposer::cleanUp@26 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@40 (line 117)
  0x000001c3987c76a4: 58cf 92ff 

  0x000001c3987c76a8: ;   {other}
  0x000001c3987c76a8: 0f1f 8400 | 981e 001c | baf6 ffff | ff48 8b6c 

  0x000001c3987c76b8: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c76b8: 2420 90e8 

  0x000001c3987c76bc: ; ImmutableOopMap {rbp=Oop }
                      ;*invokevirtual processDisposalQueue {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.Disposer::cleanUp@32 (line 136)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@40 (line 117)
  0x000001c3987c76bc: 40cf 92ff 

  0x000001c3987c76c0: ;   {other}
  0x000001c3987c76c0: 0f1f 8400 | b01e 001d | baf6 ffff | ff49 8be8 

  0x000001c3987c76d0: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c76d0: 6666 90e8 

  0x000001c3987c76d4: ; ImmutableOopMap {rbp=Oop }
                      ;*invokevirtual getAndSet {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.GlassScene::setPainting@5 (line 293)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@69 (line 124)
  0x000001c3987c76d4: 28cf 92ff 

  0x000001c3987c76d8: ;   {other}
  0x000001c3987c76d8: 0f1f 8400 | c81e 001e | bae4 ffff | ff48 8b6c | 2420 897c 

  0x000001c3987c76ec: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c76ec: 2424 90e8 

  0x000001c3987c76f0: ; ImmutableOopMap {rbp=Oop [36]=NarrowOop }
                      ;*baload {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.internal.util.ArraysSupport::mismatch@12 (line 389)
                      ; - java.lang.String::startsWith@70 (line 2297)
                      ; - java.lang.String::startsWith@3 (line 2327)
                      ; - com.sun.prism.impl.Disposer::cleanUp@8 (line 131)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@40 (line 117)
  0x000001c3987c76f0: 0ccf 92ff 

  0x000001c3987c76f4: ;   {other}
  0x000001c3987c76f4: 0f1f 8400 | e41e 001f | 4889 4c24 | 3844 8944 | 2430 8bef | 488b d14c | 8d44 2470 

  0x000001c3987c7710: ;   {runtime_call _complete_monitor_locking_Java}
  0x000001c3987c7710: 6666 90e8 

  0x000001c3987c7714: ; ImmutableOopMap {[32]=Oop [40]=Oop [48]=NarrowOop [56]=Oop }
                      ;*synchronization entry
                      ; - com.sun.prism.impl.Disposer::disposeUnreachables@-1 (line 173)
                      ; - com.sun.prism.impl.Disposer::cleanUp@26 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@40 (line 117)
  0x000001c3987c7714: 68eb 9eff 

  0x000001c3987c7718: ;   {other}
  0x000001c3987c7718: 0f1f 8400 | 081f 0020 | 8bfd 448b | 4424 3048 | 8b4c 2438 | e902 f5ff | ffba deff | ffff 488b 
  0x000001c3987c7738: 6c24 2044 | 895c 2424 | 4489 4424 

  0x000001c3987c7744: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c7744: 2866 90e8 

  0x000001c3987c7748: ; ImmutableOopMap {rbp=Oop [36]=NarrowOop [40]=NarrowOop }
                      ;*invokevirtual poll {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.Disposer::disposeUnreachables@4 (line 173)
                      ; - com.sun.prism.impl.Disposer::cleanUp@26 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@40 (line 117)
  0x000001c3987c7748: b4ce 92ff 

  0x000001c3987c774c: ;   {other}
  0x000001c3987c774c: 0f1f 8400 | 3c1f 0021 | 488d 5424 | 704d 8bc7 | 49ba 50df | ad09 f87f | 0000 41ff 

  0x000001c3987c7768: ;   {other}
  0x000001c3987c7768: d20f 1f84 | 0000 0000 | 00e9 7df5 | ffff 4c89 | 4424 3889 | 7c24 3049 | 8bd0 4c8d 

  0x000001c3987c7784: ;   {runtime_call _complete_monitor_locking_Java}
  0x000001c3987c7784: 4424 70e8 

  0x000001c3987c7788: ; ImmutableOopMap {rbp=NarrowOop [32]=Oop [40]=Oop [56]=Oop }
                      ;*synchronization entry
                      ; - com.sun.prism.impl.Disposer::processDisposalQueue@-1 (line 189)
                      ; - com.sun.prism.impl.Disposer::cleanUp@32 (line 136)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@40 (line 117)
  0x000001c3987c7788: f4ea 9eff 

  0x000001c3987c778c: ;   {other}
  0x000001c3987c778c: 0f1f 8400 | 7c1f 0022 | 8b7c 2430 | 4c8b 4424 | 38e9 d3f5 | ffff 498b | c848 8d54 | 2470 4d8b 
  0x000001c3987c77ac: c749 ba50 | dfad 09f8 | 7f00 0041 

  0x000001c3987c77b8: ;   {other}
  0x000001c3987c77b8: ffd2 0f1f | 8400 0000 | 0000 e959 | f6ff ffba | deff ffff 

  0x000001c3987c77cc: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c77cc: 418b ebe8 

  0x000001c3987c77d0: ; ImmutableOopMap {rbp=NarrowOop }
                      ;*invokeinterface getTextureResourcePool {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@84 (line 127)
  0x000001c3987c77d0: 2cce 92ff 

  0x000001c3987c77d4: ;   {other}
  0x000001c3987c77d4: 0f1f 8400 | c41f 0023 | ba76 ffff | ff48 8b6c | 2420 897c | 2420 8944 

  0x000001c3987c77ec: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c77ec: 2428 90e8 

  0x000001c3987c77f0: ; ImmutableOopMap {rbp=Oop [32]=NarrowOop }
                      ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) jdk.internal.util.ArraysSupport::mismatch@74 (line 401)
                      ; - java.lang.String::startsWith@70 (line 2297)
                      ; - java.lang.String::startsWith@3 (line 2327)
                      ; - com.sun.prism.impl.Disposer::cleanUp@8 (line 131)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@40 (line 117)
  0x000001c3987c77f0: 0cce 92ff 

  0x000001c3987c77f4: ;   {other}
  0x000001c3987c77f4: 0f1f 8400 | e41f 0024 | ba45 ffff | ff49 8be9 | 4489 4424 

  0x000001c3987c7808: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c7808: 2866 90e8 

  0x000001c3987c780c: ; ImmutableOopMap {rbp=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.tk.quantum.SceneState::isValid@18 (line 86)
                      ; - com.sun.javafx.tk.quantum.ViewPainter::validateStageGraphics@4 (line 427)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@13 (line 52)
  0x000001c3987c780c: f0cd 92ff 

  0x000001c3987c7810: ;   {other}
  0x000001c3987c7810: 0f1f 8400 | 0020 0025 | ba45 ffff | ff49 8be9 | 4489 4424 

  0x000001c3987c7824: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c7824: 2866 90e8 

  0x000001c3987c7828: ; ImmutableOopMap {rbp=Oop }
                      ;*ifle {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.tk.quantum.SceneState::isValid@25 (line 86)
                      ; - com.sun.javafx.tk.quantum.ViewPainter::validateStageGraphics@4 (line 427)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@13 (line 52)
  0x000001c3987c7828: d4cd 92ff 

  0x000001c3987c782c: ;   {other}
  0x000001c3987c782c: 0f1f 8400 | 1c20 0026 | ba45 ffff | ff49 8be9 | 4489 5c24 

  0x000001c3987c7840: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c7840: 2866 90e8 

  0x000001c3987c7844: ; ImmutableOopMap {rbp=Oop }
                      ;*ifle {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.tk.quantum.SceneState::isValid@32 (line 86)
                      ; - com.sun.javafx.tk.quantum.ViewPainter::validateStageGraphics@4 (line 427)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@13 (line 52)
  0x000001c3987c7844: b8cd 92ff 

  0x000001c3987c7848: ;   {other}
  0x000001c3987c7848: 0f1f 8400 | 3820 0027 | 498b d749 | ba60 f66c | 09f8 7f00 | 0041 ffd2 

  0x000001c3987c7860: ;   {other}
  0x000001c3987c7860: 0f1f 8400 | 0000 0000 | e985 e6ff | ffba 45ff | ffff 498b | e944 895c 

  0x000001c3987c7878: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c7878: 2428 90e8 

  0x000001c3987c787c: ; ImmutableOopMap {rbp=Oop [40]=NarrowOop }
                      ;*ifnull {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.tk.quantum.SceneState::isValid@4 (line 86)
                      ; - com.sun.javafx.tk.quantum.ViewPainter::validateStageGraphics@4 (line 427)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@13 (line 52)
  0x000001c3987c787c: 80cd 92ff 

  0x000001c3987c7880: ;   {other}
  0x000001c3987c7880: 0f1f 8400 | 7020 0028 | ba45 ffff | ff49 8be9 | 4489 4424 

  0x000001c3987c7894: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c7894: 2066 90e8 

  0x000001c3987c7898: ; ImmutableOopMap {rbp=Oop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.tk.quantum.ViewPainter::validateStageGraphics@51 (line 436)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@13 (line 52)
  0x000001c3987c7898: 64cd 92ff 

  0x000001c3987c789c: ;   {other}
  0x000001c3987c789c: 0f1f 8400 | 8c20 0029 | baf6 ffff | ff48 8b6c 

  0x000001c3987c78ac: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c78ac: 2420 90e8 

  0x000001c3987c78b0: ; ImmutableOopMap {rbp=Oop }
                      ;*invokevirtual getNativeFrameBuffer {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.PresentableState::lock@19 (line 286)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@106 (line 65)
  0x000001c3987c78b0: 4ccd 92ff 

  0x000001c3987c78b4: ;   {other}
  0x000001c3987c78b4: 0f1f 8400 | a420 002a | ba5e ffff | ff48 8b6c 

  0x000001c3987c78c4: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c78c4: 2420 90e8 

  0x000001c3987c78c8: ; ImmutableOopMap {rbp=Oop }
                      ;*invokevirtual getDoPresent {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@441 (line 106)
  0x000001c3987c78c8: 34cd 92ff 

  0x000001c3987c78cc: ;   {other}
  0x000001c3987c78cc: 0f1f 8400 | bc20 002b | ba45 ffff | ff48 8b6c 

  0x000001c3987c78dc: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c78dc: 2420 90e8 

  0x000001c3987c78e0: ; ImmutableOopMap {rbp=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.impl.Disposer::cleanUp@11 (line 131)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@473 (line 117)
  0x000001c3987c78e0: 1ccd 92ff 

  0x000001c3987c78e4: ;   {other}
  0x000001c3987c78e4: 0f1f 8400 | d420 002c | baf6 ffff | ff48 8b6c 

  0x000001c3987c78f4: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c78f4: 2420 90e8 

  0x000001c3987c78f8: ; ImmutableOopMap {rbp=Oop }
                      ;*invokevirtual disposeUnreachables {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.Disposer::cleanUp@26 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@473 (line 117)
  0x000001c3987c78f8: 04cd 92ff 

  0x000001c3987c78fc: ;   {other}
  0x000001c3987c78fc: 0f1f 8400 | ec20 002d | baf6 ffff | ff48 8b6c 

  0x000001c3987c790c: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c790c: 2420 90e8 

  0x000001c3987c7910: ; ImmutableOopMap {rbp=Oop }
                      ;*invokevirtual processDisposalQueue {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.Disposer::cleanUp@32 (line 136)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@473 (line 117)
  0x000001c3987c7910: eccc 92ff 

  0x000001c3987c7914: ;   {other}
  0x000001c3987c7914: 0f1f 8400 | 0421 002e | baf6 ffff 

  0x000001c3987c7920: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c7920: ff66 90e8 

  0x000001c3987c7924: ; ImmutableOopMap {rbp=Oop }
                      ;*invokevirtual getAndSet {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.GlassScene::setPainting@5 (line 293)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@502 (line 124)
  0x000001c3987c7924: d8cc 92ff 

  0x000001c3987c7928: ;   {other}
  0x000001c3987c7928: 0f1f 8400 | 1821 002f | bade ffff 

  0x000001c3987c7934: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c7934: ff66 90e8 

  0x000001c3987c7938: ; ImmutableOopMap {rbp=NarrowOop [32]=Oop }
                      ;*invokeinterface isDeviceReady {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@136 (line 71)
  0x000001c3987c7938: c4cc 92ff 

  0x000001c3987c793c: ;   {other}
  0x000001c3987c793c: 0f1f 8400 | 2c21 0030 | bade ffff | ff48 8b6c | 2420 4489 | 4c24 2044 | 8954 2424 

  0x000001c3987c7958: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c7958: 6666 90e8 

  0x000001c3987c795c: ; ImmutableOopMap {rbp=Oop [32]=NarrowOop [36]=NarrowOop }
                      ;*invokeinterface lockResources {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@236 (line 77)
  0x000001c3987c795c: a0cc 92ff 

  0x000001c3987c7960: ;   {other}
  0x000001c3987c7960: 0f1f 8400 | 5021 0031 | bade ffff | ff48 8b6c | 2420 4889 | 4424 28c5 | fa11 4c24 | 30c5 fa11 
  0x000001c3987c7980: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c7980: 4424 34e8 

  0x000001c3987c7984: ; ImmutableOopMap {rbp=Oop [40]=Oop }
                      ;*invokeinterface scale {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.d3d.D3DSwapChain::createGraphics@21 (line 149)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@304 (line 88)
  0x000001c3987c7984: 78cc 92ff 

  0x000001c3987c7988: ;   {other}
  0x000001c3987c7988: 0f1f 8400 | 7821 0032 | bade ffff 

  0x000001c3987c7994: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c7994: ff66 90e8 

  0x000001c3987c7998: ; ImmutableOopMap {rbp=NarrowOop [32]=Oop [48]=NarrowOop }
                      ;*invokeinterface prepare {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@355 (line 99)
  0x000001c3987c7998: 64cc 92ff 

  0x000001c3987c799c: ;   {other}
  0x000001c3987c799c: 0f1f 8400 | 8c21 0033 | 498b d34c | 8d44 2470 

  0x000001c3987c79ac: ;   {oop([B{0x000000070be13098})}
  0x000001c3987c79ac: 48bd 9830 | e10b 0700 

  0x000001c3987c79b4: ;   {runtime_call _complete_monitor_locking_Java}
  0x000001c3987c79b4: 0000 90e8 

  0x000001c3987c79b8: ; ImmutableOopMap {rbp=Oop [56]=Derived_oop_rbp [32]=Oop [40]=Oop [48]=NarrowOop [64]=Oop }
                      ;*synchronization entry
                      ; - com.sun.javafx.tk.quantum.GlassScene::getDoPresent@-1 (line 337)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@441 (line 106)
  0x000001c3987c79b8: c4e8 9eff 

  0x000001c3987c79bc: ;   {other}
  0x000001c3987c79bc: 0f1f 8400 | ac21 0034 | e9e3 ebff | ff4d 8bd3 | 498b ca48 | 8d54 2470 | 4d8b c749 | ba50 dfad 
  0x000001c3987c79dc: 09f8 7f00 | 0041 ffd2 

  0x000001c3987c79e4: ;   {other}
  0x000001c3987c79e4: 0f1f 8400 | 0000 0000 | e963 ecff | ffba deff 

  0x000001c3987c79f4: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c79f4: ffff 90e8 

  0x000001c3987c79f8: ; ImmutableOopMap {rbp=NarrowOop [32]=Oop }
                      ;*invokeinterface present {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@451 (line 107)
  0x000001c3987c79f8: 04cc 92ff 

  0x000001c3987c79fc: ;   {other}
  0x000001c3987c79fc: 0f1f 8400 | ec21 0035 | bae4 ffff | ff48 8b6c | 2420 895c 

  0x000001c3987c7a10: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c7a10: 2424 90e8 

  0x000001c3987c7a14: ; ImmutableOopMap {rbp=Oop [36]=NarrowOop }
                      ;*baload {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.internal.util.ArraysSupport::mismatch@12 (line 389)
                      ; - java.lang.String::startsWith@70 (line 2297)
                      ; - java.lang.String::startsWith@3 (line 2327)
                      ; - com.sun.prism.impl.Disposer::cleanUp@8 (line 131)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@473 (line 117)
  0x000001c3987c7a14: e8cb 92ff 

  0x000001c3987c7a18: ;   {other}
  0x000001c3987c7a18: 0f1f 8400 | 0822 0036 | 4889 4c24 | 3844 8954 | 2430 418b | eb48 8bd1 | 4c8d 4424 

  0x000001c3987c7a34: ;   {runtime_call _complete_monitor_locking_Java}
  0x000001c3987c7a34: 7066 90e8 

  0x000001c3987c7a38: ; ImmutableOopMap {[32]=Oop [40]=Oop [48]=NarrowOop [56]=Oop }
                      ;*synchronization entry
                      ; - com.sun.prism.impl.Disposer::disposeUnreachables@-1 (line 173)
                      ; - com.sun.prism.impl.Disposer::cleanUp@26 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@473 (line 117)
  0x000001c3987c7a38: 44e8 9eff 

  0x000001c3987c7a3c: ;   {other}
  0x000001c3987c7a3c: 0f1f 8400 | 2c22 0037 | 448b dd44 | 8b54 2430 | 488b 4c24 | 38e9 e2ed | ffff bade | ffff ff44 
  0x000001c3987c7a5c: 8954 242c 

  0x000001c3987c7a60: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c7a60: 6666 90e8 

  0x000001c3987c7a64: ; ImmutableOopMap {rbp=NarrowOop [32]=Oop [44]=NarrowOop }
                      ;*invokevirtual poll {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.Disposer::disposeUnreachables@4 (line 173)
                      ; - com.sun.prism.impl.Disposer::cleanUp@26 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@473 (line 117)
  0x000001c3987c7a64: 98cb 92ff 

  0x000001c3987c7a68: ;   {other}
  0x000001c3987c7a68: 0f1f 8400 | 5822 0038 | 418b fb48 | 8d54 2470 | 4d8b c749 | ba50 dfad | 09f8 7f00 | 0041 ffd2 
  0x000001c3987c7a88: ;   {other}
  0x000001c3987c7a88: 0f1f 8400 | 0000 0000 | 448b dfe9 | 60ee ffff | 4c89 4c24 | 3844 8954 | 2430 418b | eb49 8bd1 
  0x000001c3987c7aa8: 4c8d 4424 

  0x000001c3987c7aac: ;   {runtime_call _complete_monitor_locking_Java}
  0x000001c3987c7aac: 7066 90e8 

  0x000001c3987c7ab0: ; ImmutableOopMap {[32]=Oop [40]=Oop [48]=NarrowOop [56]=Oop }
                      ;*synchronization entry
                      ; - com.sun.prism.impl.Disposer::processDisposalQueue@-1 (line 189)
                      ; - com.sun.prism.impl.Disposer::cleanUp@32 (line 136)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@473 (line 117)
  0x000001c3987c7ab0: cce7 9eff 

  0x000001c3987c7ab4: ;   {other}
  0x000001c3987c7ab4: 0f1f 8400 | a422 0039 | 448b dd44 | 8b54 2430 | 4c8b 4c24 | 38e9 adee | ffff 418b | db49 8bc9 
  0x000001c3987c7ad4: 488d 5424 | 704d 8bc7 | 49ba 50df | ad09 f87f | 0000 41ff 

  0x000001c3987c7ae8: ;   {other}
  0x000001c3987c7ae8: d20f 1f84 | 0000 0000 | 0044 8bdb | e92c efff | ffba deff 

  0x000001c3987c7afc: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c7afc: ffff 90e8 

  0x000001c3987c7b00: ; ImmutableOopMap {rbp=NarrowOop }
                      ;*invokeinterface getTextureResourcePool {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@517 (line 127)
  0x000001c3987c7b00: fcca 92ff 

  0x000001c3987c7b04: ;   {other}
  0x000001c3987c7b04: 0f1f 8400 | f422 003a | ba76 ffff | ff48 8b6c | 2420 895c | 2420 8944 

  0x000001c3987c7b1c: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c7b1c: 2428 90e8 

  0x000001c3987c7b20: ; ImmutableOopMap {rbp=Oop [32]=NarrowOop }
                      ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) jdk.internal.util.ArraysSupport::mismatch@74 (line 401)
                      ; - java.lang.String::startsWith@70 (line 2297)
                      ; - java.lang.String::startsWith@3 (line 2327)
                      ; - com.sun.prism.impl.Disposer::cleanUp@8 (line 131)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@473 (line 117)
  0x000001c3987c7b20: dcca 92ff 

  0x000001c3987c7b24: ;   {other}
  0x000001c3987c7b24: 0f1f 8400 | 1423 003b | ba45 ffff | ff48 8b6c | 2420 897c | 2420 4489 

  0x000001c3987c7b3c: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c7b3c: 5424 28e8 

  0x000001c3987c7b40: ; ImmutableOopMap {rbp=Oop [32]=NarrowOop }
                      ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.lang.String::startsWith@50 (line 2293)
                      ; - java.lang.String::startsWith@3 (line 2327)
                      ; - com.sun.prism.impl.Disposer::cleanUp@8 (line 131)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@40 (line 117)
  0x000001c3987c7b40: bcca 92ff 

  0x000001c3987c7b44: ;   {other}
  0x000001c3987c7b44: 0f1f 8400 | 3423 003c | 33ed 4585 | c940 0f94 | c5ba 45ff | ffff 4489 | 4424 2c4c | 8954 2430 
  0x000001c3987c7b64: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c7b64: 6666 90e8 

  0x000001c3987c7b68: ; ImmutableOopMap {[32]=Oop [44]=NarrowOop [48]=Oop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.lang.ref.ReferenceQueue::poll@4 (line 180)
                      ; - com.sun.prism.impl.Disposer::disposeUnreachables@4 (line 173)
                      ; - com.sun.prism.impl.Disposer::cleanUp@26 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@40 (line 117)
  0x000001c3987c7b68: 94ca 92ff 

  0x000001c3987c7b6c: ;   {other}
  0x000001c3987c7b6c: 0f1f 8400 | 5c23 003d | ba45 ffff | ff44 895c 

  0x000001c3987c7b7c: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c7b7c: 242c 90e8 

  0x000001c3987c7b80: ; ImmutableOopMap {rbp=NarrowOop [32]=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.AbstractCollection::isEmpty@4 (line 91)
                      ; - com.sun.prism.impl.Disposer::processDisposalQueue@4 (line 189)
                      ; - com.sun.prism.impl.Disposer::cleanUp@32 (line 136)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@40 (line 117)
  0x000001c3987c7b80: 7cca 92ff 

  0x000001c3987c7b84: ;   {other}
  0x000001c3987c7b84: 0f1f 8400 | 7423 003e | 498b d749 | ba60 f66c | 09f8 7f00 | 0041 ffd2 

  0x000001c3987c7b9c: ;   {other}
  0x000001c3987c7b9c: 0f1f 8400 | 0000 0000 | e9d5 f3ff | ffba 45ff | ffff 4489 

  0x000001c3987c7bb0: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c7bb0: 4424 20e8 

  0x000001c3987c7bb4: ; ImmutableOopMap {rbp=NarrowOop [32]=NarrowOop [40]=Oop }
                      ;*if_acmpeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.concurrent.locks.ReentrantLock$Sync::tryRelease@14 (line 174)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::release@2 (line 1059)
                      ; - java.util.concurrent.locks.ReentrantLock::unlock@5 (line 494)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@98 (line 130)
  0x000001c3987c7bb4: 48ca 92ff 

  0x000001c3987c7bb8: ;   {other}
  0x000001c3987c7bb8: 0f1f 8400 | a823 003f | ba45 ffff | ff44 8944 

  0x000001c3987c7bc8: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c7bc8: 2428 90e8 

  0x000001c3987c7bcc: ; ImmutableOopMap {[32]=Oop }
                      ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.d3d.D3DSwapChain::lockResources@11 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@236 (line 77)
  0x000001c3987c7bcc: 30ca 92ff 

  0x000001c3987c7bd0: ;   {other}
  0x000001c3987c7bd0: 0f1f 8400 | c023 0040 | ba45 ffff | ff44 8944 

  0x000001c3987c7be0: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c7be0: 2428 90e8 

  0x000001c3987c7be4: ; ImmutableOopMap {[32]=Oop }
                      ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.d3d.D3DSwapChain::lockResources@25 (line 136)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@236 (line 77)
  0x000001c3987c7be4: 18ca 92ff 

  0x000001c3987c7be8: ;   {other}
  0x000001c3987c7be8: 0f1f 8400 | d823 0041 | c5f8 2ec1 | bdff ffff | ff0f 8a0e | 0000 000f | 8208 0000 | 0040 0f95 
  0x000001c3987c7c08: c540 0fb6 | edba 45ff 

  0x000001c3987c7c10: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c7c10: ffff 90e8 

  0x000001c3987c7c14: ; ImmutableOopMap {[32]=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.d3d.D3DSwapChain::lockResources@37 (line 137)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@236 (line 77)
  0x000001c3987c7c14: e8c9 92ff 

  0x000001c3987c7c18: ;   {other}
  0x000001c3987c7c18: 0f1f 8400 | 0824 0042 

  0x000001c3987c7c20: ;   {section_word}
  0x000001c3987c7c20: c5f8 2e0d | 18e2 ffff | bdff ffff | ff0f 8a0e | 0000 000f | 8208 0000 | 0040 0f95 | c540 0fb6 
  0x000001c3987c7c40: edba 45ff | ffff 4889 | 4424 30c5 | fa11 4c24 | 38c5 fa11 

  0x000001c3987c7c54: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c7c54: 4424 3ce8 

  0x000001c3987c7c58: ; ImmutableOopMap {[32]=Oop [48]=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.impl.BaseGraphics::scale@3 (line 204)
                      ; - com.sun.prism.d3d.D3DSwapChain::createGraphics@21 (line 149)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@304 (line 88)
  0x000001c3987c7c58: a4c9 92ff 

  0x000001c3987c7c5c: ;   {other}
  0x000001c3987c7c5c: 0f1f 8400 | 4c24 0043 | 498b d749 | ba60 f66c | 09f8 7f00 | 0041 ffd2 

  0x000001c3987c7c74: ;   {other}
  0x000001c3987c7c74: 0f1f 8400 | 0000 0000 | e94e e7ff | ffba 45ff | ffff 895c 

  0x000001c3987c7c88: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c7c88: 2428 90e8 

  0x000001c3987c7c8c: ; ImmutableOopMap {[32]=Oop [40]=NarrowOop }
                      ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.lang.String::startsWith@50 (line 2293)
                      ; - java.lang.String::startsWith@3 (line 2327)
                      ; - com.sun.prism.impl.Disposer::cleanUp@8 (line 131)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@473 (line 117)
  0x000001c3987c7c8c: 70c9 92ff 

  0x000001c3987c7c90: ;   {other}
  0x000001c3987c7c90: 0f1f 8400 | 8024 0044 | 33ed 4585 | c040 0f94 | c5ba 45ff | ffff 4489 | 5424 2c4c | 894c 2430 
  0x000001c3987c7cb0: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c7cb0: 6666 90e8 

  0x000001c3987c7cb4: ; ImmutableOopMap {[32]=Oop [44]=NarrowOop [48]=Oop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.lang.ref.ReferenceQueue::poll@4 (line 180)
                      ; - com.sun.prism.impl.Disposer::disposeUnreachables@4 (line 173)
                      ; - com.sun.prism.impl.Disposer::cleanUp@26 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@473 (line 117)
  0x000001c3987c7cb4: 48c9 92ff 

  0x000001c3987c7cb8: ;   {other}
  0x000001c3987c7cb8: 0f1f 8400 | a824 0045 | ba45 ffff | ff44 8954 

  0x000001c3987c7cc8: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c7cc8: 242c 90e8 

  0x000001c3987c7ccc: ; ImmutableOopMap {[32]=Oop [44]=NarrowOop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.AbstractCollection::isEmpty@4 (line 91)
                      ; - com.sun.prism.impl.Disposer::processDisposalQueue@4 (line 189)
                      ; - com.sun.prism.impl.Disposer::cleanUp@32 (line 136)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@473 (line 117)
  0x000001c3987c7ccc: 30c9 92ff 

  0x000001c3987c7cd0: ;   {other}
  0x000001c3987c7cd0: 0f1f 8400 | c024 0046 | 498b d749 | ba60 f66c | 09f8 7f00 | 0041 ffd2 

  0x000001c3987c7ce8: ;   {other}
  0x000001c3987c7ce8: 0f1f 8400 | 0000 0000 | e9c9 f3ff | ff45 33db | 493b dbbd | ffff ffff | 7c08 400f | 95c5 400f 
  0x000001c3987c7d08: b6ed ba45 | ffff ff44 | 8954 242c 

  0x000001c3987c7d14: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c7d14: 6666 90e8 

  0x000001c3987c7d18: ; ImmutableOopMap {[32]=Oop [44]=NarrowOop [48]=NarrowOop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.glass.ui.View::checkNotClosed@6 (line 434)
                      ; - com.sun.glass.ui.View::lock@1 (line 730)
                      ; - com.sun.prism.PresentableState::lock@11 (line 285)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@106 (line 65)
  0x000001c3987c7d18: e4c8 92ff 

  0x000001c3987c7d1c: ;   {other}
  0x000001c3987c7d1c: 0f1f 8400 | 0c25 0047 | ba45 ffff 

  0x000001c3987c7d28: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c7d28: ff66 90e8 

  0x000001c3987c7d2c: ; ImmutableOopMap {[32]=Oop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.d3d.D3DResourceFactory::isDeviceReady@4 (line 116)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@136 (line 71)
  0x000001c3987c7d2c: d0c8 92ff 

  0x000001c3987c7d30: ;   {other}
  0x000001c3987c7d30: 0f1f 8400 | 2025 0048 | ba45 ffff 

  0x000001c3987c7d3c: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c7d3c: ff66 90e8 

  0x000001c3987c7d40: ; ImmutableOopMap {[32]=Oop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.d3d.D3DContext::testLostStateAndReset@4 (line 154)
                      ; - com.sun.prism.d3d.D3DResourceFactory::isDeviceReady@17 (line 120)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@136 (line 71)
  0x000001c3987c7d40: bcc8 92ff 

  0x000001c3987c7d44: ;   {other}
  0x000001c3987c7d44: 0f1f 8400 | 3425 0049 | ba45 ffff | ff48 8b6c | 2420 8944 

  0x000001c3987c7d58: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c7d58: 2428 90e8 

  0x000001c3987c7d5c: ; ImmutableOopMap {rbp=Oop [48]=NarrowOop }
                      ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.d3d.D3DContext::testLostStateAndReset@187 (line 186)
                      ; - com.sun.prism.d3d.D3DResourceFactory::isDeviceReady@17 (line 120)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@136 (line 71)
  0x000001c3987c7d5c: a0c8 92ff 

  0x000001c3987c7d60: ;   {other}
  0x000001c3987c7d60: 0f1f 8400 | 5025 004a | ba45 ffff | ff48 8b6c | 2420 8944 

  0x000001c3987c7d74: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c7d74: 2424 90e8 

  0x000001c3987c7d78: ; ImmutableOopMap {rbp=Oop [48]=NarrowOop }
                      ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.d3d.D3DContext::testLostStateAndReset@197 (line 190)
                      ; - com.sun.prism.d3d.D3DResourceFactory::isDeviceReady@17 (line 120)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@136 (line 71)
  0x000001c3987c7d78: 84c8 92ff 

  0x000001c3987c7d7c: ;   {other}
  0x000001c3987c7d7c: 0f1f 8400 | 6c25 004b | ba45 ffff | ff48 8b6c | 2420 8944 

  0x000001c3987c7d90: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c7d90: 2428 90e8 

  0x000001c3987c7d94: ; ImmutableOopMap {rbp=Oop [48]=NarrowOop }
                      ;*if_icmpeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.d3d.D3DContext::testLostStateAndReset@250 (line 207)
                      ; - com.sun.prism.d3d.D3DResourceFactory::isDeviceReady@17 (line 120)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@136 (line 71)
  0x000001c3987c7d94: 68c8 92ff 

  0x000001c3987c7d98: ;   {other}
  0x000001c3987c7d98: 0f1f 8400 | 8825 004c | ba45 ffff | ff48 8b6c | 2420 8944 

  0x000001c3987c7dac: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c7dac: 2428 90e8 

  0x000001c3987c7db0: ; ImmutableOopMap {rbp=Oop [48]=NarrowOop }
                      ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.d3d.D3DContext::testLostStateAndReset@256 (line 207)
                      ; - com.sun.prism.d3d.D3DResourceFactory::isDeviceReady@17 (line 120)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@136 (line 71)
  0x000001c3987c7db0: 4cc8 92ff 

  0x000001c3987c7db4: ;   {other}
  0x000001c3987c7db4: 0f1f 8400 | a425 004d | ba45 ffff | ff48 8b6c | 2420 8944 

  0x000001c3987c7dc8: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c7dc8: 2420 90e8 

  0x000001c3987c7dcc: ; ImmutableOopMap {rbp=Oop }
                      ;*ifge {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.d3d.D3DContext::FAILED@1 (line 79)
                      ; - com.sun.prism.d3d.D3DContext::testLostStateAndReset@270 (line 215)
                      ; - com.sun.prism.d3d.D3DResourceFactory::isDeviceReady@17 (line 120)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@136 (line 71)
  0x000001c3987c7dcc: 30c8 92ff 

  0x000001c3987c7dd0: ;   {other}
  0x000001c3987c7dd0: 0f1f 8400 | c025 004e | c5f8 2ed0 | bdff ffff | ff0f 8a0e | 0000 000f | 8208 0000 | 0040 0f95 
  0x000001c3987c7df0: c540 0fb6 | edba 45ff 

  0x000001c3987c7df8: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c7df8: ffff 90e8 

  0x000001c3987c7dfc: ; ImmutableOopMap {[32]=Oop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.d3d.D3DSwapChain::lockResources@49 (line 138)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@236 (line 77)
  0x000001c3987c7dfc: 00c8 92ff 

  0x000001c3987c7e00: ;   {other}
  0x000001c3987c7e00: 0f1f 8400 | f025 004f | 4533 db4d | 3bd3 bdff | ffff ff7c | 0840 0f95 | c540 0fb6 | edba 45ff 
  0x000001c3987c7e20: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c7e20: ffff 90e8 

  0x000001c3987c7e24: ; ImmutableOopMap {[32]=Oop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.d3d.D3DTextureResource::isValid@19 (line 46)
                      ; - com.sun.prism.impl.BaseTexture::isSurfaceLost@4 (line 292)
                      ; - com.sun.prism.d3d.D3DSwapChain::lockResources@65 (line 143)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@236 (line 77)
  0x000001c3987c7e24: d8c7 92ff 

  0x000001c3987c7e28: ;   {other}
  0x000001c3987c7e28: 0f1f 8400 | 1826 0050 

  0x000001c3987c7e30: ;   {section_word}
  0x000001c3987c7e30: c5f8 2e05 | 08e0 ffff | bdff ffff | ff0f 8a0e | 0000 000f | 8208 0000 | 0040 0f95 | c540 0fb6 
  0x000001c3987c7e50: edba 45ff | ffff 4889 | 4424 30c5 | fa11 4424 

  0x000001c3987c7e60: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c7e60: 3866 90e8 

  0x000001c3987c7e64: ; ImmutableOopMap {[32]=Oop [48]=Oop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.impl.BaseGraphics::scale@9 (line 204)
                      ; - com.sun.prism.d3d.D3DSwapChain::createGraphics@21 (line 149)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@304 (line 88)
  0x000001c3987c7e64: 98c7 92ff 

  0x000001c3987c7e68: ;   {other}
  0x000001c3987c7e68: 0f1f 8400 | 5826 0051 | ba45 ffff 

  0x000001c3987c7e74: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c7e74: ff66 90e8 

  0x000001c3987c7e78: ; ImmutableOopMap {[32]=Oop [48]=NarrowOop [52]=NarrowOop [64]=Oop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.impl.BaseContext::flushVertexBuffer@4 (line 105)
                      ; - com.sun.prism.d3d.D3DSwapChain::prepare@6 (line 60)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@355 (line 99)
  0x000001c3987c7e78: 84c7 92ff 

  0x000001c3987c7e7c: ;   {other}
  0x000001c3987c7e7c: 0f1f 8400 | 6c26 0052 | ba45 ffff | ff44 8b5c | 2430 4489 | 5c24 284c | 8954 2438 | 448b 5424 
  0x000001c3987c7e9c: 3444 8954 | 242c 448b | 5c24 4844 | 895c 2440 | 448b 5424 | 4c44 8954 | 2444 8944 | 244c 4489 
  0x000001c3987c7ebc: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c7ebc: 4c24 50e8 

  0x000001c3987c7ec0: ; ImmutableOopMap {[32]=Oop [40]=NarrowOop [44]=NarrowOop [56]=Oop [80]=NarrowOop [88]=Oop }
                      ;*ifgt {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.impl.ManagedResource::assertLocked@4 (line 95)
                      ; - com.sun.prism.impl.ManagedResource::getResource@1 (line 70)
                      ; - com.sun.prism.d3d.D3DRTTexture::isMSAA@7 (line 180)
                      ; - com.sun.prism.d3d.D3DSwapChain::isMSAA@11 (line 184)
                      ; - com.sun.prism.d3d.D3DSwapChain::prepare@55 (line 69)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@355 (line 99)
  0x000001c3987c7ec0: 3cc7 92ff 

  0x000001c3987c7ec4: ;   {other}
  0x000001c3987c7ec4: 0f1f 8400 | b426 0053 | ba45 ffff | ff44 8b5c | 2430 4489 | 5c24 284c | 8b54 2440 | 4c89 5424 
  0x000001c3987c7ee4: 3844 8b54 | 2434 4489 | 5424 2c44 | 8b5c 2448 | 4489 5c24 | 4044 8b54 | 244c 4489 | 5424 4489 
  0x000001c3987c7f04: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c7f04: 4424 4ce8 

  0x000001c3987c7f08: ; ImmutableOopMap {[32]=Oop [40]=NarrowOop [44]=NarrowOop [56]=Oop [88]=Oop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.d3d.D3DRTTexture::isMSAA@16 (line 180)
                      ; - com.sun.prism.d3d.D3DSwapChain::isMSAA@11 (line 184)
                      ; - com.sun.prism.d3d.D3DSwapChain::prepare@55 (line 69)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@355 (line 99)
  0x000001c3987c7f08: f4c6 92ff 

  0x000001c3987c7f0c: ;   {other}
  0x000001c3987c7f0c: 0f1f 8400 | fc26 0054 | ba45 ffff | ff44 8b54 | 2430 4489 

  0x000001c3987c7f20: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c7f20: 5424 28e8 

  0x000001c3987c7f24: ; ImmutableOopMap {[32]=Oop [40]=NarrowOop [64]=Oop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.impl.BaseContext::flushVertexBuffer@4 (line 105)
                      ; - com.sun.prism.d3d.D3DSwapChain::prepare@121 (line 76)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@355 (line 99)
  0x000001c3987c7f24: d8c6 92ff 

  0x000001c3987c7f28: ;   {other}
  0x000001c3987c7f28: 0f1f 8400 | 1827 0055 | ba45 ffff | ff44 8954 

  0x000001c3987c7f38: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c7f38: 242c 90e8 

  0x000001c3987c7f3c: ; ImmutableOopMap {[32]=Oop [44]=NarrowOop [48]=NarrowOop }
                      ;*ifgt {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.impl.ManagedResource::assertLocked@4 (line 95)
                      ; - com.sun.prism.impl.ManagedResource::unlock@1 (line 156)
                      ; - com.sun.prism.impl.BaseTexture::unlock@4 (line 272)
                      ; - com.sun.prism.d3d.D3DSwapChain::prepare@128 (line 77)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@355 (line 99)
  0x000001c3987c7f3c: c0c6 92ff 

  0x000001c3987c7f40: ;   {other}
  0x000001c3987c7f40: 0f1f 8400 | 3027 0056 | ba45 ffff 

  0x000001c3987c7f4c: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c7f4c: ff66 90e8 

  0x000001c3987c7f50: ; ImmutableOopMap {[32]=Oop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.tk.quantum.PresentingPainter::run@444 (line 106)
  0x000001c3987c7f50: acc6 92ff 

  0x000001c3987c7f54: ;   {other}
  0x000001c3987c7f54: 0f1f 8400 | 4427 0057 | ba45 ffff 

  0x000001c3987c7f60: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c7f60: ff66 90e8 

  0x000001c3987c7f64: ; ImmutableOopMap {[32]=Oop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.d3d.D3DSwapChain::present@9 (line 84)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@451 (line 107)
  0x000001c3987c7f64: 98c6 92ff 

  0x000001c3987c7f68: ;   {other}
  0x000001c3987c7f68: 0f1f 8400 | 5827 0058 | ba45 ffff | ff48 8b6c | 2420 8944 

  0x000001c3987c7f7c: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c7f7c: 2428 90e8 

  0x000001c3987c7f80: ; ImmutableOopMap {rbp=Oop [48]=NarrowOop }
                      ;*if_icmpeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.d3d.D3DContext::validatePresent@3 (line 223)
                      ; - com.sun.prism.d3d.D3DSwapChain::present@31 (line 88)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@451 (line 107)
  0x000001c3987c7f80: 7cc6 92ff 

  0x000001c3987c7f84: ;   {other}
  0x000001c3987c7f84: 0f1f 8400 | 7427 0059 | ba45 ffff | ff48 8b6c | 2420 8944 

  0x000001c3987c7f98: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c7f98: 2428 90e8 

  0x000001c3987c7f9c: ; ImmutableOopMap {rbp=Oop [48]=NarrowOop }
                      ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.d3d.D3DContext::validatePresent@9 (line 223)
                      ; - com.sun.prism.d3d.D3DSwapChain::present@31 (line 88)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@451 (line 107)
  0x000001c3987c7f9c: 60c6 92ff 

  0x000001c3987c7fa0: ;   {other}
  0x000001c3987c7fa0: 0f1f 8400 | 9027 005a | ba45 ffff | ff48 8b6c | 2420 8944 

  0x000001c3987c7fb4: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c7fb4: 2420 90e8 

  0x000001c3987c7fb8: ; ImmutableOopMap {rbp=Oop }
                      ;*ifge {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.d3d.D3DContext::FAILED@1 (line 79)
                      ; - com.sun.prism.d3d.D3DContext::validatePresent@24 (line 229)
                      ; - com.sun.prism.d3d.D3DSwapChain::present@31 (line 88)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@451 (line 107)
  0x000001c3987c7fb8: 44c6 92ff 

  0x000001c3987c7fbc: ;   {other}
  0x000001c3987c7fbc: 0f1f 8400 | ac27 005b | 4533 db4d | 3bd3 bdff | ffff ff7c | 0840 0f95 | c540 0fb6 | edba 45ff 
  0x000001c3987c7fdc: ffff 894c 

  0x000001c3987c7fe0: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c7fe0: 2428 90e8 

  0x000001c3987c7fe4: ; ImmutableOopMap {[32]=Oop [40]=NarrowOop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.glass.ui.View::checkNotClosed@6 (line 434)
                      ; - com.sun.glass.ui.View::unlock@1 (line 741)
                      ; - com.sun.prism.PresentableState::unlock@11 (line 296)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@484 (line 120)
  0x000001c3987c7fe4: 18c6 92ff 

  0x000001c3987c7fe8: ;   {other}
  0x000001c3987c7fe8: 0f1f 8400 | d827 005c | ba45 ffff | ff4c 8944 | 2420 895c 

  0x000001c3987c7ffc: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c7ffc: 2428 90e8 

  0x000001c3987c8000: ; ImmutableOopMap {rbp=NarrowOop [32]=Oop [40]=NarrowOop }
                      ;*if_acmpeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.concurrent.locks.ReentrantLock$Sync::tryRelease@14 (line 174)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::release@2 (line 1059)
                      ; - java.util.concurrent.locks.ReentrantLock::unlock@5 (line 494)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@531 (line 130)
  0x000001c3987c8000: fcc5 92ff 

  0x000001c3987c8004: ;   {other}
  0x000001c3987c8004: 0f1f 8400 | f427 005d | ba45 ffff | ff44 8b5c | 2430 4489 | 5c24 284c | 8b5c 2440 | 4c89 5c24 
  0x000001c3987c8024: 3844 8b44 | 2434 4489 | 4424 2c44 | 8b5c 2448 | 4489 5c24 | 3089 7c24 | 4044 894c | 2444 4489 
  0x000001c3987c8044: 5424 4889 

  0x000001c3987c8048: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c8048: 4c24 4ce8 

  0x000001c3987c804c: ; ImmutableOopMap {[32]=Oop [40]=NarrowOop [44]=NarrowOop [48]=NarrowOop [56]=Oop [64]=NarrowOop [68]=NarrowOop [76]=NarrowOop }
                      ;*ifgt {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.impl.BaseContext::flushMask@4 (line 111)
                      ; - com.sun.prism.impl.BaseContext::drawQuads@1 (line 124)
                      ; - com.sun.prism.impl.VertexBuffer::flush@23 (line 98)
                      ; - com.sun.prism.impl.BaseContext::flushVertexBuffer@12 (line 107)
                      ; - com.sun.prism.d3d.D3DSwapChain::prepare@6 (line 60)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@355 (line 99)
  0x000001c3987c804c: b0c5 92ff 

  0x000001c3987c8050: ;   {other}
  0x000001c3987c8050: 0f1f 8400 | 4028 005e | ba45 ffff | ff44 8b44 | 2430 4489 | 4424 284c | 8b5c 2440 | 4c89 5c24 
  0x000001c3987c8070: 3844 8b5c | 2434 4489 | 5c24 2c44 | 8b44 2448 | 4489 4424 | 3089 7c24 | 4044 894c | 2444 4489 
  0x000001c3987c8090: 5424 4889 

  0x000001c3987c8094: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c8094: 4c24 4ce8 

  0x000001c3987c8098: ; ImmutableOopMap {[32]=Oop [40]=NarrowOop [44]=NarrowOop [48]=NarrowOop [56]=Oop [64]=NarrowOop [68]=NarrowOop [76]=NarrowOop }
                      ;*ifle {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.impl.BaseContext::flushMask@11 (line 111)
                      ; - com.sun.prism.impl.BaseContext::drawQuads@1 (line 124)
                      ; - com.sun.prism.impl.VertexBuffer::flush@23 (line 98)
                      ; - com.sun.prism.impl.BaseContext::flushVertexBuffer@12 (line 107)
                      ; - com.sun.prism.d3d.D3DSwapChain::prepare@6 (line 60)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@355 (line 99)
  0x000001c3987c8098: 64c5 92ff 

  0x000001c3987c809c: ;   {other}
  0x000001c3987c809c: 0f1f 8400 | 8c28 005f | ba45 ffff | ff44 8b5c | 2430 4489 | 5c24 284c | 8b5c 2440 | 4c89 5c24 
  0x000001c3987c80bc: 3844 8944 | 242c 897c | 2434 894c | 2440 4489 | 5424 4444 | 894c 2448 

  0x000001c3987c80d4: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c80d4: 6666 90e8 

  0x000001c3987c80d8: ; ImmutableOopMap {[32]=Oop [40]=NarrowOop [44]=NarrowOop [52]=NarrowOop [56]=Oop [64]=NarrowOop [72]=NarrowOop }
                      ;*ifgt {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.impl.BaseContext::flushMask@4 (line 111)
                      ; - com.sun.prism.impl.BaseContext::drawQuads@1 (line 124)
                      ; - com.sun.prism.impl.VertexBuffer::flush@23 (line 98)
                      ; - com.sun.prism.impl.BaseContext::flushVertexBuffer@12 (line 107)
                      ; - com.sun.prism.d3d.D3DSwapChain::prepare@121 (line 76)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@355 (line 99)
  0x000001c3987c80d8: 24c5 92ff 

  0x000001c3987c80dc: ;   {other}
  0x000001c3987c80dc: 0f1f 8400 | cc28 0060 | ba45 ffff | ff44 8b44 | 2430 4489 | 4424 284c | 8b5c 2440 | 4c89 5c24 
  0x000001c3987c80fc: 3844 8b5c | 2434 4489 | 5c24 2c89 | 7c24 3489 | 4c24 4044 | 8954 2444 | 4489 4c24 

  0x000001c3987c8118: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c8118: 4866 90e8 

  0x000001c3987c811c: ; ImmutableOopMap {[32]=Oop [40]=NarrowOop [44]=NarrowOop [52]=NarrowOop [56]=Oop [64]=NarrowOop [72]=NarrowOop }
                      ;*ifle {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.impl.BaseContext::flushMask@11 (line 111)
                      ; - com.sun.prism.impl.BaseContext::drawQuads@1 (line 124)
                      ; - com.sun.prism.impl.VertexBuffer::flush@23 (line 98)
                      ; - com.sun.prism.impl.BaseContext::flushVertexBuffer@12 (line 107)
                      ; - com.sun.prism.d3d.D3DSwapChain::prepare@121 (line 76)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@355 (line 99)
  0x000001c3987c811c: e0c4 92ff 

  0x000001c3987c8120: ;   {other}
  0x000001c3987c8120: 0f1f 8400 | 1029 0061 | ba45 ffff 

  0x000001c3987c812c: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c812c: ff66 90e8 

  0x000001c3987c8130: ; ImmutableOopMap {rbp=NarrowOop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.concurrent.locks.LockSupport::unpark@8 (line 178)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::signalNext@30 (line 645)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::release@12 (line 1060)
                      ; - java.util.concurrent.locks.ReentrantLock::unlock@5 (line 494)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@98 (line 130)
  0x000001c3987c8130: ccc4 92ff 

  0x000001c3987c8134: ;   {other}
  0x000001c3987c8134: 0f1f 8400 | 2429 0062 | ba45 ffff 

  0x000001c3987c8140: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c8140: ff66 90e8 

  0x000001c3987c8144: ; ImmutableOopMap {rbp=NarrowOop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.concurrent.locks.LockSupport::unpark@8 (line 178)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::signalNext@30 (line 645)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::release@12 (line 1060)
                      ; - java.util.concurrent.locks.ReentrantLock::unlock@5 (line 494)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@531 (line 130)
  0x000001c3987c8144: b8c4 92ff 

  0x000001c3987c8148: ;   {other}
  0x000001c3987c8148: 0f1f 8400 | 3829 0063 | ba45 ffff | ff44 894c 

  0x000001c3987c8158: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c8158: 2424 90e8 

  0x000001c3987c815c: ; ImmutableOopMap {[36]=NarrowOop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) jdk.internal.misc.Unsafe::getAndBitwiseAndInt@21 (line 3233)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer$Node::getAndUnsetStatus@10 (line 481)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::signalNext@22 (line 644)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::release@12 (line 1060)
                      ; - java.util.concurrent.locks.ReentrantLock::unlock@5 (line 494)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@98 (line 130)
  0x000001c3987c815c: a0c4 92ff 

  0x000001c3987c8160: ;   {other}
  0x000001c3987c8160: 0f1f 8400 | 5029 0064 | ba45 ffff | ff44 8944 

  0x000001c3987c8170: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c8170: 2424 90e8 

  0x000001c3987c8174: ; ImmutableOopMap {[36]=NarrowOop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) jdk.internal.misc.Unsafe::getAndBitwiseAndInt@21 (line 3233)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer$Node::getAndUnsetStatus@10 (line 481)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::signalNext@22 (line 644)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::release@12 (line 1060)
                      ; - java.util.concurrent.locks.ReentrantLock::unlock@5 (line 494)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@531 (line 130)
  0x000001c3987c8174: 88c4 92ff 

  0x000001c3987c8178: ;   {other}
  0x000001c3987c8178: 0f1f 8400 | 6829 0065 | ba45 ffff | ff89 5c24 

  0x000001c3987c8188: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c8188: 2866 90e8 

  0x000001c3987c818c: ; ImmutableOopMap {[32]=Oop [40]=NarrowOop }
                      ;*ifge {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.concurrent.locks.ReentrantLock$NonfairSync::initialTryLock@36 (line 230)
                      ; - java.util.concurrent.locks.ReentrantLock$Sync::lock@1 (line 152)
                      ; - java.util.concurrent.locks.ReentrantLock::lock@4 (line 322)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@3 (line 45)
  0x000001c3987c818c: 70c4 92ff 

  0x000001c3987c8190: ;   {other}
  0x000001c3987c8190: 0f1f 8400 | 8029 0066 | bade ffff 

  0x000001c3987c819c: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c819c: ff66 90e8 

  0x000001c3987c81a0: ; ImmutableOopMap {rbp=NarrowOop [32]=Oop }
                      ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.d3d.D3DTextureResource::isValid@11 (line 46)
                      ; - com.sun.prism.impl.BaseTexture::isSurfaceLost@4 (line 292)
                      ; - com.sun.prism.d3d.D3DSwapChain::lockResources@65 (line 143)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@236 (line 77)
  0x000001c3987c81a0: 5cc4 92ff 

  0x000001c3987c81a4: ;   {other}
  0x000001c3987c81a4: 0f1f 8400 | 9429 0067 | bade ffff | ff48 8b6c | 2420 448b | 5c24 3044 | 895c 2420 | 448b 5424 
  0x000001c3987c81c4: 3444 8954 | 2424 4889 

  0x000001c3987c81cc: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c81cc: 4424 30e8 

  0x000001c3987c81d0: ; ImmutableOopMap {rbp=Oop [32]=NarrowOop [36]=NarrowOop [48]=Oop [64]=Oop }
                      ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.d3d.D3DSwapChain::prepare@14 (line 61)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@355 (line 99)
  0x000001c3987c81d0: 2cc4 92ff 

  0x000001c3987c81d4: ;   {other}
  0x000001c3987c81d4: 0f1f 8400 | c429 0068 | bade ffff | ff44 8b5c | 2430 4489 | 5c24 284c | 8b54 2440 | 4c89 5424 
  0x000001c3987c81f4: 3844 8b54 | 2434 4489 | 5424 2c44 | 8b5c 2448 | 4489 5c24 | 4044 8b54 | 244c 4489 | 5424 4489 
  0x000001c3987c8214: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c8214: 4424 4ce8 

  0x000001c3987c8218: ; ImmutableOopMap {rbp=NarrowOop [32]=Oop [40]=NarrowOop [44]=NarrowOop [56]=Oop [88]=Oop }
                      ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.d3d.D3DRTTexture::isMSAA@10 (line 180)
                      ; - com.sun.prism.d3d.D3DSwapChain::isMSAA@11 (line 184)
                      ; - com.sun.prism.d3d.D3DSwapChain::prepare@55 (line 69)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@355 (line 99)
  0x000001c3987c8218: e4c3 92ff 

  0x000001c3987c821c: ;   {other}
  0x000001c3987c821c: 0f1f 8400 | 0c2a 0069 | bade ffff | ff48 8bef | 4889 7424 | 2089 5c24 

  0x000001c3987c8234: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c8234: 2866 90e8 

  0x000001c3987c8238: ; ImmutableOopMap {rbp=Oop [32]=Oop [40]=NarrowOop }
                      ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.BaseResourcePool$WeakLinkedList::getResource@7 (line 504)
                      ; - com.sun.prism.impl.BaseResourcePool::freeDisposalRequestedAndCheckResources@20 (line 282)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@523 (line 127)
  0x000001c3987c8238: c4c3 92ff 

  0x000001c3987c823c: ;   {other}
  0x000001c3987c823c: 0f1f 8400 | 2c2a 006a | bade ffff | ff48 8bee | 4889 5c24 | 2044 896c 

  0x000001c3987c8254: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c8254: 2428 90e8 

  0x000001c3987c8258: ; ImmutableOopMap {rbp=Oop [32]=Oop [40]=NarrowOop }
                      ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.BaseResourcePool$WeakLinkedList::getResource@7 (line 504)
                      ; - com.sun.prism.impl.BaseResourcePool::freeDisposalRequestedAndCheckResources@20 (line 282)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@90 (line 127)
  0x000001c3987c8258: a4c3 92ff 

  0x000001c3987c825c: ;   {other}
  0x000001c3987c825c: 0f1f 8400 | 4c2a 006b | bade ffff | ff48 8bee | 4889 5c24 | 204c 895c | 2428 4489 

  0x000001c3987c8278: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c8278: 5424 30e8 

  0x000001c3987c827c: ; ImmutableOopMap {rbp=Oop [32]=Oop [40]=Oop [48]=NarrowOop }
                      ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.d3d.D3DTextureResource::isValid@11 (line 46)
                      ; - com.sun.prism.impl.ManagedResource::_isgone@30 (line 42)
                      ; - com.sun.prism.impl.BaseResourcePool::freeDisposalRequestedAndCheckResources@27 (line 283)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@90 (line 127)
  0x000001c3987c827c: 80c3 92ff 

  0x000001c3987c8280: ;   {other}
  0x000001c3987c8280: 0f1f 8400 | 702a 006c | bade ffff | ff48 8bef | 4889 7424 | 204c 895c | 2428 4489 

  0x000001c3987c829c: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c829c: 5424 30e8 

  0x000001c3987c82a0: ; ImmutableOopMap {rbp=Oop [32]=Oop [40]=Oop [48]=NarrowOop }
                      ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.d3d.D3DTextureResource::isValid@11 (line 46)
                      ; - com.sun.prism.impl.ManagedResource::_isgone@30 (line 42)
                      ; - com.sun.prism.impl.BaseResourcePool::freeDisposalRequestedAndCheckResources@27 (line 283)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@523 (line 127)
  0x000001c3987c82a0: 5cc3 92ff 

  0x000001c3987c82a4: ;   {other}
  0x000001c3987c82a4: 0f1f 8400 | 942a 006d | baf6 ffff 

  0x000001c3987c82b0: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c82b0: ff66 90e8 

  0x000001c3987c82b4: ; ImmutableOopMap {}
                      ;*invokevirtual get {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.BaseResourcePool$WeakLinkedList::getResource@4 (line 504)
                      ; - com.sun.prism.impl.BaseResourcePool::freeDisposalRequestedAndCheckResources@20 (line 282)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@90 (line 127)
  0x000001c3987c82b4: 48c3 92ff 

  0x000001c3987c82b8: ;   {other}
  0x000001c3987c82b8: 0f1f 8400 | a82a 006e | baf4 ffff | ff48 8bee | 4889 5c24 

  0x000001c3987c82cc: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c82cc: 2066 90e8 

  0x000001c3987c82d0: ; ImmutableOopMap {rbp=Oop [32]=Oop }
                      ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.BaseResourcePool$WeakLinkedList::getResource@7 (line 504)
                      ; - com.sun.prism.impl.BaseResourcePool::freeDisposalRequestedAndCheckResources@20 (line 282)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@90 (line 127)
  0x000001c3987c82d0: 2cc3 92ff 

  0x000001c3987c82d4: ;   {other}
  0x000001c3987c82d4: 0f1f 8400 | c42a 006f | baf6 ffff 

  0x000001c3987c82e0: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c82e0: ff66 90e8 

  0x000001c3987c82e4: ; ImmutableOopMap {}
                      ;*invokevirtual get {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.BaseResourcePool$WeakLinkedList::getResource@4 (line 504)
                      ; - com.sun.prism.impl.BaseResourcePool::freeDisposalRequestedAndCheckResources@20 (line 282)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@523 (line 127)
  0x000001c3987c82e4: 18c3 92ff 

  0x000001c3987c82e8: ;   {other}
  0x000001c3987c82e8: 0f1f 8400 | d82a 0070 | baf4 ffff | ff48 8bef | 4889 7424 

  0x000001c3987c82fc: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c82fc: 2066 90e8 

  0x000001c3987c8300: ; ImmutableOopMap {rbp=Oop [32]=Oop }
                      ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.BaseResourcePool$WeakLinkedList::getResource@7 (line 504)
                      ; - com.sun.prism.impl.BaseResourcePool::freeDisposalRequestedAndCheckResources@20 (line 282)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@523 (line 127)
  0x000001c3987c8300: fcc2 92ff 

  0x000001c3987c8304: ;   {other}
  0x000001c3987c8304: 0f1f 8400 | f42a 0071 | ba45 ffff | ff48 8bee | 4889 5c24 | 204c 895c | 2428 4489 

  0x000001c3987c8320: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c8320: 5424 30e8 

  0x000001c3987c8324: ; ImmutableOopMap {rbp=Oop [32]=Oop [40]=Oop [48]=NarrowOop }
                      ;*ifnull {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.d3d.D3DTextureResource::isValid@4 (line 46)
                      ; - com.sun.prism.impl.ManagedResource::_isgone@30 (line 42)
                      ; - com.sun.prism.impl.BaseResourcePool::freeDisposalRequestedAndCheckResources@27 (line 283)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@90 (line 127)
  0x000001c3987c8324: d8c2 92ff 

  0x000001c3987c8328: ;   {other}
  0x000001c3987c8328: 0f1f 8400 | 182b 0072 | ba45 ffff | ff48 8bef | 4889 7424 | 204c 895c | 2428 4489 

  0x000001c3987c8344: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c8344: 5424 30e8 

  0x000001c3987c8348: ; ImmutableOopMap {rbp=Oop [32]=Oop [40]=Oop [48]=NarrowOop }
                      ;*ifnull {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.d3d.D3DTextureResource::isValid@4 (line 46)
                      ; - com.sun.prism.impl.ManagedResource::_isgone@30 (line 42)
                      ; - com.sun.prism.impl.BaseResourcePool::freeDisposalRequestedAndCheckResources@27 (line 283)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@523 (line 127)
  0x000001c3987c8348: b4c2 92ff 

  0x000001c3987c834c: ;   {other}
  0x000001c3987c834c: 0f1f 8400 | 3c2b 0073 | eb3e eb3c | 488b d0bd | 0100 0000 | eb3a 488b | d0bd 0100 | 0000 eb30 
  0x000001c3987c836c: 488b d0bd | 0100 0000 | eb26 488b | d0bd 0100 | 0000 eb1c | 488b d033 | edeb 1548 | 8bd0 33ed 
  0x000001c3987c838c: eb0e eb04 | eb02 eb00 | 488b d0bd | 0100 0000 

  0x000001c3987c839c: ;   {oop(a 'java/lang/Class'{0x0000000706259410} = 'java/lang/System')}
  0x000001c3987c839c: 49ba 1094 | 2506 0700 | 0000 458b | 5a78 4d8b | c349 c1e0 

  0x000001c3987c83b0: ;   {optimized virtual_call}
  0x000001c3987c83b0: 0366 90e8 

  0x000001c3987c83b4: ; ImmutableOopMap {[32]=Oop }
                      ;*invokevirtual printStackTrace {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@546 (line 115)
  0x000001c3987c83b4: c866 92ff 

  0x000001c3987c83b8: ;   {other}
  0x000001c3987c83b8: 0f1f 8400 | a82b 0074 

  0x000001c3987c83c0: ;   {static_call}
  0x000001c3987c83c0: 6666 90e8 

  0x000001c3987c83c4: ; ImmutableOopMap {[32]=Oop }
                      ;*invokestatic cleanUp {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@549 (line 117)
  0x000001c3987c83c4: b86c 92ff 

  0x000001c3987c83c8: ;   {other}
  0x000001c3987c83c8: 0f1f 8400 | b82b 0075 | 4c8b 5424 | 2045 8b5a | 2885 ed0f | 84b0 0000 | 0045 85db | 0f84 de00 
  0x000001c3987c83e8: 0000 498b | ea4b 8d14 

  0x000001c3987c83f0: ;   {optimized virtual_call}
  0x000001c3987c83f0: dc66 90e8 

  0x000001c3987c83f4: ; ImmutableOopMap {rbp=Oop }
                      ;*invokevirtual unlock {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@560 (line 120)
  0x000001c3987c83f4: 8866 92ff 

  0x000001c3987c83f8: ;   {other}
  0x000001c3987c83f8: 0f1f 8400 | e82b 0076 | 4c8b d545 | 8b5a 2845 | 85db 0f84 | 8a00 0000 | 478b 5cdc | 6c45 85db 
  0x000001c3987c8418: 0f84 9200 | 0000 498b | ea4b 8d14 | dc45 33c0 

  0x000001c3987c8428: ;   {optimized virtual_call}
  0x000001c3987c8428: 6666 90e8 

  0x000001c3987c842c: ; ImmutableOopMap {rbp=Oop }
                      ;*invokevirtual setPainting {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@578 (line 124)
  0x000001c3987c842c: 5066 92ff 

  0x000001c3987c8430: ;   {other}
  0x000001c3987c8430: 0f1f 8400 | 202c 0077 | 4c8b d541 | 8b6a 3085 | ed74 3145 | 8b54 ec08 

  0x000001c3987c8448: ;   {metadata('com/sun/prism/d3d/D3DResourceFactory')}
  0x000001c3987c8448: 4181 fa00 | 680e 000f | 858b 0000 

  0x000001c3987c8454: ;   {oop(a 'com/sun/prism/d3d/D3DVramPool'{0x000000070be17160})}
  0x000001c3987c8454: 0048 ba60 | 71e1 0b07 | 0000 0041 | b801 0000 

  0x000001c3987c8464: ;   {optimized virtual_call}
  0x000001c3987c8464: 0066 90e8 

  0x000001c3987c8468: ; ImmutableOopMap {}
                      ;*invokeinterface freeDisposalRequestedAndCheckResources {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@599 (line 127)
  0x000001c3987c8468: 1466 92ff 

  0x000001c3987c846c: ;   {other}
  0x000001c3987c846c: 0f1f 8400 | 5c2c 0078 

  0x000001c3987c8474: ;   {oop(a 'java/util/concurrent/locks/ReentrantLock'{0x000000070bef4218})}
  0x000001c3987c8474: 48ba 1842 | ef0b 0700 

  0x000001c3987c847c: ;   {optimized virtual_call}
  0x000001c3987c847c: 0000 90e8 

  0x000001c3987c8480: ; ImmutableOopMap {}
                      ;*invokevirtual unlock {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@607 (line 130)
  0x000001c3987c8480: fc65 92ff 

  0x000001c3987c8484: ;   {other}
  0x000001c3987c8484: 0f1f 8400 | 742c 0079 | e90f ebff | ff45 85db | 0f85 76ff | ffff baf6 | ffff ff49 

  0x000001c3987c84a0: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c84a0: 8bea 90e8 

  0x000001c3987c84a4: ; ImmutableOopMap {rbp=Oop }
                      ;*invokevirtual getScene {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@567 (line 123)
  0x000001c3987c84a4: 58c1 92ff 

  0x000001c3987c84a8: ;   {other}
  0x000001c3987c84a8: 0f1f 8400 | 982c 007a | ba5e ffff | ff49 8bea 

  0x000001c3987c84b8: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c84b8: 6666 90e8 

  0x000001c3987c84bc: ; ImmutableOopMap {rbp=Oop }
                      ;*invokevirtual setPainting {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@578 (line 124)
  0x000001c3987c84bc: 40c1 92ff 

  0x000001c3987c84c0: ;   {other}
  0x000001c3987c84c0: 0f1f 8400 | b02c 007b | baf6 ffff | ff49 8bea 

  0x000001c3987c84d0: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c84d0: 6666 90e8 

  0x000001c3987c84d4: ; ImmutableOopMap {rbp=Oop }
                      ;*invokevirtual unlock {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@560 (line 120)
  0x000001c3987c84d4: 28c1 92ff 

  0x000001c3987c84d8: ;   {other}
  0x000001c3987c84d8: 0f1f 8400 | c82c 007c | badf ffff 

  0x000001c3987c84e4: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c84e4: ff66 90e8 

  0x000001c3987c84e8: ; ImmutableOopMap {rbp=NarrowOop }
                      ;*invokeinterface getTextureResourcePool {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@593 (line 127)
  0x000001c3987c84e8: 14c1 92ff 

  0x000001c3987c84ec: ;   {other}
  0x000001c3987c84ec: 0f1f 8400 | dc2c 007d | baf6 ffff | ff49 8be9 

  0x000001c3987c84fc: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c84fc: 6666 90e8 

  0x000001c3987c8500: ; ImmutableOopMap {rbp=Oop }
                      ;*invokevirtual isValid {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.ViewPainter::validateStageGraphics@4 (line 427)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@13 (line 52)
  0x000001c3987c8500: fcc0 92ff 

  0x000001c3987c8504: ;   {other}
  0x000001c3987c8504: 0f1f 8400 | f42c 007e | baf6 ffff | ff48 8b6c 

  0x000001c3987c8514: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c8514: 2420 90e8 

  0x000001c3987c8518: ; ImmutableOopMap {rbp=Oop }
                      ;*invokevirtual startsWith {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.Disposer::cleanUp@8 (line 131)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@40 (line 117)
  0x000001c3987c8518: e4c0 92ff 

  0x000001c3987c851c: ;   {other}
  0x000001c3987c851c: 0f1f 8400 | 0c2d 007f | baf6 ffff | ff48 8b6c 

  0x000001c3987c852c: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c852c: 2420 90e8 

  0x000001c3987c8530: ; ImmutableOopMap {rbp=Oop }
                      ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.lang.String::length@4 (line 1519)
                      ; - java.lang.String::startsWith@6 (line 2285)
                      ; - java.lang.String::startsWith@3 (line 2327)
                      ; - com.sun.prism.impl.Disposer::cleanUp@8 (line 131)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@40 (line 117)
  0x000001c3987c8530: ccc0 92ff 

  0x000001c3987c8534: ;   {other}
  0x000001c3987c8534: 0f1f 8400 | 242d 0080 | baf6 ffff | ff48 8b6c | 2420 4489 

  0x000001c3987c8548: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c8548: 4424 24e8 

  0x000001c3987c854c: ; ImmutableOopMap {rbp=Oop [36]=NarrowOop }
                      ;*invokevirtual poll {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.Disposer::disposeUnreachables@4 (line 173)
                      ; - com.sun.prism.impl.Disposer::cleanUp@26 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@40 (line 117)
  0x000001c3987c854c: b0c0 92ff 

  0x000001c3987c8550: ;   {other}
  0x000001c3987c8550: 0f1f 8400 | 402d 0081 | baf6 ffff 

  0x000001c3987c855c: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c855c: ff66 90e8 

  0x000001c3987c8560: ; ImmutableOopMap {rbp=NarrowOop [32]=Oop }
                      ;*invokevirtual isEmpty {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.Disposer::processDisposalQueue@4 (line 189)
                      ; - com.sun.prism.impl.Disposer::cleanUp@32 (line 136)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@40 (line 117)
  0x000001c3987c8560: 9cc0 92ff 

  0x000001c3987c8564: ;   {other}
  0x000001c3987c8564: 0f1f 8400 | 542d 0082 | baf6 ffff | ff49 8be8 

  0x000001c3987c8574: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c8574: 6666 90e8 

  0x000001c3987c8578: ; ImmutableOopMap {rbp=Oop }
                      ;*invokevirtual getScene {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@58 (line 123)
  0x000001c3987c8578: 84c0 92ff 

  0x000001c3987c857c: ;   {other}
  0x000001c3987c857c: 0f1f 8400 | 6c2d 0083 | ba5e ffff | ff49 8be8 

  0x000001c3987c858c: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c858c: 6666 90e8 

  0x000001c3987c8590: ; ImmutableOopMap {rbp=Oop }
                      ;*invokevirtual setPainting {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@69 (line 124)
  0x000001c3987c8590: 6cc0 92ff 

  0x000001c3987c8594: ;   {other}
  0x000001c3987c8594: 0f1f 8400 | 842d 0084 | baf6 ffff 

  0x000001c3987c85a0: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c85a0: ff66 90e8 

  0x000001c3987c85a4: ; ImmutableOopMap {}
                      ;*getfield next {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.impl.BaseResourcePool::freeDisposalRequestedAndCheckResources@8 (line 280)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@90 (line 127)
  0x000001c3987c85a4: 58c0 92ff 

  0x000001c3987c85a8: ;   {other}
  0x000001c3987c85a8: 0f1f 8400 | 982d 0085 | baf6 ffff 

  0x000001c3987c85b4: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c85b4: ff66 90e8 

  0x000001c3987c85b8: ; ImmutableOopMap {}
                      ;*invokevirtual release {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.concurrent.locks.ReentrantLock::unlock@5 (line 494)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@98 (line 130)
  0x000001c3987c85b8: 44c0 92ff 

  0x000001c3987c85bc: ;   {other}
  0x000001c3987c85bc: 0f1f 8400 | ac2d 0086 | ba45 ffff | ff49 8be9 | 4489 5424 

  0x000001c3987c85d0: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c85d0: 2866 90e8 

  0x000001c3987c85d4: ; ImmutableOopMap {rbp=Oop [40]=NarrowOop }
                      ;*ifnull {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.tk.quantum.SceneState::isValid@11 (line 86)
                      ; - com.sun.javafx.tk.quantum.ViewPainter::validateStageGraphics@4 (line 427)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@13 (line 52)
  0x000001c3987c85d4: 28c0 92ff 

  0x000001c3987c85d8: ;   {other}
  0x000001c3987c85d8: 0f1f 8400 | c82d 0087 | baf6 ffff | ff48 8b6c 

  0x000001c3987c85e8: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c85e8: 2420 90e8 

  0x000001c3987c85ec: ; ImmutableOopMap {rbp=Oop }
                      ;*invokevirtual testLostStateAndReset {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.d3d.D3DResourceFactory::isDeviceReady@17 (line 120)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@136 (line 71)
  0x000001c3987c85ec: 10c0 92ff 

  0x000001c3987c85f0: ;   {other}
  0x000001c3987c85f0: 0f1f 8400 | e02d 0088 | baf6 ffff | ff48 8b6c 

  0x000001c3987c8600: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c8600: 2420 90e8 

  0x000001c3987c8604: ; ImmutableOopMap {rbp=Oop }
                      ;*invokevirtual getRenderWidth {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.d3d.D3DSwapChain::lockResources@1 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@236 (line 77)
  0x000001c3987c8604: f8bf 92ff 

  0x000001c3987c8608: ;   {other}
  0x000001c3987c8608: 0f1f 8400 | f82d 0089 | baf6 ffff | ff48 8b6c 

  0x000001c3987c8618: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c8618: 2420 90e8 

  0x000001c3987c861c: ; ImmutableOopMap {rbp=Oop }
                      ;*invokevirtual getContentWidth {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.d3d.D3DSwapChain::lockResources@8 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@236 (line 77)
  0x000001c3987c861c: e0bf 92ff 

  0x000001c3987c8620: ;   {other}
  0x000001c3987c8620: 0f1f 8400 | 102e 008a | baf6 ffff | ff48 8b6c 

  0x000001c3987c8630: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c8630: 2420 90e8 

  0x000001c3987c8634: ; ImmutableOopMap {rbp=Oop }
                      ;*invokevirtual lock {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.BaseTexture::lock@4 (line 252)
                      ; - com.sun.prism.d3d.D3DSwapChain::lockResources@58 (line 142)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@236 (line 77)
  0x000001c3987c8634: c8bf 92ff 

  0x000001c3987c8638: ;   {other}
  0x000001c3987c8638: 0f1f 8400 | 282e 008b | baf6 ffff | ff48 8b6c 

  0x000001c3987c8648: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c8648: 2420 90e8 

  0x000001c3987c864c: ; ImmutableOopMap {rbp=Oop }
                      ;*invokevirtual getContext {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.d3d.D3DSwapChain::getContext@4 (line 130)
                      ; - com.sun.prism.d3d.D3DSwapChain::createGraphics@5 (line 148)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@304 (line 88)
  0x000001c3987c864c: b0bf 92ff 

  0x000001c3987c8650: ;   {other}
  0x000001c3987c8650: 0f1f 8400 | 402e 008c | baf6 ffff | ff48 8b6c | 2420 c5fa | 114c 2420 | c5fa 1144 

  0x000001c3987c866c: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c866c: 2424 90e8 

  0x000001c3987c8670: ; ImmutableOopMap {rbp=Oop }
                      ;*invokeinterface scale {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.d3d.D3DSwapChain::createGraphics@21 (line 149)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@304 (line 88)
  0x000001c3987c8670: 8cbf 92ff 

  0x000001c3987c8674: ;   {other}
  0x000001c3987c8674: 0f1f 8400 | 642e 008d | baf6 ffff | ff49 8bea | 4889 4424 

  0x000001c3987c8688: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c8688: 2066 90e8 

  0x000001c3987c868c: ; ImmutableOopMap {rbp=Oop [32]=Oop }
                      ;*invokevirtual getScene {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@315 (line 90)
  0x000001c3987c868c: 70bf 92ff 

  0x000001c3987c8690: ;   {other}
  0x000001c3987c8690: 0f1f 8400 | 802e 008e | baf6 ffff | ff48 8b6c 

  0x000001c3987c86a0: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c86a0: 2420 90e8 

  0x000001c3987c86a4: ; ImmutableOopMap {rbp=Oop [48]=NarrowOop }
                      ;*invokeinterface prepare {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@355 (line 99)
  0x000001c3987c86a4: 58bf 92ff 

  0x000001c3987c86a8: ;   {other}
  0x000001c3987c86a8: 0f1f 8400 | 982e 008f | baf6 ffff | ff48 8b6c 

  0x000001c3987c86b8: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c86b8: 2420 90e8 

  0x000001c3987c86bc: ; ImmutableOopMap {rbp=Oop [48]=NarrowOop }
                      ;*invokevirtual getContext {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.d3d.D3DSwapChain::getContext@4 (line 130)
                      ; - com.sun.prism.d3d.D3DSwapChain::prepare@1 (line 59)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@355 (line 99)
  0x000001c3987c86bc: 40bf 92ff 

  0x000001c3987c86c0: ;   {other}
  0x000001c3987c86c0: 0f1f 8400 | b02e 0090 | baf6 ffff | ff48 8b6c 

  0x000001c3987c86d0: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c86d0: 2420 90e8 

  0x000001c3987c86d4: ; ImmutableOopMap {rbp=Oop [48]=NarrowOop }
                      ;*invokevirtual flushVertexBuffer {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.d3d.D3DSwapChain::prepare@6 (line 60)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@355 (line 99)
  0x000001c3987c86d4: 28bf 92ff 

  0x000001c3987c86d8: ;   {other}
  0x000001c3987c86d8: 0f1f 8400 | c82e 0091 | baf6 ffff | ff48 8b6c 

  0x000001c3987c86e8: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c86e8: 2420 90e8 

  0x000001c3987c86ec: ; ImmutableOopMap {rbp=Oop [48]=NarrowOop }
                      ;*invokevirtual flush {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.BaseContext::flushVertexBuffer@12 (line 107)
                      ; - com.sun.prism.d3d.D3DSwapChain::prepare@6 (line 60)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@355 (line 99)
  0x000001c3987c86ec: 10bf 92ff 

  0x000001c3987c86f0: ;   {other}
  0x000001c3987c86f0: 0f1f 8400 | e02e 0092 | baf4 ffff | ff48 8b6c 

  0x000001c3987c8700: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c8700: 2420 90e8 

  0x000001c3987c8704: ; ImmutableOopMap {rbp=Oop [48]=NarrowOop [52]=NarrowOop [64]=Oop }
                      ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.d3d.D3DSwapChain::prepare@14 (line 61)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@355 (line 99)
  0x000001c3987c8704: f8be 92ff 

  0x000001c3987c8708: ;   {other}
  0x000001c3987c8708: 0f1f 8400 | f82e 0093 | baf6 ffff | ff48 8b6c 

  0x000001c3987c8718: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c8718: 2420 90e8 

  0x000001c3987c871c: ; ImmutableOopMap {rbp=Oop [48]=NarrowOop }
                      ;*invokevirtual getContentWidth {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.d3d.D3DSwapChain::prepare@28 (line 65)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@355 (line 99)
  0x000001c3987c871c: e0be 92ff 

  0x000001c3987c8720: ;   {other}
  0x000001c3987c8720: 0f1f 8400 | 102f 0094 | baf6 ffff | ff48 8b6c 

  0x000001c3987c8730: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c8730: 2420 90e8 

  0x000001c3987c8734: ; ImmutableOopMap {rbp=Oop [48]=NarrowOop }
                      ;*invokevirtual getResource {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.d3d.D3DSwapChain::getPhysicalWidth@4 (line 98)
                      ; - com.sun.prism.d3d.D3DSwapChain::getContentWidth@1 (line 108)
                      ; - com.sun.prism.d3d.D3DSwapChain::prepare@43 (line 67)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@355 (line 99)
  0x000001c3987c8734: c8be 92ff 

  0x000001c3987c8738: ;   {other}
  0x000001c3987c8738: 0f1f 8400 | 282f 0095 | baf6 ffff | ff48 8b6c 

  0x000001c3987c8748: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c8748: 2420 90e8 

  0x000001c3987c874c: ; ImmutableOopMap {rbp=Oop [48]=NarrowOop }
                      ;*invokevirtual getResource {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.d3d.D3DSwapChain::getPhysicalHeight@4 (line 103)
                      ; - com.sun.prism.d3d.D3DSwapChain::getContentHeight@1 (line 113)
                      ; - com.sun.prism.d3d.D3DSwapChain::prepare@49 (line 68)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@355 (line 99)
  0x000001c3987c874c: b0be 92ff 

  0x000001c3987c8750: ;   {other}
  0x000001c3987c8750: 0f1f 8400 | 402f 0096 | ba5e ffff | ff48 8b6c 

  0x000001c3987c8760: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c8760: 2420 90e8 

  0x000001c3987c8764: ; ImmutableOopMap {rbp=Oop [48]=NarrowOop }
                      ;*invokevirtual getResource {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.d3d.D3DRTTexture::isMSAA@7 (line 180)
                      ; - com.sun.prism.d3d.D3DSwapChain::isMSAA@11 (line 184)
                      ; - com.sun.prism.d3d.D3DSwapChain::prepare@55 (line 69)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@355 (line 99)
  0x000001c3987c8764: 98be 92ff 

  0x000001c3987c8768: ;   {other}
  0x000001c3987c8768: 0f1f 8400 | 582f 0097 | baf4 ffff | ff48 8b6c | 2420 448b | 5424 3044 | 8954 2420 | 4c8b 5424 
  0x000001c3987c8788: 404c 8954 | 2428 448b | 5c24 3444 | 895c 2424 | 8944 2444 

  0x000001c3987c879c: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c879c: 6666 90e8 

  0x000001c3987c87a0: ; ImmutableOopMap {rbp=Oop [32]=NarrowOop [36]=NarrowOop [40]=Oop [88]=Oop }
                      ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.d3d.D3DRTTexture::isMSAA@10 (line 180)
                      ; - com.sun.prism.d3d.D3DSwapChain::isMSAA@11 (line 184)
                      ; - com.sun.prism.d3d.D3DSwapChain::prepare@55 (line 69)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@355 (line 99)
  0x000001c3987c87a0: 5cbe 92ff 

  0x000001c3987c87a4: ;   {other}
  0x000001c3987c87a4: 0f1f 8400 | 942f 0098 | baf6 ffff | ff48 8b6c 

  0x000001c3987c87b4: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c87b4: 2420 90e8 

  0x000001c3987c87b8: ; ImmutableOopMap {rbp=Oop [48]=NarrowOop }
                      ;*invokevirtual flush {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.BaseContext::flushVertexBuffer@12 (line 107)
                      ; - com.sun.prism.d3d.D3DSwapChain::prepare@121 (line 76)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@355 (line 99)
  0x000001c3987c87b8: 44be 92ff 

  0x000001c3987c87bc: ;   {other}
  0x000001c3987c87bc: 0f1f 8400 | ac2f 0099 | baf6 ffff | ff48 8b6c 

  0x000001c3987c87cc: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c87cc: 2420 90e8 

  0x000001c3987c87d0: ; ImmutableOopMap {rbp=Oop [48]=NarrowOop }
                      ;*invokevirtual unlock {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.d3d.D3DSwapChain::prepare@128 (line 77)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@355 (line 99)
  0x000001c3987c87d0: 2cbe 92ff 

  0x000001c3987c87d4: ;   {other}
  0x000001c3987c87d4: 0f1f 8400 | c42f 009a | baf6 ffff | ff48 8b6c 

  0x000001c3987c87e4: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c87e4: 2420 90e8 

  0x000001c3987c87e8: ; ImmutableOopMap {rbp=Oop [48]=NarrowOop }
                      ;*invokevirtual unlock {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.BaseTexture::unlock@4 (line 272)
                      ; - com.sun.prism.d3d.D3DSwapChain::prepare@128 (line 77)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@355 (line 99)
  0x000001c3987c87e8: 14be 92ff 

  0x000001c3987c87ec: ;   {other}
  0x000001c3987c87ec: 0f1f 8400 | dc2f 009b | baf6 ffff | ff49 8be8 

  0x000001c3987c87fc: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c87fc: 6666 90e8 

  0x000001c3987c8800: ; ImmutableOopMap {rbp=Oop }
                      ;*invokeinterface present {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@451 (line 107)
  0x000001c3987c8800: fcbd 92ff 

  0x000001c3987c8804: ;   {other}
  0x000001c3987c8804: 0f1f 8400 | f42f 009c | baf6 ffff | ff49 8be8 

  0x000001c3987c8814: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c8814: 6666 90e8 

  0x000001c3987c8818: ; ImmutableOopMap {rbp=Oop }
                      ;*invokevirtual getContext {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.d3d.D3DSwapChain::getContext@4 (line 130)
                      ; - com.sun.prism.d3d.D3DSwapChain::present@1 (line 83)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@451 (line 107)
  0x000001c3987c8818: e4bd 92ff 

  0x000001c3987c881c: ;   {other}
  0x000001c3987c881c: 0f1f 8400 | 0c30 009d | baf6 ffff | ff48 8b6c 

  0x000001c3987c882c: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c882c: 2420 90e8 

  0x000001c3987c8830: ; ImmutableOopMap {rbp=Oop }
                      ;*invokevirtual isDisposed {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.d3d.D3DSwapChain::present@6 (line 84)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@451 (line 107)
  0x000001c3987c8830: ccbd 92ff 

  0x000001c3987c8834: ;   {other}
  0x000001c3987c8834: 0f1f 8400 | 2430 009e | baf6 ffff | ff48 8b6c 

  0x000001c3987c8844: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c8844: 2420 90e8 

  0x000001c3987c8848: ; ImmutableOopMap {rbp=Oop }
                      ;*invokevirtual startsWith {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.Disposer::cleanUp@8 (line 131)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@473 (line 117)
  0x000001c3987c8848: b4bd 92ff 

  0x000001c3987c884c: ;   {other}
  0x000001c3987c884c: 0f1f 8400 | 3c30 009f | baf6 ffff | ff48 8b6c 

  0x000001c3987c885c: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c885c: 2420 90e8 

  0x000001c3987c8860: ; ImmutableOopMap {rbp=Oop }
                      ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.lang.String::length@4 (line 1519)
                      ; - java.lang.String::startsWith@6 (line 2285)
                      ; - java.lang.String::startsWith@3 (line 2327)
                      ; - com.sun.prism.impl.Disposer::cleanUp@8 (line 131)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@473 (line 117)
  0x000001c3987c8860: 9cbd 92ff 

  0x000001c3987c8864: ;   {other}
  0x000001c3987c8864: 0f1f 8400 | 5430 00a0 | baf6 ffff | ff48 8b6c | 2420 4489 

  0x000001c3987c8878: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c8878: 5424 24e8 

  0x000001c3987c887c: ; ImmutableOopMap {rbp=Oop [36]=NarrowOop }
                      ;*invokevirtual poll {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.Disposer::disposeUnreachables@4 (line 173)
                      ; - com.sun.prism.impl.Disposer::cleanUp@26 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@473 (line 117)
  0x000001c3987c887c: 80bd 92ff 

  0x000001c3987c8880: ;   {other}
  0x000001c3987c8880: 0f1f 8400 | 7030 00a1 | baf6 ffff | ff48 8b6c | 2420 4489 

  0x000001c3987c8894: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c8894: 5424 20e8 

  0x000001c3987c8898: ; ImmutableOopMap {rbp=Oop [32]=NarrowOop }
                      ;*invokevirtual isEmpty {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.Disposer::processDisposalQueue@4 (line 189)
                      ; - com.sun.prism.impl.Disposer::cleanUp@32 (line 136)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@473 (line 117)
  0x000001c3987c8898: 64bd 92ff 

  0x000001c3987c889c: ;   {other}
  0x000001c3987c889c: 0f1f 8400 | 8c30 00a2 | baf6 ffff | ff49 8be9 

  0x000001c3987c88ac: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c88ac: 6666 90e8 

  0x000001c3987c88b0: ; ImmutableOopMap {rbp=Oop }
                      ;*invokevirtual unlock {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@484 (line 120)
  0x000001c3987c88b0: 4cbd 92ff 

  0x000001c3987c88b4: ;   {other}
  0x000001c3987c88b4: 0f1f 8400 | a430 00a3 | baf6 ffff 

  0x000001c3987c88c0: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c88c0: ff66 90e8 

  0x000001c3987c88c4: ; ImmutableOopMap {rbp=Oop }
                      ;*invokevirtual getScene {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@491 (line 123)
  0x000001c3987c88c4: 38bd 92ff 

  0x000001c3987c88c8: ;   {other}
  0x000001c3987c88c8: 0f1f 8400 | b830 00a4 | ba5e ffff 

  0x000001c3987c88d4: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c88d4: ff66 90e8 

  0x000001c3987c88d8: ; ImmutableOopMap {rbp=Oop }
                      ;*invokevirtual setPainting {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@502 (line 124)
  0x000001c3987c88d8: 24bd 92ff 

  0x000001c3987c88dc: ;   {other}
  0x000001c3987c88dc: 0f1f 8400 | cc30 00a5 | baf6 ffff 

  0x000001c3987c88e8: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c88e8: ff66 90e8 

  0x000001c3987c88ec: ; ImmutableOopMap {}
                      ;*getfield next {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.impl.BaseResourcePool::freeDisposalRequestedAndCheckResources@8 (line 280)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@523 (line 127)
  0x000001c3987c88ec: 10bd 92ff 

  0x000001c3987c88f0: ;   {other}
  0x000001c3987c88f0: 0f1f 8400 | e030 00a6 | baf6 ffff 

  0x000001c3987c88fc: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c88fc: ff66 90e8 

  0x000001c3987c8900: ; ImmutableOopMap {}
                      ;*invokevirtual release {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.concurrent.locks.ReentrantLock::unlock@5 (line 494)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@531 (line 130)
  0x000001c3987c8900: fcbc 92ff 

  0x000001c3987c8904: ;   {other}
  0x000001c3987c8904: 0f1f 8400 | f430 00a7 | ba45 ffff | ff41 8beb 

  0x000001c3987c8914: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c8914: 6666 90e8 

  0x000001c3987c8918: ; ImmutableOopMap {rbp=NarrowOop }
                      ;*ifnull {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.tk.quantum.PresentingPainter::run@77 (line 126)
  0x000001c3987c8918: e4bc 92ff 

  0x000001c3987c891c: ;   {other}
  0x000001c3987c891c: 0f1f 8400 | 0c31 00a8 | ba45 ffff 

  0x000001c3987c8928: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c8928: ff66 90e8 

  0x000001c3987c892c: ; ImmutableOopMap {rbp=NarrowOop [32]=Oop }
                      ;*ifnonnull {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.tk.quantum.PresentingPainter::run@115 (line 68)
  0x000001c3987c892c: d0bc 92ff 

  0x000001c3987c8930: ;   {other}
  0x000001c3987c8930: 0f1f 8400 | 2031 00a9 | ba45 ffff | ff49 8bea | 4489 4c24 

  0x000001c3987c8944: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c8944: 2066 90e8 

  0x000001c3987c8948: ; ImmutableOopMap {rbp=Oop [32]=NarrowOop }
                      ;*ifnull {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.tk.quantum.PresentingPainter::run@225 (line 77)
  0x000001c3987c8948: b4bc 92ff 

  0x000001c3987c894c: ;   {other}
  0x000001c3987c894c: 0f1f 8400 | 3c31 00aa | ba45 ffff 

  0x000001c3987c8958: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c8958: ff66 90e8 

  0x000001c3987c895c: ; ImmutableOopMap {rbp=NarrowOop [32]=Oop }
                      ;*ifnull {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.d3d.D3DTextureResource::isValid@4 (line 46)
                      ; - com.sun.prism.impl.BaseTexture::isSurfaceLost@4 (line 292)
                      ; - com.sun.prism.d3d.D3DSwapChain::lockResources@65 (line 143)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@236 (line 77)
  0x000001c3987c895c: a0bc 92ff 

  0x000001c3987c8960: ;   {other}
  0x000001c3987c8960: 0f1f 8400 | 5031 00ab | ba45 ffff | ff48 8b6c | 2420 448b | 5424 3044 | 8954 2420 | 4c8b 5424 
  0x000001c3987c8980: 404c 8954 | 2428 448b | 5c24 3444 | 895c 2424 | 448b 5424 | 4844 8954 | 2438 8944 | 2444 897c 
  0x000001c3987c89a0: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c89a0: 2448 90e8 

  0x000001c3987c89a4: ; ImmutableOopMap {rbp=Oop [32]=NarrowOop [36]=NarrowOop [40]=Oop [72]=NarrowOop [88]=Oop }
                      ;*ifnull {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.d3d.D3DSwapChain::isMSAA@4 (line 184)
                      ; - com.sun.prism.d3d.D3DSwapChain::prepare@55 (line 69)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@355 (line 99)
  0x000001c3987c89a4: 58bc 92ff 

  0x000001c3987c89a8: ;   {other}
  0x000001c3987c89a8: 0f1f 8400 | 9831 00ac | ba45 ffff | ff49 8be9 | 894c 2420 

  0x000001c3987c89bc: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c89bc: 6666 90e8 

  0x000001c3987c89c0: ; ImmutableOopMap {rbp=Oop [32]=NarrowOop }
                      ;*ifnull {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.PresentableState::unlock@4 (line 296)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@484 (line 120)
  0x000001c3987c89c0: 3cbc 92ff 

  0x000001c3987c89c4: ;   {other}
  0x000001c3987c89c4: 0f1f 8400 | b431 00ad | ba45 ffff 

  0x000001c3987c89d0: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c89d0: ff66 90e8 

  0x000001c3987c89d4: ; ImmutableOopMap {rbp=NarrowOop }
                      ;*ifnull {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.tk.quantum.PresentingPainter::run@510 (line 126)
  0x000001c3987c89d4: 28bc 92ff 

  0x000001c3987c89d8: ;   {other}
  0x000001c3987c89d8: 0f1f 8400 | c831 00ae | baf6 ffff | ff48 8b6c | 2420 897c | 2424 4489 | 4c24 2844 | 8954 242c 
  0x000001c3987c89f8: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c89f8: 6666 90e8 

  0x000001c3987c89fc: ; ImmutableOopMap {rbp=Oop [36]=NarrowOop [40]=NarrowOop [48]=NarrowOop }
                      ;*invokevirtual drawQuads {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.VertexBuffer::flush@23 (line 98)
                      ; - com.sun.prism.impl.BaseContext::flushVertexBuffer@12 (line 107)
                      ; - com.sun.prism.d3d.D3DSwapChain::prepare@6 (line 60)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@355 (line 99)
  0x000001c3987c89fc: 00bc 92ff 

  0x000001c3987c8a00: ;   {other}
  0x000001c3987c8a00: 0f1f 8400 | f031 00af | baf6 ffff | ff48 8b6c | 2420 897c | 2424 894c | 2428 4489 

  0x000001c3987c8a1c: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c8a1c: 5424 2ce8 

  0x000001c3987c8a20: ; ImmutableOopMap {rbp=Oop [36]=NarrowOop [40]=NarrowOop [48]=NarrowOop }
                      ;*invokevirtual drawQuads {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.VertexBuffer::flush@23 (line 98)
                      ; - com.sun.prism.impl.BaseContext::flushVertexBuffer@12 (line 107)
                      ; - com.sun.prism.d3d.D3DSwapChain::prepare@121 (line 76)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@355 (line 99)
  0x000001c3987c8a20: dcbb 92ff 

  0x000001c3987c8a24: ;   {other}
  0x000001c3987c8a24: 0f1f 8400 | 1432 00b0 | ba45 ffff 

  0x000001c3987c8a30: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c8a30: ff66 90e8 

  0x000001c3987c8a34: ; ImmutableOopMap {rbp=NarrowOop }
                      ;*ifnull {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.concurrent.locks.LockSupport::unpark@1 (line 177)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::signalNext@30 (line 645)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::release@12 (line 1060)
                      ; - java.util.concurrent.locks.ReentrantLock::unlock@5 (line 494)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@98 (line 130)
  0x000001c3987c8a34: c8bb 92ff 

  0x000001c3987c8a38: ;   {other}
  0x000001c3987c8a38: 0f1f 8400 | 2832 00b1 | ba45 ffff 

  0x000001c3987c8a44: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c8a44: ff66 90e8 

  0x000001c3987c8a48: ; ImmutableOopMap {rbp=NarrowOop }
                      ;*ifnull {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.concurrent.locks.LockSupport::unpark@1 (line 177)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::signalNext@30 (line 645)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::release@12 (line 1060)
                      ; - java.util.concurrent.locks.ReentrantLock::unlock@5 (line 494)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@531 (line 130)
  0x000001c3987c8a48: b4bb 92ff 

  0x000001c3987c8a4c: ;   {other}
  0x000001c3987c8a4c: 0f1f 8400 | 3c32 00b2 | 488b d0e9 | 2e01 0000 | 488b d0e9 | 2601 0000 | 488b d0e9 | 1e01 0000 
  0x000001c3987c8a6c: 488b d0e9 | 1601 0000 | 488b d0e9 | 0e01 0000 | 488b d0e9 | 0601 0000 | 488b d0e9 | fe00 0000 
  0x000001c3987c8a8c: 4889 4424 

  0x000001c3987c8a90: ;   {static_call}
  0x000001c3987c8a90: 2866 90e8 

  0x000001c3987c8a94: ; ImmutableOopMap {[32]=Oop [40]=Oop }
                      ;*invokestatic cleanUp {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@615 (line 117)
  0x000001c3987c8a94: e865 92ff 

  0x000001c3987c8a98: ;   {other}
  0x000001c3987c8a98: 0f1f 8400 | 8832 00b3 | 4c8b 5424 | 2045 8b5a | 2885 ed0f | 84e6 0000 | 0045 85db | 0f84 1601 
  0x000001c3987c8ab8: 0000 498b | ea4b 8d14 

  0x000001c3987c8ac0: ;   {optimized virtual_call}
  0x000001c3987c8ac0: dc66 90e8 

  0x000001c3987c8ac4: ; ImmutableOopMap {rbp=Oop [40]=Oop }
                      ;*invokevirtual unlock {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@626 (line 120)
  0x000001c3987c8ac4: b85f 92ff 

  0x000001c3987c8ac8: ;   {other}
  0x000001c3987c8ac8: 0f1f 8400 | b832 00b4 | 4c8b d545 | 8b5a 2845 | 85db 0f84 | c000 0000 | 478b 5cdc | 6c45 85db 
  0x000001c3987c8ae8: 0f84 ca00 | 0000 498b | ea4b 8d14 | dc45 33c0 

  0x000001c3987c8af8: ;   {optimized virtual_call}
  0x000001c3987c8af8: 6666 90e8 

  0x000001c3987c8afc: ; ImmutableOopMap {rbp=Oop [40]=Oop }
                      ;*invokevirtual setPainting {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@644 (line 124)
  0x000001c3987c8afc: 805f 92ff 

  0x000001c3987c8b00: ;   {other}
  0x000001c3987c8b00: 0f1f 8400 | f032 00b5 | 4c8b d541 | 8b6a 3085 | ed74 3545 | 8b5c ec08 

  0x000001c3987c8b18: ;   {metadata('com/sun/prism/d3d/D3DResourceFactory')}
  0x000001c3987c8b18: 4181 fb00 | 680e 000f | 85c3 0000 

  0x000001c3987c8b24: ;   {oop(a 'com/sun/prism/d3d/D3DVramPool'{0x000000070be17160})}
  0x000001c3987c8b24: 0048 ba60 | 71e1 0b07 | 0000 0041 | b801 0000 | 0048 8b6c 

  0x000001c3987c8b38: ;   {optimized virtual_call}
  0x000001c3987c8b38: 2428 90e8 

  0x000001c3987c8b3c: ; ImmutableOopMap {rbp=Oop [40]=Oop }
                      ;*invokeinterface freeDisposalRequestedAndCheckResources {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@665 (line 127)
  0x000001c3987c8b3c: 405f 92ff 

  0x000001c3987c8b40: ;   {other}
  0x000001c3987c8b40: 0f1f 8400 | 3033 00b6 

  0x000001c3987c8b48: ;   {oop(a 'java/util/concurrent/locks/ReentrantLock'{0x000000070bef4218})}
  0x000001c3987c8b48: 48ba 1842 | ef0b 0700 | 0000 488b 

  0x000001c3987c8b54: ;   {optimized virtual_call}
  0x000001c3987c8b54: 6c24 28e8 

  0x000001c3987c8b58: ; ImmutableOopMap {rbp=Oop }
                      ;*invokevirtual unlock {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@673 (line 130)
  0x000001c3987c8b58: 245f 92ff 

  0x000001c3987c8b5c: ;   {other}
  0x000001c3987c8b5c: 0f1f 8400 | 4c33 00b7 | 488b d5eb | 2148 8bd0 | eb1c 488b | d0eb 1748 | 8bd0 eb12 | 488b d0eb 
  0x000001c3987c8b7c: 0d48 8bd0 | eb08 488b | d0eb 0348 | 8bd0 4881 | c480 0000 

  0x000001c3987c8b90: ;   {runtime_call _rethrow_Java}
  0x000001c3987c8b90: 005d e9e9 | ed9e ff45 | 85db 0f85 | 40ff ffff | baf6 ffff | ff49 8bea 

  0x000001c3987c8ba8: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c8ba8: 6666 90e8 

  0x000001c3987c8bac: ; ImmutableOopMap {rbp=Oop [40]=Oop }
                      ;*invokevirtual getScene {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@633 (line 123)
  0x000001c3987c8bac: 50ba 92ff 

  0x000001c3987c8bb0: ;   {other}
  0x000001c3987c8bb0: 0f1f 8400 | a033 00b8 | ba5e ffff | ff49 8bea 

  0x000001c3987c8bc0: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c8bc0: 6666 90e8 

  0x000001c3987c8bc4: ; ImmutableOopMap {rbp=Oop [40]=Oop }
                      ;*invokevirtual setPainting {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@644 (line 124)
  0x000001c3987c8bc4: 38ba 92ff 

  0x000001c3987c8bc8: ;   {other}
  0x000001c3987c8bc8: 0f1f 8400 | b833 00b9 | baf6 ffff | ff49 8bea 

  0x000001c3987c8bd8: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c8bd8: 6666 90e8 

  0x000001c3987c8bdc: ; ImmutableOopMap {rbp=Oop [40]=Oop }
                      ;*invokevirtual unlock {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@626 (line 120)
  0x000001c3987c8bdc: 20ba 92ff 

  0x000001c3987c8be0: ;   {other}
  0x000001c3987c8be0: 0f1f 8400 | d033 00ba | badf ffff 

  0x000001c3987c8bec: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987c8bec: ff66 90e8 

  0x000001c3987c8bf0: ; ImmutableOopMap {rbp=NarrowOop [40]=Oop }
                      ;*invokeinterface getTextureResourcePool {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@659 (line 127)
  0x000001c3987c8bf0: 0cba 92ff 

  0x000001c3987c8bf4: ;   {other}
  0x000001c3987c8bf4: 0f1f 8400 | e433 00bb 

  0x000001c3987c8bfc: ;   {internal_word}
  0x000001c3987c8bfc: 49ba a86f | 7c98 c301 | 0000 4d89 | 9768 0400 

  0x000001c3987c8c0c: ;   {runtime_call SafepointBlob}
  0x000001c3987c8c0c: 00e9 eeca 

  0x000001c3987c8c10: ;   {runtime_call StubRoutines (final stubs)}
  0x000001c3987c8c10: 92ff e849 | c190 ffe9 | 82d2 ffff | f4f4 f4f4 
[Stub Code]
  0x000001c3987c8c20: ;   {no_reloc}
  0x000001c3987c8c20: 48bb 0000 | 0000 0000 

  0x000001c3987c8c28: ;   {runtime_call}
  0x000001c3987c8c28: 0000 e9fb 

  0x000001c3987c8c2c: ;   {static_stub}
  0x000001c3987c8c2c: ffff ff48 | bb00 0000 | 0000 0000 

  0x000001c3987c8c38: ;   {runtime_call}
  0x000001c3987c8c38: 00e9 fbff 

  0x000001c3987c8c3c: ;   {static_stub}
  0x000001c3987c8c3c: ffff 48bb | 0000 0000 | 0000 0000 

  0x000001c3987c8c48: ;   {runtime_call}
  0x000001c3987c8c48: e9fb ffff 

  0x000001c3987c8c4c: ;   {static_stub}
  0x000001c3987c8c4c: ff48 bb00 | 0000 0000 

  0x000001c3987c8c54: ;   {runtime_call}
  0x000001c3987c8c54: 0000 00e9 | fbff ffff 

  0x000001c3987c8c5c: ;   {static_stub}
  0x000001c3987c8c5c: 48bb 0000 | 0000 0000 

  0x000001c3987c8c64: ;   {runtime_call}
  0x000001c3987c8c64: 0000 e9fb 

  0x000001c3987c8c68: ;   {static_stub}
  0x000001c3987c8c68: ffff ff48 | bb00 0000 | 0000 0000 

  0x000001c3987c8c74: ;   {runtime_call}
  0x000001c3987c8c74: 00e9 fbff 

  0x000001c3987c8c78: ;   {static_stub}
  0x000001c3987c8c78: ffff 48bb | 0000 0000 | 0000 0000 

  0x000001c3987c8c84: ;   {runtime_call}
  0x000001c3987c8c84: e9fb ffff 

  0x000001c3987c8c88: ;   {static_stub}
  0x000001c3987c8c88: ff48 bb00 | 0000 0000 

  0x000001c3987c8c90: ;   {runtime_call}
  0x000001c3987c8c90: 0000 00e9 | fbff ffff 

  0x000001c3987c8c98: ;   {static_stub}
  0x000001c3987c8c98: 48bb 0000 | 0000 0000 

  0x000001c3987c8ca0: ;   {runtime_call}
  0x000001c3987c8ca0: 0000 e9fb 

  0x000001c3987c8ca4: ;   {static_stub}
  0x000001c3987c8ca4: ffff ff48 | bb00 0000 | 0000 0000 

  0x000001c3987c8cb0: ;   {runtime_call}
  0x000001c3987c8cb0: 00e9 fbff 

  0x000001c3987c8cb4: ;   {static_stub}
  0x000001c3987c8cb4: ffff 48bb | 0000 0000 | 0000 0000 

  0x000001c3987c8cc0: ;   {runtime_call}
  0x000001c3987c8cc0: e9fb ffff 

  0x000001c3987c8cc4: ;   {static_stub}
  0x000001c3987c8cc4: ff48 bb00 | 0000 0000 

  0x000001c3987c8ccc: ;   {runtime_call}
  0x000001c3987c8ccc: 0000 00e9 | fbff ffff 

  0x000001c3987c8cd4: ;   {static_stub}
  0x000001c3987c8cd4: 48bb 0000 | 0000 0000 

  0x000001c3987c8cdc: ;   {runtime_call}
  0x000001c3987c8cdc: 0000 e9fb 

  0x000001c3987c8ce0: ;   {static_stub}
  0x000001c3987c8ce0: ffff ff48 | bb00 0000 | 0000 0000 

  0x000001c3987c8cec: ;   {runtime_call}
  0x000001c3987c8cec: 00e9 fbff 

  0x000001c3987c8cf0: ;   {static_stub}
  0x000001c3987c8cf0: ffff 48bb | 0000 0000 | 0000 0000 

  0x000001c3987c8cfc: ;   {runtime_call}
  0x000001c3987c8cfc: e9fb ffff 

  0x000001c3987c8d00: ;   {static_stub}
  0x000001c3987c8d00: ff48 bb00 | 0000 0000 

  0x000001c3987c8d08: ;   {runtime_call}
  0x000001c3987c8d08: 0000 00e9 | fbff ffff 

  0x000001c3987c8d10: ;   {static_stub}
  0x000001c3987c8d10: 48bb 0000 | 0000 0000 

  0x000001c3987c8d18: ;   {runtime_call}
  0x000001c3987c8d18: 0000 e9fb 

  0x000001c3987c8d1c: ;   {static_stub}
  0x000001c3987c8d1c: ffff ff48 | bb00 0000 | 0000 0000 

  0x000001c3987c8d28: ;   {runtime_call}
  0x000001c3987c8d28: 00e9 fbff 

  0x000001c3987c8d2c: ;   {static_stub}
  0x000001c3987c8d2c: ffff 48bb | 0000 0000 | 0000 0000 

  0x000001c3987c8d38: ;   {runtime_call}
  0x000001c3987c8d38: e9fb ffff 

  0x000001c3987c8d3c: ;   {static_stub}
  0x000001c3987c8d3c: ff48 bb00 | 0000 0000 

  0x000001c3987c8d44: ;   {runtime_call}
  0x000001c3987c8d44: 0000 00e9 | fbff ffff 

  0x000001c3987c8d4c: ;   {static_stub}
  0x000001c3987c8d4c: 48bb 0000 | 0000 0000 

  0x000001c3987c8d54: ;   {runtime_call}
  0x000001c3987c8d54: 0000 e9fb 

  0x000001c3987c8d58: ;   {static_stub}
  0x000001c3987c8d58: ffff ff48 | bb00 0000 | 0000 0000 

  0x000001c3987c8d64: ;   {runtime_call}
  0x000001c3987c8d64: 00e9 fbff 

  0x000001c3987c8d68: ;   {static_stub}
  0x000001c3987c8d68: ffff 48bb | 0000 0000 | 0000 0000 

  0x000001c3987c8d74: ;   {runtime_call}
  0x000001c3987c8d74: e9fb ffff 

  0x000001c3987c8d78: ;   {runtime_call ExceptionBlob}
  0x000001c3987c8d78: ffe9 02d2 | 9eff e800 | 0000 0048 | 832c 2405 

  0x000001c3987c8d88: ;   {runtime_call DeoptimizationBlob}
  0x000001c3987c8d88: e913 bc92 | fff4 f4f4 
[/MachCode]


Compiled method (c2)  292177 2692 % !   4       java.util.concurrent.ThreadPoolExecutor::runWorker @ 21 (187 bytes)
 total in heap  [0x000001c3987d3690,0x000001c3987d7100] = 14960
 relocation     [0x000001c3987d37f0,0x000001c3987d3a38] = 584
 main code      [0x000001c3987d3a40,0x000001c3987d5ab8] = 8312
 stub code      [0x000001c3987d5ab8,0x000001c3987d5b68] = 176
 oops           [0x000001c3987d5b68,0x000001c3987d5b80] = 24
 metadata       [0x000001c3987d5b80,0x000001c3987d5dc0] = 576
 scopes data    [0x000001c3987d5dc0,0x000001c3987d6900] = 2880
 scopes pcs     [0x000001c3987d6900,0x000001c3987d6eb0] = 1456
 dependencies   [0x000001c3987d6eb0,0x000001c3987d6f00] = 80
 handler table  [0x000001c3987d6f00,0x000001c3987d7038] = 312
 nul chk table  [0x000001c3987d7038,0x000001c3987d7100] = 200

[Constant Pool (empty)]

[MachCode]
[Verified Entry Point]
  # {method} {0x000001c3a87c0948} 'runWorker' '(Ljava/util/concurrent/ThreadPoolExecutor$Worker;)V' in 'java/util/concurrent/ThreadPoolExecutor'
  0x000001c3987d3a40: cc66 6666 | 0f1f 8400 | 0000 0000 | 6666 6690 | 8984 2400 | 80ff ff55 | 4881 eca0 | 0000 0090 
  0x000001c3987d3a60: 4181 7f20 | 0100 0000 | 0f85 3b20 | 0000 488b | 7238 488b | 6a30 8b7a | 184c 8b6a | 2848 8b5a 
  0x000001c3987d3a80: 204d 8b97 | 8003 0000 | 4d8b 3248 | 8bca 49ba | 40ae 7409 | f87f 0000 

  0x000001c3987d3a98: ;   {other}
  0x000001c3987d3a98: 41ff d20f | 1f84 0000 | 0000 0048 | 85f6 0f84 | d817 0000 | 448b 5608 

  0x000001c3987d3ab0: ;   {metadata('java/util/concurrent/ThreadPoolExecutor')}
  0x000001c3987d3ab0: 49bb e09f | 0a00 0800 | 0000 49b8 | 0000 0000 | 0800 0000 | 4d03 c24d | 8b50 404d | 3bd3 0f85 
  0x000001c3987d3ad0: 9c19 0000 | 4c8b d64d | 8bc2 4885 | ed0f 84a9 | 1700 0044 

  0x000001c3987d3ae4: ;   {metadata('java/util/concurrent/ThreadPoolExecutor$Worker')}
  0x000001c3987d3ae4: 8b5d 0841 | 81fb e8d8 | 0a00 0f85 | 7c19 0000 | 4c8b d549 | 8bca 4d85 | ed0f 8490 | 1700 0045 
  0x000001c3987d3b04: ;   {metadata('java/lang/Thread')}
  0x000001c3987d3b04: 8b55 0849 | bb58 7404 | 0008 0000 | 0049 b900 | 0000 0008 | 0000 004d | 03ca 4d8b | 5138 4d3b 
  0x000001c3987d3b24: d30f 8545 | 1900 0045 | 8b50 0848 | 85c9 0f84 | 1019 0000 

  0x000001c3987d3b38: ;   {metadata('com/sun/javafx/tk/quantum/QuantumRenderer')}
  0x000001c3987d3b38: 4181 fa80 | 220e 000f | 8503 1900 | 0048 894c | 2450 4c89 | 6c24 3089 | 7c24 404d | 8bd0 4c89 
  0x000001c3987d3b58: 4424 484c | 8954 2420 | 4d8b de49 | c1eb 0344 | 895c 2428 | 4c89 7424 | 58e9 d406 | 0000 4c8b 
  0x000001c3987d3b78: 5424 6041 | 8b5a 1441 | 8b7c dc10 | 4180 7f40 | 000f 852b | 0a00 0041 | 807f 4000 | 0f85 580a 
  0x000001c3987d3b98: 0000 4189 | 5cdc 104c | 8b54 2460 | 4189 7a14 | 4c8b d749 | c1e2 034c | 8b5c 2460 | 4d33 d349 
  0x000001c3987d3bb8: c1ea 154d | 85d2 741e | 85ff 741a | 49c1 eb09 | 48b9 0030 | 079d c301 | 0000 4903 | cb80 3902 
  0x000001c3987d3bd8: 0f85 840b | 0000 458b | 54fc 0c44 | 8954 2470 | 4180 7f40 | 000f 853b | 0a00 0045 | 8964 fc0c 
  0x000001c3987d3bf8: bdff ffff | ff44 8b54 | 246c f043 | 0fc1 6cd4 | 0c83 fd01 | 0f8f f212 | 0000 448b | 5c24 6843 
  0x000001c3987d3c18: 8b5c dc0c 

  0x000001c3987d3c1c: ; implicit exception: dispatches to 0x000001c3987d55dc
  0x000001c3987d3c1c: 458b 54dc | 1045 8b5c | dc0c 4d8b | c349 c1e0 | 034c 8b4c | 2458 4d3b 

  0x000001c3987d3c34: ;   {no_reloc}
  0x000001c3987d3c34: c10f 8501 | 1300 0041 | 8d72 ff41 | 83fa 010f | 8569 0900 | 0041 807f | 4000 0f85 | 5c0b 0000 
  0x000001c3987d3c54: 4589 64dc | 0c41 bb01 | 0000 0041 | 8974 dc10 | f083 4424 | c000 4585 | db74 0e45 | 8b54 dc14 
  0x000001c3987d3c74: 4585 d20f | 856c 0800 | 004c 8b54 | 2460 458b | 5a0c 413b | eb0f 84f1 | 1200 0044 | 8b54 2470 
  0x000001c3987d3c94: ; implicit exception: dispatches to 0x000001c3987d560c
  0x000001c3987d3c94: 478b 54d4 

  0x000001c3987d3c98: ;   {metadata('com/sun/javafx/tk/quantum/PaintRenderJob')}
  0x000001c3987d3c98: 0841 81fa | f8e6 1a00 | 0f85 f217 | 0000 4c8b | 5424 5033 | c041 b801 | 0000 00f0 | 450f b142 
  0x000001c3987d3cb8: 1041 0f94 | c345 0fb6 | db44 8b54 | 2470 49c1 | e203 4c89 | 5424 6045 | 85db 0f84 | e812 0000 
  0x000001c3987d3cd8: 4180 7f40 | 000f 8583 | 0900 004c | 8b54 2450 | 448b 4424 | 2845 8942 | 0c4c 8b54 | 2458 4c8b 
  0x000001c3987d3cf8: 5c24 504d | 33d3 49c1 | ea15 4d85 | d274 1a49 | c1eb 0948 | b900 3007 | 9dc3 0100 | 0049 03cb 
  0x000001c3987d3d18: 8039 020f | 85f3 0900 | 004c 8b54 | 2448 458b | 522c 478b | 54d4 0c41 | 81fa 0000 | 0020 0f8d 
  0x000001c3987d3d38: b812 0000 | 4c8b 5424 | 5845 0fb6 | 5a3a 4585 | db0f 85c9 | 1200 004c | 8b54 2460 | 458b 520c 
  0x000001c3987d3d58: 4585 d20f | 8533 0e00 | 004c 8b54 | 2460 4983 | c218 4c89 | 5424 3848 | 33c0 448b | 5c24 28f0 
  0x000001c3987d3d78: 450f b11a | 0f94 c30f | b6db 85db | 742b 4c8b | 5c24 584d | 33da 49c1 | eb15 4d85 | db74 1a49 
  0x000001c3987d3d98: ;   {no_reloc}
  0x000001c3987d3d98: c1ea 0948 | b900 3007 | 9dc3 0100 | 0049 03ca | 8039 020f | 85bd 0a00 | 0085 db0f | 8497 1200 
  0x000001c3987d3db8: 004c 8b54 | 2460 458b | 520c 4c8b | 5c24 6045 | 8b43 1047 | 8b4c c408 | 4585 d20f | 85fb 0d00 
  0x000001c3987d3dd8: ;   {metadata('java/util/concurrent/Executors$RunnableAdapter')}
  0x000001c3987d3dd8: 0041 81f9 | 883d 0b00 | 0f85 6a0b | 0000 4b8d | 2cc4 448b | 5d0c 478b 

  0x000001c3987d3df0: ;   {metadata('com/sun/javafx/tk/quantum/PresentingPainter')}
  0x000001c3987d3df0: 44dc 0841 | 81f8 a8e4 | 1a00 0f85 | 940b 0000 | 4b8d 14dc 

  0x000001c3987d3e04: ;   {optimized virtual_call}
  0x000001c3987d3e04: 6666 90e8 

  0x000001c3987d3e08: ; ImmutableOopMap {rbp=Oop [32]=Oop [40]=NarrowOop [48]=Oop [72]=Oop [80]=Oop [88]=Oop [96]=Oop [56]=Derived_oop_[96] }
                      ;*invokeinterface run {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.concurrent.Executors$RunnableAdapter::call@4 (line 572)
                      ; - java.util.concurrent.FutureTask::runAndReset@44 (line 358)
                      ; - com.sun.javafx.tk.RenderJob::run@1 (line 58)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@92 (line 1144)
  0x000001c3987d3e08: 7420 ffff 

  0x000001c3987d3e0c: ;   {other}
  0x000001c3987d3e0c: 0f1f 8400 | 7c07 0000 | bb01 0000 | 0041 807f | 4000 0f85 | 7e08 0000 | 4c8b 5424 | 3845 8922 
  0x000001c3987d3e2c: f083 4424 | c000 4c8b | 5424 6045 | 8b52 0c41 | 83fa 050f | 8d47 1200 | 0085 db0f | 848f 1200 
  0x000001c3987d3e4c: 0045 85d2 | 0f85 c20d | 0000 4c8b | 5424 6045 | 8b52 2047 | 8b5c d408 

  0x000001c3987d3e64: ;   {metadata('com/sun/javafx/tk/quantum/PaintCollector')}
  0x000001c3987d3e64: 4181 fba8 | 920e 000f | 855b 0b00 | 004c 8b5c | 2460 458b | 4328 4489 | 4424 6845 | 85c0 0f84 
  0x000001c3987d3e84: 9012 0000 | 49c1 e203 | 4c89 5424 | 704f 8d14 | c44c 8954 | 2438 4c8b | 5c24 3848 | 8d9c 2480 
  0x000001c3987d3ea4: 0000 0049 | 8b03 a802 | 0f85 2300 | 0000 4883 | c801 4889 | 03f0 490f | b11b 0f84 | 3700 0000 
  0x000001c3987d3ec4: 482b c448 | 2507 f0ff | ff48 8903 | e924 0000 | 004c 8bd0 | 4833 c0f0 | 4d0f b17a | 3e48 c703 
  0x000001c3987d3ee4: 0300 0000 | 7411 4c3b | f875 1549 | ff82 8600 | 0000 4833 | c075 0949 | ff87 5005 | 0000 33c0 
  0x000001c3987d3f04: 0f85 020b | 0000 448b | 5c24 6847 | 8b54 dc28 

  0x000001c3987d3f14: ; implicit exception: dispatches to 0x000001c3987d57d4
  0x000001c3987d3f14: 478b 5cd4 

  0x000001c3987d3f18: ;   {metadata('javafx/scene/Scene$ScenePeerPaintListener')}
  0x000001c3987d3f18: 0841 81fb | 3820 1b00 | 0f85 030b | 0000 4b8d 

  0x000001c3987d3f28: ;   {oop(a 'java/lang/Object'{0x000000070be218a8})}
  0x000001c3987d3f28: 2cd4 49bb | a818 e20b | 0700 0000 | 488d 9c24 | 8800 0000 | 498b 03a8 | 020f 8523 | 0000 0048 
  0x000001c3987d3f48: 83c8 0148 | 8903 f049 | 0fb1 1b0f | 8437 0000 | 0048 2bc4 | 4825 07f0 | ffff 4889 | 03e9 2400 
  0x000001c3987d3f68: 0000 4c8b | d048 33c0 | f04d 0fb1 | 7a3e 48c7 | 0303 0000 | 0074 114c | 3bf8 7515 | 49ff 8286 
  0x000001c3987d3f88: 0000 0048 | 33c0 7509 | 49ff 8750 | 0500 0033 | c00f 85c5 | 0a00 0044 | 8b5d 0c47 | 8b94 dc90 
  0x000001c3987d3fa8: 0000 0045 | 85d2 0f85 | 9811 0000 

  0x000001c3987d3fb4: ;   {oop(a 'java/lang/Object'{0x000000070be218a8})}
  0x000001c3987d3fb4: 49bb a818 | e20b 0700 | 0000 488d | 8424 8800 | 0000 4883 | 3800 0f84 | 7900 0000 | 4d8b 1341 
  0x000001c3987d3fd4: f6c2 020f | 8462 0000 | 0049 83ba | 8600 0000 | 0074 0949 | ff8a 8600 | 0000 eb4b | 498b 8296 
  0x000001c3987d3ff4: 0000 0049 | 0b82 8e00 | 0000 750a | 49c7 423e | 0000 0000 | eb3d 4983 | ba9e 0000 | 0000 7422 
  0x000001c3987d4014: 4833 c049 | c742 3e00 | 0000 00f0 | 8304 2400 | 4983 ba9e | 0000 0000 | 750d f04d | 0fb1 7a3e 
  0x000001c3987d4034: 7505 83c8 | 01eb 0ca8 | 00eb 084c | 8b10 f04d | 0fb1 1375 | 0a49 ff8f | 5005 0000 | 4533 d20f 
  0x000001c3987d4054: 8558 0a00 | 004c 8b5c | 2438 488d | 8424 8000 | 0000 4883 | 3800 0f84 | 7900 0000 | 4d8b 1341 
  0x000001c3987d4074: f6c2 020f | 8462 0000 | 0049 83ba | 8600 0000 | 0074 0949 | ff8a 8600 | 0000 eb4b | 498b 8296 
  0x000001c3987d4094: 0000 0049 | 0b82 8e00 | 0000 750a | 49c7 423e | 0000 0000 | eb3d 4983 | ba9e 0000 

  0x000001c3987d40b0: ;   {no_reloc}
  0x000001c3987d40b0: 0000 7422 | 4833 c049 | c742 3e00 | 0000 00f0 | 8304 2400 | 4983 ba9e | 0000 0000 | 750d f04d 
  0x000001c3987d40d0: 0fb1 7a3e | 7505 83c8 | 01eb 0ca8 | 00eb 084c | 8b10 f04d | 0fb1 1375 | 0a49 ff8f | 5005 0000 
  0x000001c3987d40f0: 4533 d20f | 8590 0900 | 004c 8b54 | 2470 458b | 5a14 478b | 54dc 0c47 | 8b5c d410 | 4183 fb01 
  0x000001c3987d4110: 0f85 990b | 0000 4c8b | 5424 7045 | 0fb6 520d | 4585 d20f | 844f 1000 | 004c 8b54 | 2470 458b 
  0x000001c3987d4130: 4218 470f | b654 c444 | 4585 d20f | 85c4 0b00 | 0047 3b64 | c478 0f84 | a807 0000 

  0x000001c3987d414c: ;   {oop(a 'java/lang/Class'{0x000000070623f1b8} = 'com/sun/javafx/tk/quantum/QuantumToolkit')}
  0x000001c3987d414c: 49ba b8f1 | 2306 0700 | 0000 450f | b692 8b00 | 0000 4585 | d20f 8545 | 1000 004b 

  0x000001c3987d4168: ;   {optimized virtual_call}
  0x000001c3987d4168: 8d14 c4e8 

  0x000001c3987d416c: ; ImmutableOopMap {[32]=Oop [40]=NarrowOop [48]=Oop [72]=Oop [80]=Oop [88]=Oop [96]=Oop [112]=Oop }
                      ;*invokevirtual postPulse {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.QuantumToolkit::vsyncHint@28 (line 613)
                      ; - com.sun.javafx.tk.quantum.PaintCollector::done@101 (line 304)
                      ; - com.sun.javafx.tk.RenderJob::run@81 (line 77)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@92 (line 1144)
  0x000001c3987d416c: 3031 faff 

  0x000001c3987d4170: ;   {other}
  0x000001c3987d4170: 0f1f 8400 | e00a 0001 

  0x000001c3987d4178: ;   {oop(a 'java/lang/Class'{0x0000000705a0b4d0} = 'com/sun/glass/ui/Application')}
  0x000001c3987d4178: 49ba d0b4 | a005 0700 | 0000 453b | 6274 0f84 | 8407 0000 | 4c8b 5424 | 7045 8b5a | 1447 8b54 
  0x000001c3987d4198: dc0c 478b | 44d4 1045 | 85c0 0f84 | 6c10 0000 | 458d 58ff | 418b c0f0 | 470f b15c | d410 410f 
  0x000001c3987d41b8: 94c1 450f | b6c9 4585 | c90f 8485 | 1000 0041 | 83f8 010f | 8584 0b00 | 0047 8b54 | d414 4585 
  0x000001c3987d41d8: d20f 857a 

  0x000001c3987d41dc: ;   {oop(a 'java/lang/Class'{0x0000000705a2a350} = 'com/sun/javafx/tk/quantum/QuantumRenderer')}
  0x000001c3987d41dc: 0200 0049 | ba50 a3a2 | 0507 0000 | 0045 0fb6 | 5274 4585 | d20f 85f5 | 0f00 004c | 8b54 2450 
  0x000001c3987d41fc: 4d8b 5220 | 4983 c201 | 4c8b 5c24 | 504d 8953 | 20f0 8344 | 24c0 0041 | 807f 4000 | 0f85 bf04 
  0x000001c3987d421c: 0000 4c8b | 5424 5045 | 8962 0c45 | 8962 10f0 | 8344 24c0 | 0045 8b5a | 1445 85db | 0f85 8c01 
  0x000001c3987d423c: 0000 4d8b | 9758 0400 

  0x000001c3987d4244: ; ImmutableOopMap {[32]=Oop [40]=NarrowOop [48]=Oop [72]=Oop [80]=Oop [88]=Oop }
                      ;*goto {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.concurrent.ThreadPoolExecutor::runWorker@158 (line 1154)
                      ;   {poll}
  0x000001c3987d4244: 0041 8502 | 33db 4885 | db0f 850d | 0900 004c | 8b54 2448 | 458b 5a2c 

  0x000001c3987d425c: ; implicit exception: dispatches to 0x000001c3987d54d3
  0x000001c3987d425c: 478b 5cdc | 0c45 85db | 0f8d 7d0b | 0000 450f | b64a 2845 | 8bd3 4181 | e2ff ffff | 1f45 85c9 
  0x000001c3987d427c: 0f85 9e08 | 0000 4c8b | 4424 4845 | 8b48 2045 | 3bd1 0f8f | 880b 0000 | 458b 4824 | 453b d10f 
  0x000001c3987d429c: 8fc3 0b00 | 0045 8b50 | 3047 8b44 

  0x000001c3987d42a8: ;   {metadata('java/util/concurrent/LinkedBlockingQueue')}
  0x000001c3987d42a8: d408 4181 | f880 b90a | 000f 8575 | 0600 0049 | c1e2 034c | 8954 2460 | 458b 5a1c | 4489 5c24 
  0x000001c3987d42c8: 6845 8b52 | 1044 8954 | 246c 438b | 5cdc 0c85 | db0f 84dd | 0500 004c | 8b54 2458 | 450f b652 
  0x000001c3987d42e8: 3a45 85d2 | 0f85 ba0b | 0000 33c0 | 41bb 0100 | 0000 f045 | 0fb1 5cdc | 1041 0f94 | c345 0fb6 
  0x000001c3987d4308: db45 85db | 0f84 6702 | 0000 4180 | 7f40 000f | 85cb 0400 | 0044 8b54 | 2428 4589 | 54dc 0c4d 
  0x000001c3987d4328: 8d14 dc4c | 8b5c 2458 | 4d33 da49 | c1eb 154d | 85db 741a | 49c1 ea09 | 48b9 0030 | 079d c301 
  0x000001c3987d4348: 0000 4903 | ca80 3902 | 0f85 ca04 | 0000 448b | 5424 6c47 | 8b5c d40c | 4585 db0f | 850d f8ff 
  0x000001c3987d4368: ff44 8b5c | 2468 4f8d | 14dc 4c89 | 5424 3844 | 8b54 246c | 4b8d 2cd4 | 4c8b 5424 | 6045 8b52 
  0x000001c3987d4388: 2047 8b44 

  0x000001c3987d438c: ;   {metadata('java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject')}
  0x000001c3987d438c: d408 4181 | f850 5307 | 000f 8545 | 0700 004b 

  0x000001c3987d439c: ;   {optimized virtual_call}
  0x000001c3987d439c: 8d14 d4e8 

  0x000001c3987d43a0: ; ImmutableOopMap {rbp=Oop [32]=Oop [40]=NarrowOop [48]=Oop [56]=Oop [72]=Oop [80]=Oop [88]=Oop [96]=Oop [104]=NarrowOop [108]=NarrowOop }
                      ;*invokeinterface await {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.concurrent.LinkedBlockingQueue::take@27 (line 435)
                      ; - java.util.concurrent.ThreadPoolExecutor::getTask@147 (line 1070)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@26 (line 1130)
  0x000001c3987d43a0: 5c3d 0000 

  0x000001c3987d43a4: ;   {other}
  0x000001c3987d43a4: 0f1f 8400 | 140d 0003 | 4d8b 9758 

  0x000001c3987d43b0: ; ImmutableOopMap {rbp=Oop [32]=Oop [40]=NarrowOop [48]=Oop [56]=Oop [72]=Oop [80]=Oop [88]=Oop [96]=Oop [104]=NarrowOop [108]=NarrowOop }
                      ;*goto {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.concurrent.LinkedBlockingQueue::take@32 (line 435)
                      ; - java.util.concurrent.ThreadPoolExecutor::getTask@147 (line 1070)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@26 (line 1130)
                      ;   {poll}
  0x000001c3987d43b0: 0400 0041 | 8502 448b | 5c24 6c47 | 8b5c dc0c | 4585 db74 | bbe9 acf7 | ffff 478b | 54dc 1445 
  0x000001c3987d43d0: 85d2 0f84 | 66fe ffff | 478b 5cd4 | 0c45 85db | 0f84 58fe | ffff 438b | 44d4 0c44 | 8bc0 4183 
  0x000001c3987d43f0: e0fe f047 | 0fb1 44d4 | 0c41 0f94 | c045 0fb6 | c045 85c0 | 0f84 1e0f | 0000 478b | 5cd4 1847 
  0x000001c3987d4410: 8b44 dc08 | 49ba 0000 | 0000 0800 | 0000 4d03 | d04d 8b52 

  0x000001c3987d4424: ;   {metadata('java/lang/BaseVirtualThread')}
  0x000001c3987d4424: 4049 b8d0 | 7f04 0008 | 0000 004d | 3bd0 0f84 | 630e 0000 | 4f8d 04dc 

  0x000001c3987d443c: ;   {oop(a 'jdk/internal/misc/Unsafe'{0x0000000706237b68})}
  0x000001c3987d443c: 48ba 687b | 2306 0700 

  0x000001c3987d4444: ;   {optimized virtual_call}
  0x000001c3987d4444: 0000 90e8 

  0x000001c3987d4448: ; ImmutableOopMap {[32]=Oop [40]=NarrowOop [48]=Oop [72]=Oop [80]=Oop [88]=Oop }
                      ;*invokevirtual unpark {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.concurrent.locks.LockSupport::unpark@22 (line 181)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::signalNext@30 (line 645)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::release@12 (line 1060)
                      ; - java.util.concurrent.ThreadPoolExecutor$Worker::unlock@2 (line 670)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@131 (line 1153)
  0x000001c3987d4448: 34a6 91ff 

  0x000001c3987d444c: ;   {other}
  0x000001c3987d444c: 0f1f 8400 | bc0d 0005 | e9e5 fdff | ff47 8b44 | d414 4585 | c00f 8478 | fdff ff47 | 8b54 c40c 
  0x000001c3987d446c: 4585 d20f | 846a fdff | ff43 8b44 | c40c 448b | d841 83e3 | fef0 470f | b15c c40c | 410f 94c3 
  0x000001c3987d448c: 450f b6db | 4585 db0f | 84bb 0e00 | 0047 8b5c | c418 478b | 54dc 0849 | b800 0000 | 0008 0000 
  0x000001c3987d44ac: 004d 03c2 | 4d8b 5040 

  0x000001c3987d44b4: ;   {metadata('java/lang/BaseVirtualThread')}
  0x000001c3987d44b4: 49b8 d07f | 0400 0800 | 0000 4d3b | d00f 84fd | 0d00 004f 

  0x000001c3987d44c8: ;   {oop(a 'jdk/internal/misc/Unsafe'{0x0000000706237b68})}
  0x000001c3987d44c8: 8d04 dc48 | ba68 7b23 | 0607 0000 

  0x000001c3987d44d4: ;   {optimized virtual_call}
  0x000001c3987d44d4: 0066 90e8 

  0x000001c3987d44d8: ; ImmutableOopMap {[32]=Oop [40]=NarrowOop [48]=Oop [72]=Oop [80]=Oop [88]=Oop [96]=Oop }
                      ;*invokevirtual unpark {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.concurrent.locks.LockSupport::unpark@22 (line 181)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::signalNext@30 (line 645)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::releaseShared@12 (line 1147)
                      ; - java.util.concurrent.CountDownLatch::countDown@5 (line 290)
                      ; - com.sun.javafx.tk.quantum.PaintCollector::done@123 (line 318)
                      ; - com.sun.javafx.tk.RenderJob::run@81 (line 77)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@92 (line 1144)
  0x000001c3987d44d8: e45f f4ff 

  0x000001c3987d44dc: ;   {other}
  0x000001c3987d44dc: 0f1f 8400 | 4c0e 0006 | e9f6 fcff | ff47 8b54 | d414 4585 | d20f 8486 | f7ff ff47 | 8b44 d40c 
  0x000001c3987d44fc: 4585 c00f | 8478 f7ff | ff43 8b44 | d40c 448b | d841 83e3 | fef0 470f | b15c d40c | 410f 94c0 
  0x000001c3987d451c: 450f b6c0 | 4585 c00f | 8463 0e00 | 0047 8b54 | d418 478b | 44d4 0849 | bb00 0000 | 0008 0000 
  0x000001c3987d453c: 004d 03d8 | 4d8b 5b40 

  0x000001c3987d4544: ;   {metadata('java/lang/BaseVirtualThread')}
  0x000001c3987d4544: 49b8 d07f | 0400 0800 | 0000 4d3b | d80f 8491 | 0d00 004f 

  0x000001c3987d4558: ;   {oop(a 'jdk/internal/misc/Unsafe'{0x0000000706237b68})}
  0x000001c3987d4558: 8d04 d448 | ba68 7b23 | 0607 0000 

  0x000001c3987d4564: ;   {optimized virtual_call}
  0x000001c3987d4564: 0066 90e8 

  0x000001c3987d4568: ; ImmutableOopMap {[32]=Oop [40]=NarrowOop [48]=Oop [72]=Oop [80]=Oop [88]=Oop [96]=Oop [112]=NarrowOop }
                      ;*invokevirtual unpark {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.concurrent.locks.LockSupport::unpark@22 (line 181)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::signalNext@30 (line 645)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::release@12 (line 1060)
                      ; - java.util.concurrent.locks.ReentrantLock::unlock@5 (line 494)
                      ; - java.util.concurrent.LinkedBlockingQueue::take@61 (line 442)
                      ; - java.util.concurrent.ThreadPoolExecutor::getTask@147 (line 1070)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@26 (line 1130)
  0x000001c3987d4568: 14a5 91ff 

  0x000001c3987d456c: ;   {other}
  0x000001c3987d456c: 0f1f 8400 | dc0e 0007 | e904 f7ff | ff45 8b5c | dc0c 4d8b | d349 c1e2 | 034c 8b5c | 2458 4d3b 
  0x000001c3987d458c: d30f 853d | 0e00 0041 | 8b6c dc10 | ffc5 85ed | 0f8c 6a0e | 0000 4189 | 6cdc 10f0 | 8344 24c0 
  0x000001c3987d45ac: 00e9 a4fd | ffff 4533 | dbe9 a5f6 | ffff 458b | 54dc 1045 | 85d2 0f84 | c7f5 ffff | 4d8b 5f28 
  0x000001c3987d45cc: 498b ca48 | c1e1 034d | 85db 0f84 | 7c06 0000 | 4d8b 5738 | 4b89 4c1a | f849 83c3 | f84d 895f 
  0x000001c3987d45ec: 28e9 9df5 | ffff 4c8b | 5424 6045 | 8b5a 1445 | 85db 0f84 | 96f5 ffff | 4d8b 5728 | 498b cb48 
  0x000001c3987d460c: c1e1 034d | 85d2 0f84 | 5d06 0000 | 4d8b 5f38 | 4b89 4c13 | f849 83c2 | f84d 8957 | 28e9 6cf5 
  0x000001c3987d462c: ffff 458b | 5cfc 0c45 | 85db 0f84 | b7f5 ffff | 4d8b 5728 | 498b cb48 | c1e1 034d | 85d2 0f84 
  0x000001c3987d464c: 4206 0000 | 4d8b 5f38 | 4b89 4c13 | f849 83c2 | f84d 8957 | 28e9 8df5 | ffff 4c8b 

  0x000001c3987d4668: ;   {no_reloc}
  0x000001c3987d4668: 5424 5045 | 8b5a 0c45 | 85db 0f84 | 6bf6 ffff | 4d8b 5728 | 498b cb48 | c1e1 034d | 85d2 0f84 
  0x000001c3987d4688: 5c06 0000 | 4d8b 5f38 | 4b89 4c13 | f849 83c2 | f84d 8957 | 28e9 41f6 | ffff 4c8b | 5424 3845 
  0x000001c3987d46a8: 8b1a 4585 | db0f 8471 | f7ff ff4d | 8b57 2849 | 8bcb 48c1 | e103 4d85 | d20f 8471 | 0600 004d 
  0x000001c3987d46c8: 8b5f 384b | 894c 13f8 | 4983 c2f8 | 4d89 5728 | e947 f7ff | ff45 8b5b | 0c45 85db | 0f84 34fb 
  0x000001c3987d46e8: ffff 4d8b | 5728 498b | cb48 c1e1 | 034d 85d2 | 0f84 9206 | 0000 4d8b | 5f38 4b89 | 4c13 f849 
  0x000001c3987d4708: 83c2 f84d | 8957 28e9 | 0afb ffff | 4d8b 5748 | 4d8b 5f58 | f083 4424 | c000 8039 | 000f 84f6 
  0x000001c3987d4728: f5ff ff44 | 8821 4d85 | d275 1d49 | 8bd7 49ba | 40f6 6c09 | f87f 0000 

  0x000001c3987d4740: ;   {other}
  0x000001c3987d4740: 41ff d20f | 1f84 0000 | 0000 00e9 | d1f5 ffff | 4b89 4c13 | f849 83c2 | f84d 8957 | 48e9 bff5 
  0x000001c3987d4760: ffff 4d8b | 5748 4d8b | 5f58 f083 | 4424 c000 | 8039 000f | 8465 f4ff | ff44 8821 | 4d85 d275 
  0x000001c3987d4780: 1d49 8bd7 | 49ba 40f6 | 6c09 f87f | 0000 41ff 

  0x000001c3987d4790: ;   {other}
  0x000001c3987d4790: d20f 1f84 | 0000 0000 | 00e9 40f4 | ffff 4b89 | 4c13 f849 | 83c2 f84d | 8957 48e9 | 2ef4 ffff 
  0x000001c3987d47b0: 458b 54dc | 0c45 85d2 | 0f84 96f4 | ffff 4d8b | 5f28 498b | ca48 c1e1 | 034d 85db | 0f84 db05 
  0x000001c3987d47d0: 0000 4d8b | 5738 4b89 | 4c1a f849 | 83c3 f84d | 895f 28e9 | 6cf4 ffff | 458b 54dc | 0c45 85d2 
  0x000001c3987d47f0: 0f84 27fb | ffff 4d8b | 5f28 498b | ca48 c1e1 | 034d 85db | 0f84 c005 | 0000 4d8b | 5738 4b89 
  0x000001c3987d4810: 4c1a f849 | 83c3 f84d | 895f 28e9 | fdfa ffff | 4d8b 5748 | 4d8b 5f58 | f083 4424 | c000 8039 
  0x000001c3987d4830: 000f 841f | fbff ff44 | 8821 4d85 | d275 1d49 | 8bd7 49ba | 40f6 6c09 | f87f 0000 

  0x000001c3987d484c: ;   {other}
  0x000001c3987d484c: 41ff d20f | 1f84 0000 | 0000 00e9 | fafa ffff | 4b89 4c13 | f849 83c2 | f84d 8957 | 48e9 e8fa 
  0x000001c3987d486c: ffff 4d8b | 5748 4d8b | 5f58 f083 | 4424 c000 | 8039 000f | 842c f5ff | ff44 8821 | 4d85 d275 
  0x000001c3987d488c: 1d49 8bd7 | 49ba 40f6 | 6c09 f87f | 0000 41ff 

  0x000001c3987d489c: ;   {other}
  0x000001c3987d489c: d20f 1f84 | 0000 0000 | 00e9 07f5 | ffff 4b89 | 4c13 f849 | 83c2 f84d | 8957 48e9 | f5f4 ffff 
  0x000001c3987d48bc: baf6 ffff | ff48 ff74 | 2430 488f | 4424 2848 | 8944 24f8 | 8b44 2440 | 8944 2430 | 488b 4424 
  0x000001c3987d48dc: f848 ff74 | 2448 488f 

  0x000001c3987d48e4: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987d48e4: 4424 38e8 

  0x000001c3987d48e8: ; ImmutableOopMap {[40]=Oop [56]=Oop [80]=Oop [96]=Oop [104]=NarrowOop [108]=NarrowOop }
                      ;*invokevirtual lockInterruptibly {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.concurrent.locks.ReentrantLock::lockInterruptibly@4 (line 372)
                      ; - java.util.concurrent.LinkedBlockingQueue::take@13 (line 432)
                      ; - java.util.concurrent.ThreadPoolExecutor::getTask@147 (line 1070)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@26 (line 1130)
  0x000001c3987d48e8: 14fd 91ff 

  0x000001c3987d48ec: ;   {other}
  0x000001c3987d48ec: 0f1f 8400 | 5c12 0008 | baf6 ffff | ff48 ff74 | 2430 488f 

  0x000001c3987d4900: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987d4900: 4424 28e8 

  0x000001c3987d4904: ; ImmutableOopMap {[40]=Oop [72]=Oop [80]=Oop [96]=Oop }
                      ;*invokevirtual isVsyncSupported {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.QuantumToolkit::isVsyncEnabled@10 (line 477)
                      ; - com.sun.javafx.tk.quantum.QuantumToolkit::vsyncHint@1 (line 609)
                      ; - com.sun.javafx.tk.quantum.PaintCollector::done@101 (line 304)
                      ; - com.sun.javafx.tk.RenderJob::run@81 (line 77)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@92 (line 1144)
  0x000001c3987d4904: f8fc 91ff 

  0x000001c3987d4908: ;   {other}
  0x000001c3987d4908: 0f1f 8400 | 7812 0009 | baf6 ffff | ff48 ff74 | 2430 488f 

  0x000001c3987d491c: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987d491c: 4424 28e8 

  0x000001c3987d4920: ; ImmutableOopMap {[40]=Oop [72]=Oop [80]=Oop [96]=Oop }
                      ;*invokevirtual notifyRenderingFinished {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.PaintCollector::done@107 (line 307)
                      ; - com.sun.javafx.tk.RenderJob::run@81 (line 77)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@92 (line 1144)
  0x000001c3987d4920: dcfc 91ff 

  0x000001c3987d4924: ;   {other}
  0x000001c3987d4924: 0f1f 8400 | 9412 000a | bade ffff | ff48 ff74 | 2430 488f | 4424 2844 | 8954 2434 

  0x000001c3987d4940: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987d4940: 6666 90e8 

  0x000001c3987d4944: ; ImmutableOopMap {[40]=Oop [52]=NarrowOop [72]=Oop [80]=Oop }
                      ;*invokeinterface take {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.concurrent.ThreadPoolExecutor::getTask@147 (line 1070)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@26 (line 1130)
  0x000001c3987d4944: b8fc 91ff 

  0x000001c3987d4948: ;   {other}
  0x000001c3987d4948: 0f1f 8400 | b812 000b | bade ffff | ff48 8b6c | 2448 48ff | 7424 3048 | 8f44 2428 | 4889 4424 
  0x000001c3987d4968: f88b 4424 | 4089 4424 | 3848 8b44 | 24f8 4c89 | 5c24 404c | 895c 2448 | 4489 4424 

  0x000001c3987d4984: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987d4984: 3c66 90e8 

  0x000001c3987d4988: ; ImmutableOopMap {rbp=Oop [40]=Oop [60]=NarrowOop [64]=Oop [72]=Oop [80]=Oop }
                      ;*invokeinterface call {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.concurrent.FutureTask::runAndReset@44 (line 358)
                      ; - com.sun.javafx.tk.RenderJob::run@1 (line 58)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@92 (line 1144)
  0x000001c3987d4988: 74fc 91ff 

  0x000001c3987d498c: ;   {other}
  0x000001c3987d498c: 0f1f 8400 | fc12 000c | bade ffff | ff48 ff74 | 2448 488f | 4424 2048 | ff74 2450 | 488f 4424 
  0x000001c3987d49ac: 2848 ff74 | 2460 488f | 4424 3844 | 895c 2444 

  0x000001c3987d49bc: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987d49bc: 6666 90e8 

  0x000001c3987d49c0: ; ImmutableOopMap {rbp=Oop [32]=Oop [40]=Oop [48]=Oop [56]=Oop [68]=NarrowOop }
                      ;*invokeinterface run {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.concurrent.Executors$RunnableAdapter::call@4 (line 572)
                      ; - java.util.concurrent.FutureTask::runAndReset@44 (line 358)
                      ; - com.sun.javafx.tk.RenderJob::run@1 (line 58)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@92 (line 1144)
  0x000001c3987d49c0: 3cfc 91ff 

  0x000001c3987d49c4: ;   {other}
  0x000001c3987d49c4: 0f1f 8400 | 3413 000d | bade ffff | ff48 ff74 | 2430 488f | 4424 2848 | ff74 2460 | 488f 4424 
  0x000001c3987d49e4: 3048 8944 | 24f8 8b44 | 2440 8944 | 2438 488b | 4424 f844 | 8954 243c 

  0x000001c3987d49fc: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987d49fc: 6666 90e8 

  0x000001c3987d4a00: ; ImmutableOopMap {[40]=Oop [48]=Oop [60]=NarrowOop [72]=Oop [80]=Oop }
                      ;*invokeinterface done {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.RenderJob::run@81 (line 77)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@92 (line 1144)
  0x000001c3987d4a00: fcfb 91ff 

  0x000001c3987d4a04: ;   {other}
  0x000001c3987d4a04: 0f1f 8400 | 7413 000e | 498b d34c | 8d84 2480 

  0x000001c3987d4a14: ;   {runtime_call _complete_monitor_locking_Java}
  0x000001c3987d4a14: 0000 00e8 

  0x000001c3987d4a18: ; ImmutableOopMap {[32]=Oop [40]=NarrowOop [48]=Oop [56]=Oop [72]=Oop [80]=Oop [88]=Oop [96]=Oop [104]=NarrowOop [112]=Oop }
                      ;*synchronization entry
                      ; - com.sun.javafx.tk.quantum.GlassScene::frameRendered@-1 (line 327)
                      ; - com.sun.javafx.tk.quantum.PaintCollector::done@65 (line 291)
                      ; - com.sun.javafx.tk.RenderJob::run@81 (line 77)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@92 (line 1144)
  0x000001c3987d4a18: 6418 9eff 

  0x000001c3987d4a1c: ;   {other}
  0x000001c3987d4a1c: 0f1f 8400 | 8c13 000f | e9e1 f4ff | ffba deff | ffff 488b | 6c24 4848 | ff74 2430 | 488f 4424 
  0x000001c3987d4a3c: 2848 8944 | 24f8 8b44 | 2440 8944 | 2438 488b | 4424 f844 | 8954 243c 

  0x000001c3987d4a54: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987d4a54: 6666 90e8 

  0x000001c3987d4a58: ; ImmutableOopMap {rbp=Oop [40]=Oop [60]=NarrowOop [80]=Oop [96]=Oop [104]=NarrowOop [112]=Oop }
                      ;*invokeinterface frameRendered {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.GlassScene::frameRendered@11 (line 328)
                      ; - com.sun.javafx.tk.quantum.PaintCollector::done@65 (line 291)
                      ; - com.sun.javafx.tk.RenderJob::run@81 (line 77)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@92 (line 1144)
  0x000001c3987d4a58: a4fb 91ff 

  0x000001c3987d4a5c: ;   {other}
  0x000001c3987d4a5c: 0f1f 8400 | cc13 0010 

  0x000001c3987d4a64: ;   {oop(a 'java/lang/Object'{0x000000070be218a8})}
  0x000001c3987d4a64: 48ba a818 | e20b 0700 | 0000 4c8d | 8424 8800 

  0x000001c3987d4a74: ;   {runtime_call _complete_monitor_locking_Java}
  0x000001c3987d4a74: 0000 90e8 

  0x000001c3987d4a78: ; ImmutableOopMap {rbp=Oop [32]=Oop [40]=NarrowOop [48]=Oop [56]=Oop [72]=Oop [80]=Oop [88]=Oop [96]=Oop [104]=NarrowOop [112]=Oop }
                      ;*monitorenter {reexecute=0 rethrow=0 return_oop=0}
                      ; - javafx.scene.Scene$ScenePeerPaintListener::frameRendered@5 (line 2997)
                      ; - com.sun.javafx.tk.quantum.GlassScene::frameRendered@11 (line 328)
                      ; - com.sun.javafx.tk.quantum.PaintCollector::done@65 (line 291)
                      ; - com.sun.javafx.tk.RenderJob::run@81 (line 77)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@92 (line 1144)
  0x000001c3987d4a78: 0418 9eff 

  0x000001c3987d4a7c: ;   {other}
  0x000001c3987d4a7c: 0f1f 8400 | ec13 0011 | e916 f5ff | ff49 8bcb | 488d 9424 | 8000 0000 | 4d8b c749 | ba50 dfad 
  0x000001c3987d4a9c: 09f8 7f00 | 0041 ffd2 

  0x000001c3987d4aa4: ;   {other}
  0x000001c3987d4aa4: 0f1f 8400 | 0000 0000 | e948 f6ff 

  0x000001c3987d4ab0: ;   {oop(a 'java/lang/Object'{0x000000070be218a8})}
  0x000001c3987d4ab0: ff48 b9a8 | 18e2 0b07 | 0000 0048 | 8d94 2488 | 0000 004d | 8bc7 49ba | 50df ad09 | f87f 0000 
  0x000001c3987d4ad0: ;   {other}
  0x000001c3987d4ad0: 41ff d20f | 1f84 0000 | 0000 00e9 | 79f5 ffff | bade ffff | ff48 ff74 | 2430 488f | 4424 2848 
  0x000001c3987d4af0: 8944 24f8 | 8b44 2440 | 8944 2430 | 488b 4424 | f848 ff74 | 2448 488f | 4424 3844 | 8954 244c 
  0x000001c3987d4b10: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987d4b10: 6666 90e8 

  0x000001c3987d4b14: ; ImmutableOopMap {[40]=Oop [56]=Oop [76]=NarrowOop [80]=Oop [96]=Oop [104]=NarrowOop [108]=NarrowOop }
                      ;*invokeinterface await {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.concurrent.LinkedBlockingQueue::take@27 (line 435)
                      ; - java.util.concurrent.ThreadPoolExecutor::getTask@147 (line 1070)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@26 (line 1130)
  0x000001c3987d4b14: e8fa 91ff 

  0x000001c3987d4b18: ;   {other}
  0x000001c3987d4b18: 0f1f 8400 | 8814 0012 | ba45 ffff | ff48 ff74 | 2430 488f | 4424 2848 | 8944 24f8 | 8b44 2440 
  0x000001c3987d4b38: 8944 2430 | 488b 4424 | f844 895c | 2434 4489 | 5424 4044 | 894c 2444 

  0x000001c3987d4b50: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987d4b50: 6666 90e8 

  0x000001c3987d4b54: ; ImmutableOopMap {[40]=Oop [72]=Oop [80]=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.concurrent.ThreadPoolExecutor::getTask@54 (line 1058)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@26 (line 1130)
  0x000001c3987d4b54: a8fa 91ff 

  0x000001c3987d4b58: ;   {other}
  0x000001c3987d4b58: 0f1f 8400 | c814 0013 | ba45 ffff | ff48 ff74 | 2430 488f | 4424 2848 | 8944 24f8 | 8b44 2440 
  0x000001c3987d4b78: 8944 2438 | 488b 4424 | f848 895c 

  0x000001c3987d4b84: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987d4b84: 2440 90e8 

  0x000001c3987d4b88: ; ImmutableOopMap {[40]=Oop [64]=Oop [72]=Oop [80]=Oop }
                      ;*ifnonnull {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.concurrent.ThreadPoolExecutor::runWorker@22 (line 1130)
  0x000001c3987d4b88: 74fa 91ff 

  0x000001c3987d4b8c: ;   {other}
  0x000001c3987d4b8c: 0f1f 8400 | fc14 0014 | ba45 ffff | ff48 ff74 | 2430 488f | 4424 2848 | ff74 2460 | 488f 4424 
  0x000001c3987d4bac: 3048 8944 | 24f8 8b44 | 2440 8944 | 2438 488b | 4424 f844 | 8954 243c 

  0x000001c3987d4bc4: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987d4bc4: 6666 90e8 

  0x000001c3987d4bc8: ; ImmutableOopMap {[40]=Oop [48]=Oop [72]=Oop [80]=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.concurrent.FutureTask::runAndReset@4 (line 349)
                      ; - com.sun.javafx.tk.RenderJob::run@1 (line 58)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@92 (line 1144)
  0x000001c3987d4bc8: 34fa 91ff 

  0x000001c3987d4bcc: ;   {other}
  0x000001c3987d4bcc: 0f1f 8400 | 3c15 0015 | ba45 ffff | ff48 8b6c | 2448 48ff | 7424 3048 | 8f44 2428 | 4889 4424 
  0x000001c3987d4bec: f88b 4424 | 4089 4424 | 3848 8b44 | 24f8 4c89 | 5c24 404c | 895c 2448 | 4489 5424 

  0x000001c3987d4c08: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987d4c08: 3c66 90e8 

  0x000001c3987d4c0c: ; ImmutableOopMap {rbp=Oop [40]=Oop [64]=Oop [72]=Oop [80]=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.concurrent.FutureTask::runAndReset@40 (line 356)
                      ; - com.sun.javafx.tk.RenderJob::run@1 (line 58)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@92 (line 1144)
  0x000001c3987d4c0c: f0f9 91ff 

  0x000001c3987d4c10: ;   {other}
  0x000001c3987d4c10: 0f1f 8400 | 8015 0016 | ba45 ffff | ff48 ff74 | 2430 488f | 4424 2848 | ff74 2460 | 488f 4424 
  0x000001c3987d4c30: 3048 8944 | 24f8 8b44 | 2440 8944 | 2438 488b | 4424 f844 | 8954 243c 

  0x000001c3987d4c48: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987d4c48: 6666 90e8 

  0x000001c3987d4c4c: ; ImmutableOopMap {[40]=Oop [48]=Oop [72]=Oop [80]=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.concurrent.FutureTask::runAndReset@116 (line 374)
                      ; - com.sun.javafx.tk.RenderJob::run@1 (line 58)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@92 (line 1144)
  0x000001c3987d4c4c: b0f9 91ff 

  0x000001c3987d4c50: ;   {other}
  0x000001c3987d4c50: 0f1f 8400 | c015 0017 | 498b d749 | ba60 f66c | 09f8 7f00 | 0041 ffd2 

  0x000001c3987d4c68: ;   {other}
  0x000001c3987d4c68: 0f1f 8400 | 0000 0000 | e91a efff | ff49 8bd7 | 49ba 60f6 | 6c09 f87f | 0000 41ff 

  0x000001c3987d4c84: ;   {other}
  0x000001c3987d4c84: d20f 1f84 | 0000 0000 | 00e9 08ef | ffff 498b | d749 ba60 | f66c 09f8 | 7f00 0041 

  0x000001c3987d4ca0: ;   {other}
  0x000001c3987d4ca0: ffd2 0f1f | 8400 0000 | 0000 e944 | efff ff4d | 63d3 ba45 | ffff ff41 | bb01 0000 | 004d 3bd3 
  0x000001c3987d4cc0: bdff ffff | ff7c 0840 | 0f95 c540 | 0fb6 ed48 | ff74 2448 | 488f 4424 

  0x000001c3987d4cd8: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987d4cd8: 2066 90e8 

  0x000001c3987d4cdc: ; ImmutableOopMap {[32]=Oop [48]=Oop [80]=Oop [96]=Oop [112]=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.tk.quantum.PaintCollector::done@77 (line 300)
                      ; - com.sun.javafx.tk.RenderJob::run@81 (line 77)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@92 (line 1144)
  0x000001c3987d4cdc: 20f9 91ff 

  0x000001c3987d4ce0: ;   {other}
  0x000001c3987d4ce0: 0f1f 8400 | 5016 0018 | 498b d749 | ba60 f66c | 09f8 7f00 | 0041 ffd2 

  0x000001c3987d4cf8: ;   {other}
  0x000001c3987d4cf8: 0f1f 8400 | 0000 0000 | e9de efff | ffba 45ff | ffff 48ff | 7424 3048 | 8f44 2428 | 4889 4424 
  0x000001c3987d4d18: f88b 4424 | 4089 4424 | 3848 8b44 | 24f8 4489 

  0x000001c3987d4d28: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987d4d28: 5424 3ce8 

  0x000001c3987d4d2c: ; ImmutableOopMap {[40]=Oop [72]=Oop [80]=Oop [96]=Oop [112]=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.tk.quantum.PaintCollector::done@94 (line 303)
                      ; - com.sun.javafx.tk.RenderJob::run@81 (line 77)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@92 (line 1144)
  0x000001c3987d4d2c: d0f8 91ff 

  0x000001c3987d4d30: ;   {other}
  0x000001c3987d4d30: 0f1f 8400 | a016 0019 | 498b d749 | ba60 f66c | 09f8 7f00 | 0041 ffd2 

  0x000001c3987d4d48: ;   {other}
  0x000001c3987d4d48: 0f1f 8400 | 0000 0000 | e9cf f0ff | ffba 45ff | ffff 48ff | 7424 3048 | 8f44 2428 | 4889 4424 
  0x000001c3987d4d68: f88b 4424 | 4089 4424 | 3848 8b44 | 24f8 4489 | 5424 3c44 | 895c 2440 

  0x000001c3987d4d80: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987d4d80: 6666 90e8 

  0x000001c3987d4d84: ; ImmutableOopMap {[40]=Oop [60]=NarrowOop [72]=Oop [80]=Oop [96]=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.concurrent.CountDownLatch$Sync::tryReleaseShared@25 (line 183)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::releaseShared@2 (line 1146)
                      ; - java.util.concurrent.CountDownLatch::countDown@5 (line 290)
                      ; - com.sun.javafx.tk.quantum.PaintCollector::done@123 (line 318)
                      ; - com.sun.javafx.tk.RenderJob::run@81 (line 77)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@92 (line 1144)
  0x000001c3987d4d84: 78f8 91ff 

  0x000001c3987d4d88: ;   {other}
  0x000001c3987d4d88: 0f1f 8400 | f816 001a | 498b d749 | ba60 f66c | 09f8 7f00 | 0041 ffd2 

  0x000001c3987d4da0: ;   {other}
  0x000001c3987d4da0: 0f1f 8400 | 0000 0000 | e971 f4ff | ff49 8bd7 | 49ba 60f6 | 6c09 f87f | 0000 41ff 

  0x000001c3987d4dbc: ;   {other}
  0x000001c3987d4dbc: d20f 1f84 | 0000 0000 | 00e9 8aee | ffff 498b | d749 ba60 | f66c 09f8 | 7f00 0041 

  0x000001c3987d4dd8: ;   {other}
  0x000001c3987d4dd8: ffd2 0f1f | 8400 0000 | 0000 e936 | f5ff ffba | 45ff ffff | 48ff 7424 | 3048 8f44 | 2428 4889 
  0x000001c3987d4df8: 4424 f88b | 4424 4089 | 4424 3048 | 8b44 24f8 | 4489 5c24 

  0x000001c3987d4e0c: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987d4e0c: 4066 90e8 

  0x000001c3987d4e10: ; ImmutableOopMap {[40]=Oop [72]=Oop [80]=Oop }
                      ;*if_icmplt {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.concurrent.ThreadPoolExecutor::runStateAtLeast@2 (line 413)
                      ; - java.util.concurrent.ThreadPoolExecutor::getTask@12 (line 1049)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@26 (line 1130)
  0x000001c3987d4e10: ecf7 91ff 

  0x000001c3987d4e14: ;   {other}
  0x000001c3987d4e14: 0f1f 8400 | 8417 001b | ba45 ffff | ff48 ff74 | 2430 488f | 4424 2848 | 8944 24f8 | 8b44 2440 
  0x000001c3987d4e34: 8944 2430 | 488b 4424 | f848 ff74 | 2448 488f | 4424 3844 | 895c 2434 | 4489 5424 | 4444 894c 
  0x000001c3987d4e54: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987d4e54: 2448 90e8 

  0x000001c3987d4e58: ; ImmutableOopMap {[40]=Oop [56]=Oop [80]=Oop }
                      ;*if_icmple {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.concurrent.ThreadPoolExecutor::getTask@62 (line 1058)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@26 (line 1130)
  0x000001c3987d4e58: a4f7 91ff 

  0x000001c3987d4e5c: ;   {other}
  0x000001c3987d4e5c: 0f1f 8400 | cc17 001c | ba45 ffff | ff48 ff74 | 2430 488f | 4424 2848 | 8944 24f8 | 8b44 2440 
  0x000001c3987d4e7c: 8944 2430 | 488b 4424 | f848 ff74 | 2448 488f | 4424 3844 | 895c 2434 | 4489 5424 | 4444 894c 
  0x000001c3987d4e9c: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987d4e9c: 2448 90e8 

  0x000001c3987d4ea0: ; ImmutableOopMap {[40]=Oop [56]=Oop [80]=Oop }
                      ;*if_icmpgt {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.concurrent.ThreadPoolExecutor::getTask@77 (line 1060)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@26 (line 1130)
  0x000001c3987d4ea0: 5cf7 91ff 

  0x000001c3987d4ea4: ;   {other}
  0x000001c3987d4ea4: 0f1f 8400 | 1418 001d | ba45 ffff | ff48 ff74 | 2450 488f | 4424 2048 | ff74 2430 | 488f 4424 
  0x000001c3987d4ec4: 2848 8944 | 24f8 8b44 | 2440 8944 | 2430 488b | 4424 f848 | ff74 2448 | 488f 4424 | 3889 5c24 
  0x000001c3987d4ee4: 4c48 ff74 | 2458 488f | 4424 5044 | 8954 245c 

  0x000001c3987d4ef4: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987d4ef4: 6666 90e8 

  0x000001c3987d4ef8: ; ImmutableOopMap {[32]=Oop [40]=Oop [56]=Oop [76]=NarrowOop [80]=Oop [96]=Oop [104]=NarrowOop [108]=NarrowOop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.lang.Thread::getAndClearInterrupt@6 (line 1782)
                      ; - java.lang.Thread::interrupted@3 (line 1745)
                      ; - java.util.concurrent.locks.ReentrantLock$Sync::lockInterruptibly@0 (line 158)
                      ; - java.util.concurrent.locks.ReentrantLock::lockInterruptibly@4 (line 372)
                      ; - java.util.concurrent.LinkedBlockingQueue::take@13 (line 432)
                      ; - java.util.concurrent.ThreadPoolExecutor::getTask@147 (line 1070)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@26 (line 1130)
  0x000001c3987d4ef8: 04f7 91ff 

  0x000001c3987d4efc: ;   {other}
  0x000001c3987d4efc: 0f1f 8400 | 6c18 001e | ba45 ffff | ff48 ff74 | 2450 488f | 4424 2848 | 8944 24f8 | 8b44 2440 
  0x000001c3987d4f1c: 8944 2438 | 488b 4424 | f848 ff74 | 2448 488f 

  0x000001c3987d4f2c: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987d4f2c: 4424 40e8 

  0x000001c3987d4f30: ; ImmutableOopMap {[40]=Oop [48]=Oop [64]=Oop [96]=Oop [104]=NarrowOop [112]=NarrowOop }
                      ;*if_icmple {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.concurrent.LinkedBlockingQueue::take@47 (line 439)
                      ; - java.util.concurrent.ThreadPoolExecutor::getTask@147 (line 1070)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@26 (line 1130)
  0x000001c3987d4f30: ccf6 91ff 

  0x000001c3987d4f34: ;   {other}
  0x000001c3987d4f34: 0f1f 8400 | a418 001f | ba45 ffff | ff48 ff74 | 2450 488f | 4424 2848 | 8944 24f8 | 8b44 2440 
  0x000001c3987d4f54: 8944 2438 | 488b 4424 | f848 ff74 | 2448 488f | 4424 4089 | 5c24 5044 | 895c 2454 

  0x000001c3987d4f70: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987d4f70: 6666 90e8 

  0x000001c3987d4f74: ; ImmutableOopMap {[40]=Oop [48]=Oop [64]=Oop [80]=NarrowOop [84]=NarrowOop [88]=Oop [96]=Oop [112]=NarrowOop }
                      ;*if_acmpeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.concurrent.locks.ReentrantLock$Sync::tryRelease@14 (line 174)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::release@2 (line 1059)
                      ; - java.util.concurrent.locks.ReentrantLock::unlock@5 (line 494)
                      ; - java.util.concurrent.LinkedBlockingQueue::take@61 (line 442)
                      ; - java.util.concurrent.ThreadPoolExecutor::getTask@147 (line 1070)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@26 (line 1130)
  0x000001c3987d4f74: 88f6 91ff 

  0x000001c3987d4f78: ;   {other}
  0x000001c3987d4f78: 0f1f 8400 | e818 0020 | ba45 ffff | ff48 ff74 | 2450 488f | 4424 2848 | 8944 24f8 | 8b44 2440 
  0x000001c3987d4f98: 8944 2438 | 488b 4424 | f848 ff74 | 2448 488f | 4424 4044 | 895c 2450 

  0x000001c3987d4fb0: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987d4fb0: 6666 90e8 

  0x000001c3987d4fb4: ; ImmutableOopMap {[40]=Oop [48]=Oop [64]=Oop [96]=Oop [112]=NarrowOop }
                      ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.concurrent.LinkedBlockingQueue::take@82 (line 444)
                      ; - java.util.concurrent.ThreadPoolExecutor::getTask@147 (line 1070)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@26 (line 1130)
  0x000001c3987d4fb4: 48f6 91ff 

  0x000001c3987d4fb8: ;   {other}
  0x000001c3987d4fb8: 0f1f 8400 | 2819 0021 | ba45 ffff | ff48 ff74 | 2430 488f | 4424 2848 | 8944 24f8 | 8b44 2440 
  0x000001c3987d4fd8: 8944 2438 | 488b 4424 | f844 895c 

  0x000001c3987d4fe4: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987d4fe4: 243c 90e8 

  0x000001c3987d4fe8: ; ImmutableOopMap {[40]=Oop [72]=Oop [80]=Oop [96]=Oop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.concurrent.ThreadPoolExecutor$Worker::tryAcquire@6 (line 655)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::acquire@2 (line 989)
                      ; - java.util.concurrent.ThreadPoolExecutor$Worker::lock@2 (line 668)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@35 (line 1131)
  0x000001c3987d4fe8: 14f6 91ff 

  0x000001c3987d4fec: ;   {other}
  0x000001c3987d4fec: 0f1f 8400 | 5c19 0022 | ba45 ffff | ff48 ff74 | 2430 488f | 4424 2844 | 8954 243c 

  0x000001c3987d5008: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987d5008: 6666 90e8 

  0x000001c3987d500c: ; ImmutableOopMap {[40]=Oop [72]=Oop [80]=Oop [96]=Oop }
                      ;*if_icmplt {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.concurrent.ThreadPoolExecutor::runStateAtLeast@2 (line 413)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@47 (line 1136)
  0x000001c3987d500c: f0f5 91ff 

  0x000001c3987d5010: ;   {other}
  0x000001c3987d5010: 0f1f 8400 | 8019 0023 | ba45 ffff | ff48 8b6c | 2448 48ff | 7424 3048 | 8f44 2428 | 4889 4424 
  0x000001c3987d5030: f88b 4424 | 4089 4424 | 3848 8b44 | 24f8 4489 

  0x000001c3987d5040: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987d5040: 5c24 48e8 

  0x000001c3987d5044: ; ImmutableOopMap {rbp=Oop [40]=Oop [80]=Oop [88]=Oop [96]=Oop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.lang.Thread::getAndClearInterrupt@6 (line 1782)
                      ; - java.lang.Thread::interrupted@3 (line 1745)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@53 (line 1137)
  0x000001c3987d5044: b8f5 91ff 

  0x000001c3987d5048: ;   {other}
  0x000001c3987d5048: 0f1f 8400 | b819 0024 | ba45 ffff | ff48 ff74 | 2430 488f | 4424 2848 | ff74 2460 | 488f 4424 
  0x000001c3987d5068: 3048 8944 | 24f8 8b44 | 2440 8944 | 2438 488b | 4424 f889 

  0x000001c3987d507c: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987d507c: 5c24 3ce8 

  0x000001c3987d5080: ; ImmutableOopMap {[40]=Oop [48]=Oop [72]=Oop [80]=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.concurrent.FutureTask::runAndReset@18 (line 350)
                      ; - com.sun.javafx.tk.RenderJob::run@1 (line 58)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@92 (line 1144)
  0x000001c3987d5080: 7cf5 91ff 

  0x000001c3987d5084: ;   {other}
  0x000001c3987d5084: 0f1f 8400 | f419 0025 | ba45 ffff | ff48 8b6c | 2448 48ff | 7424 5048 | 8f44 2420 | 48ff 7424 
  0x000001c3987d50a4: 3048 8f44 | 2428 48ff | 7424 6048 | 8f44 2430 | 4889 4424 | f88b 4424 | 4089 4424 | 3848 8b44 
  0x000001c3987d50c4: 24f8 895c | 243c 4489 

  0x000001c3987d50cc: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987d50cc: 5424 54e8 

  0x000001c3987d50d0: ; ImmutableOopMap {rbp=Oop [32]=Oop [40]=Oop [48]=Oop }
                      ;*if_icmplt {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.concurrent.FutureTask::runAndReset@75 (line 371)
                      ; - com.sun.javafx.tk.RenderJob::run@1 (line 58)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@92 (line 1144)
  0x000001c3987d50d0: 2cf5 91ff 

  0x000001c3987d50d4: ;   {other}
  0x000001c3987d50d4: 0f1f 8400 | 441a 0026 | ba45 ffff | ff48 ff74 | 2430 488f | 4424 2848 | ff74 2460 | 488f 4424 
  0x000001c3987d50f4: 3048 8944 | 24f8 8b44 | 2440 8944 | 2438 488b | 4424 f889 

  0x000001c3987d5108: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987d5108: 5c24 3ce8 

  0x000001c3987d510c: ; ImmutableOopMap {[40]=Oop [48]=Oop [72]=Oop [80]=Oop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.concurrent.FutureTask::runAndReset@112 (line 374)
                      ; - com.sun.javafx.tk.RenderJob::run@1 (line 58)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@92 (line 1144)
  0x000001c3987d510c: f0f4 91ff 

  0x000001c3987d5110: ;   {other}
  0x000001c3987d5110: 0f1f 8400 | 801a 0027 | ba45 ffff | ff48 ff74 | 2430 488f | 4424 2848 | 8944 24f8 | 8b44 2440 
  0x000001c3987d5130: 8944 2438 | 488b 4424 | f844 8944 

  0x000001c3987d513c: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987d513c: 2440 90e8 

  0x000001c3987d5140: ; ImmutableOopMap {[40]=Oop [64]=NarrowOop [72]=Oop [80]=Oop [96]=Oop [104]=NarrowOop }
                      ;*ifnonnull {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.tk.quantum.PaintCollector::done@51 (line 282)
                      ; - com.sun.javafx.tk.RenderJob::run@81 (line 77)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@92 (line 1144)
  0x000001c3987d5140: bcf4 91ff 

  0x000001c3987d5144: ;   {other}
  0x000001c3987d5144: 0f1f 8400 | b41a 0028 | ba45 ffff | ff48 ff74 | 2448 488f | 4424 2048 | ff74 2450 | 488f 4424 
  0x000001c3987d5164: 2844 8954 

  0x000001c3987d5168: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987d5168: 2450 90e8 

  0x000001c3987d516c: ; ImmutableOopMap {rbp=Oop [32]=Oop [40]=Oop [48]=Oop [80]=NarrowOop [96]=Oop [104]=NarrowOop [112]=Oop }
                      ;*ifnull {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) javafx.scene.Scene$ScenePeerPaintListener::frameRendered@13 (line 2998)
                      ; - com.sun.javafx.tk.quantum.GlassScene::frameRendered@11 (line 328)
                      ; - com.sun.javafx.tk.quantum.PaintCollector::done@65 (line 291)
                      ; - com.sun.javafx.tk.RenderJob::run@81 (line 77)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@92 (line 1144)
  0x000001c3987d516c: 90f4 91ff 

  0x000001c3987d5170: ;   {other}
  0x000001c3987d5170: 0f1f 8400 | e01a 0029 | ba45 ffff | ff48 ff74 | 2430 488f | 4424 2848 | 8944 24f8 | 8b44 2440 
  0x000001c3987d5190: 8944 2438 | 488b 4424 | f844 8954 

  0x000001c3987d519c: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987d519c: 243c 90e8 

  0x000001c3987d51a0: ; ImmutableOopMap {[40]=Oop [72]=Oop [80]=Oop [96]=Oop [112]=Oop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.tk.quantum.PaintCollector::done@84 (line 303)
                      ; - com.sun.javafx.tk.RenderJob::run@81 (line 77)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@92 (line 1144)
  0x000001c3987d51a0: 5cf4 91ff 

  0x000001c3987d51a4: ;   {other}
  0x000001c3987d51a4: 0f1f 8400 | 141b 002a | ba45 ffff | ff48 8b6c | 2448 48ff | 7424 3048 | 8f44 2428 | 4889 4424 
  0x000001c3987d51c4: f88b 4424 | 4089 4424 | 3848 8b44 | 24f8 4489 | 4424 3c44 | 8954 2448 

  0x000001c3987d51dc: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987d51dc: 6666 90e8 

  0x000001c3987d51e0: ; ImmutableOopMap {rbp=Oop [40]=Oop [60]=NarrowOop [80]=Oop [96]=Oop [112]=Oop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.tk.quantum.QuantumToolkit::vsyncHint@10 (line 610)
                      ; - com.sun.javafx.tk.quantum.PaintCollector::done@101 (line 304)
                      ; - com.sun.javafx.tk.RenderJob::run@81 (line 77)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@92 (line 1144)
  0x000001c3987d51e0: 1cf4 91ff 

  0x000001c3987d51e4: ;   {other}
  0x000001c3987d51e4: 0f1f 8400 | 541b 002b | ba45 ffff | ff48 8b6c | 2420 48ff | 7424 3048 | 8f44 2428 | 4489 5424 
  0x000001c3987d5204: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987d5204: 3c66 90e8 

  0x000001c3987d5208: ; ImmutableOopMap {rbp=Oop [40]=Oop [80]=Oop [96]=Oop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.tk.quantum.QuantumRenderer::afterExecute@9 (line 234)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@100 (line 1145)
  0x000001c3987d5208: f4f3 91ff 

  0x000001c3987d520c: ;   {other}
  0x000001c3987d520c: 0f1f 8400 | 7c1b 002c | ba45 ffff | ff48 ff74 | 2430 488f | 4424 2848 | 8944 24f8 | 8b44 2440 
  0x000001c3987d522c: 8944 2438 | 488b 4424 | f844 8954 | 243c 4489 

  0x000001c3987d523c: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987d523c: 4424 40e8 

  0x000001c3987d5240: ; ImmutableOopMap {[40]=Oop [60]=NarrowOop [72]=Oop [80]=Oop [96]=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.concurrent.CountDownLatch$Sync::tryReleaseShared@6 (line 179)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::releaseShared@2 (line 1146)
                      ; - java.util.concurrent.CountDownLatch::countDown@5 (line 290)
                      ; - com.sun.javafx.tk.quantum.PaintCollector::done@123 (line 318)
                      ; - com.sun.javafx.tk.RenderJob::run@81 (line 77)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@92 (line 1144)
  0x000001c3987d5240: bcf3 91ff 

  0x000001c3987d5244: ;   {other}
  0x000001c3987d5244: 0f1f 8400 | b41b 002d | ba45 ffff | ff48 ff74 | 2430 488f | 4424 2848 | 8944 24f8 | 8b44 2440 
  0x000001c3987d5264: 8944 2438 | 488b 4424 | f844 8954 | 2440 4489 

  0x000001c3987d5274: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987d5274: 4c24 44e8 

  0x000001c3987d5278: ; ImmutableOopMap {[40]=Oop [64]=NarrowOop [72]=Oop [80]=Oop [96]=Oop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.concurrent.CountDownLatch$Sync::tryReleaseShared@21 (line 182)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::releaseShared@2 (line 1146)
                      ; - java.util.concurrent.CountDownLatch::countDown@5 (line 290)
                      ; - com.sun.javafx.tk.quantum.PaintCollector::done@123 (line 318)
                      ; - com.sun.javafx.tk.RenderJob::run@81 (line 77)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@92 (line 1144)
  0x000001c3987d5278: 84f3 91ff 

  0x000001c3987d527c: ;   {other}
  0x000001c3987d527c: 0f1f 8400 | ec1b 002e | 4533 c0e9 | 4ee8 ffff | 33c9 e967 | e8ff ff45 | 33ed e990 | e8ff ffba 
  0x000001c3987d529c: 45ff ffff | 488b 6c24 | 2048 ff74 | 2430 488f | 4424 2844 | 895c 2434 

  0x000001c3987d52b4: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987d52b4: 6666 90e8 

  0x000001c3987d52b8: ; ImmutableOopMap {rbp=Oop [40]=Oop [52]=NarrowOop [80]=Oop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.concurrent.locks.LockSupport::unpark@8 (line 178)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::signalNext@30 (line 645)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::release@12 (line 1060)
                      ; - java.util.concurrent.ThreadPoolExecutor$Worker::unlock@2 (line 670)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@131 (line 1153)
  0x000001c3987d52b8: 44f3 91ff 

  0x000001c3987d52bc: ;   {other}
  0x000001c3987d52bc: 0f1f 8400 | 2c1c 002f | ba45 ffff | ff48 ff74 | 2430 488f | 4424 2844 | 895c 243c 

  0x000001c3987d52d8: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987d52d8: 6666 90e8 

  0x000001c3987d52dc: ; ImmutableOopMap {[40]=Oop [60]=NarrowOop [72]=Oop [80]=Oop [96]=Oop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.concurrent.locks.LockSupport::unpark@8 (line 178)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::signalNext@30 (line 645)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::releaseShared@12 (line 1147)
                      ; - java.util.concurrent.CountDownLatch::countDown@5 (line 290)
                      ; - com.sun.javafx.tk.quantum.PaintCollector::done@123 (line 318)
                      ; - com.sun.javafx.tk.RenderJob::run@81 (line 77)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@92 (line 1144)
  0x000001c3987d52dc: 20f3 91ff 

  0x000001c3987d52e0: ;   {other}
  0x000001c3987d52e0: 0f1f 8400 | 501c 0030 | ba45 ffff | ff48 ff74 | 2450 488f | 4424 2848 | 8944 24f8 | 8b44 2440 
  0x000001c3987d5300: 8944 2438 | 488b 4424 | f848 ff74 | 2448 488f | 4424 4044 | 8954 2450 

  0x000001c3987d5318: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987d5318: 6666 90e8 

  0x000001c3987d531c: ; ImmutableOopMap {[40]=Oop [48]=Oop [64]=Oop [80]=NarrowOop [96]=Oop [112]=NarrowOop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.concurrent.locks.LockSupport::unpark@8 (line 178)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::signalNext@30 (line 645)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::release@12 (line 1060)
                      ; - java.util.concurrent.locks.ReentrantLock::unlock@5 (line 494)
                      ; - java.util.concurrent.LinkedBlockingQueue::take@61 (line 442)
                      ; - java.util.concurrent.ThreadPoolExecutor::getTask@147 (line 1070)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@26 (line 1130)
  0x000001c3987d531c: e0f2 91ff 

  0x000001c3987d5320: ;   {other}
  0x000001c3987d5320: 0f1f 8400 | 901c 0031 | ba45 ffff | ff48 8b6c | 2420 48ff | 7424 3048 | 8f44 2428 | 4489 5424 
  0x000001c3987d5340: 3844 8944 

  0x000001c3987d5344: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987d5344: 243c 90e8 

  0x000001c3987d5348: ; ImmutableOopMap {rbp=Oop [40]=Oop [56]=NarrowOop [80]=Oop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) jdk.internal.misc.Unsafe::getAndBitwiseAndInt@21 (line 3233)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer$Node::getAndUnsetStatus@10 (line 481)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::signalNext@22 (line 644)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::release@12 (line 1060)
                      ; - java.util.concurrent.ThreadPoolExecutor$Worker::unlock@2 (line 670)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@131 (line 1153)
  0x000001c3987d5348: b4f2 91ff 

  0x000001c3987d534c: ;   {other}
  0x000001c3987d534c: 0f1f 8400 | bc1c 0032 | ba45 ffff | ff48 ff74 | 2430 488f | 4424 2848 | 8944 24f8 | 8b44 2440 
  0x000001c3987d536c: 8944 2438 | 488b 4424 | f844 8944 | 2440 4489 

  0x000001c3987d537c: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987d537c: 5c24 44e8 

  0x000001c3987d5380: ; ImmutableOopMap {[40]=Oop [64]=NarrowOop [72]=Oop [80]=Oop [96]=Oop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) jdk.internal.misc.Unsafe::getAndBitwiseAndInt@21 (line 3233)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer$Node::getAndUnsetStatus@10 (line 481)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::signalNext@22 (line 644)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::releaseShared@12 (line 1147)
                      ; - java.util.concurrent.CountDownLatch::countDown@5 (line 290)
                      ; - com.sun.javafx.tk.quantum.PaintCollector::done@123 (line 318)
                      ; - com.sun.javafx.tk.RenderJob::run@81 (line 77)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@92 (line 1144)
  0x000001c3987d5380: 7cf2 91ff 

  0x000001c3987d5384: ;   {other}
  0x000001c3987d5384: 0f1f 8400 | f41c 0033 | ba45 ffff | ff48 ff74 | 2450 488f | 4424 2848 | 8944 24f8 | 8b44 2440 
  0x000001c3987d53a4: 8944 2438 | 488b 4424 | f848 ff74 | 2448 488f | 4424 4044 | 8954 2454 | 4489 4424 

  0x000001c3987d53c0: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987d53c0: 5866 90e8 

  0x000001c3987d53c4: ; ImmutableOopMap {[40]=Oop [48]=Oop [64]=Oop [84]=NarrowOop [96]=Oop [112]=NarrowOop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) jdk.internal.misc.Unsafe::getAndBitwiseAndInt@21 (line 3233)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer$Node::getAndUnsetStatus@10 (line 481)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::signalNext@22 (line 644)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::release@12 (line 1060)
                      ; - java.util.concurrent.locks.ReentrantLock::unlock@5 (line 494)
                      ; - java.util.concurrent.LinkedBlockingQueue::take@61 (line 442)
                      ; - java.util.concurrent.ThreadPoolExecutor::getTask@147 (line 1070)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@26 (line 1130)
  0x000001c3987d53c4: 38f2 91ff 

  0x000001c3987d53c8: ;   {other}
  0x000001c3987d53c8: 0f1f 8400 | 381d 0034 | ba45 ffff | ff48 ff74 | 2430 488f | 4424 2848 | 8944 24f8 | 8b44 2440 
  0x000001c3987d53e8: 8944 2430 | 488b 4424 | f848 ff74 | 2448 488f | 4424 3889 

  0x000001c3987d53fc: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987d53fc: 5c24 4ce8 

  0x000001c3987d5400: ; ImmutableOopMap {[40]=Oop [56]=Oop [76]=NarrowOop [80]=Oop [96]=Oop [104]=NarrowOop [108]=NarrowOop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.concurrent.locks.ReentrantLock$Sync::lockInterruptibly@18 (line 160)
                      ; - java.util.concurrent.locks.ReentrantLock::lockInterruptibly@4 (line 372)
                      ; - java.util.concurrent.LinkedBlockingQueue::take@13 (line 432)
                      ; - java.util.concurrent.ThreadPoolExecutor::getTask@147 (line 1070)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@26 (line 1130)
  0x000001c3987d5400: fcf1 91ff 

  0x000001c3987d5404: ;   {other}
  0x000001c3987d5404: 0f1f 8400 | 741d 0035 | ba45 ffff | ff48 ff74 | 2450 488f | 4424 2848 | 8944 24f8 | 8b44 2440 
  0x000001c3987d5424: 8944 2438 | 488b 4424 | f848 ff74 | 2448 488f | 4424 4089 

  0x000001c3987d5438: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987d5438: 5c24 54e8 

  0x000001c3987d543c: ; ImmutableOopMap {[40]=Oop [48]=Oop [64]=Oop [84]=NarrowOop [96]=Oop [104]=NarrowOop [108]=NarrowOop }
                      ;*ifge {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.concurrent.locks.ReentrantLock$NonfairSync::initialTryLock@36 (line 230)
                      ; - java.util.concurrent.locks.ReentrantLock$Sync::lockInterruptibly@15 (line 160)
                      ; - java.util.concurrent.locks.ReentrantLock::lockInterruptibly@4 (line 372)
                      ; - java.util.concurrent.LinkedBlockingQueue::take@13 (line 432)
                      ; - java.util.concurrent.ThreadPoolExecutor::getTask@147 (line 1070)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@26 (line 1130)
  0x000001c3987d543c: c0f1 91ff 

  0x000001c3987d5440: ;   {other}
  0x000001c3987d5440: 0f1f 8400 | b01d 0036 | ba76 ffff | ff49 8be8 | 4889 4c24 | 204c 896c | 2428 4889 | 5c24 3089 
  0x000001c3987d5460: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987d5460: 7c24 38e8 

  0x000001c3987d5464: ; ImmutableOopMap {rbp=Oop [32]=Oop [40]=Oop [48]=Oop }
                      ;*aload_3 {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@21 (line 1130)
  0x000001c3987d5464: 98f1 91ff 

  0x000001c3987d5468: ;   {other}
  0x000001c3987d5468: 0f1f 8400 | d81d 0037 | ba8d ffff | ff4c 896c | 2420 4889 | 5c24 2889 | 7c24 3048 | 8974 2438 
  0x000001c3987d5488: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987d5488: 6666 90e8 

  0x000001c3987d548c: ; ImmutableOopMap {rbp=Oop [32]=Oop [40]=Oop [56]=Oop }
                      ;*aload_3 {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@21 (line 1130)
  0x000001c3987d548c: 70f1 91ff 

  0x000001c3987d5490: ;   {other}
  0x000001c3987d5490: 0f1f 8400 | 001e 0038 | bade ffff | ff48 ff74 | 2430 488f 

  0x000001c3987d54a4: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987d54a4: 4424 28e8 

  0x000001c3987d54a8: ; ImmutableOopMap {[40]=Oop [72]=Oop [80]=Oop [112]=NarrowOop }
                      ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.concurrent.ThreadPoolExecutor::getTask@152 (line 1070)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@26 (line 1130)
  0x000001c3987d54a8: 54f1 91ff 

  0x000001c3987d54ac: ;   {other}
  0x000001c3987d54ac: 0f1f 8400 | 1c1e 0039 | 488b 5424 | 604c 8bc0 

  0x000001c3987d54bc: ;   {optimized virtual_call}
  0x000001c3987d54bc: 6666 90e8 

  0x000001c3987d54c0: ; ImmutableOopMap {[32]=Oop [40]=NarrowOop [48]=Oop [72]=Oop [80]=Oop [88]=Oop [96]=Oop [56]=Derived_oop_[96] }
                      ;*invokevirtual setException {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.concurrent.FutureTask::runAndReset@60 (line 361)
                      ; - com.sun.javafx.tk.RenderJob::run@1 (line 58)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@92 (line 1144)
  0x000001c3987d54c0: bc95 91ff 

  0x000001c3987d54c4: ;   {other}
  0x000001c3987d54c4: 0f1f 8400 | 341e 003a | 33db e946 | e9ff ffba | f6ff ffff | 48ff 7424 | 3048 8f44 

  0x000001c3987d54e0: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987d54e0: 2428 90e8 

  0x000001c3987d54e4: ; ImmutableOopMap {[40]=Oop [72]=Oop [80]=Oop }
                      ;*invokevirtual get {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.concurrent.ThreadPoolExecutor::getTask@6 (line 1046)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@26 (line 1130)
  0x000001c3987d54e4: 18f1 91ff 

  0x000001c3987d54e8: ;   {other}
  0x000001c3987d54e8: 0f1f 8400 | 581e 003b | baf6 ffff | ff48 ff74 | 2430 488f 

  0x000001c3987d54fc: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987d54fc: 4424 28e8 

  0x000001c3987d5500: ; ImmutableOopMap {[40]=Oop [72]=Oop [80]=Oop }
                      ;*invokeinterface take {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.concurrent.ThreadPoolExecutor::getTask@147 (line 1070)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@26 (line 1130)
  0x000001c3987d5500: fcf0 91ff 

  0x000001c3987d5504: ;   {other}
  0x000001c3987d5504: 0f1f 8400 | 741e 003c | baf6 ffff | ff48 ff74 | 2430 488f | 4424 2848 | 8944 24f8 | 8b44 2440 
  0x000001c3987d5524: 8944 2430 | 488b 4424 

  0x000001c3987d552c: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987d552c: f866 90e8 

  0x000001c3987d5530: ; ImmutableOopMap {[40]=Oop [72]=Oop [80]=Oop [96]=Oop [108]=NarrowOop }
                      ;*invokevirtual lockInterruptibly {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.concurrent.LinkedBlockingQueue::take@13 (line 432)
                      ; - java.util.concurrent.ThreadPoolExecutor::getTask@147 (line 1070)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@26 (line 1130)
  0x000001c3987d5530: ccf0 91ff 

  0x000001c3987d5534: ;   {other}
  0x000001c3987d5534: 0f1f 8400 | a41e 003d | baf6 ffff | ff48 ff74 | 2430 488f | 4424 2848 | 8944 24f8 | 8b44 2440 
  0x000001c3987d5554: 8944 2430 | 488b 4424 

  0x000001c3987d555c: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987d555c: f866 90e8 

  0x000001c3987d5560: ; ImmutableOopMap {[40]=Oop [72]=Oop [80]=Oop [96]=Oop [104]=NarrowOop }
                      ;*invokevirtual get {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.concurrent.LinkedBlockingQueue::take@17 (line 434)
                      ; - java.util.concurrent.ThreadPoolExecutor::getTask@147 (line 1070)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@26 (line 1130)
  0x000001c3987d5560: 9cf0 91ff 

  0x000001c3987d5564: ;   {other}
  0x000001c3987d5564: 0f1f 8400 | d41e 003e | baf6 ffff | ff48 ff74 | 2430 488f | 4424 2848 | 8944 24f8 | 8b44 2440 
  0x000001c3987d5584: 8944 2430 | 488b 4424 | f848 ff74 | 2448 488f 

  0x000001c3987d5594: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987d5594: 4424 38e8 

  0x000001c3987d5598: ; ImmutableOopMap {[40]=Oop [56]=Oop [80]=Oop [96]=Oop [104]=NarrowOop [108]=NarrowOop }
                      ;*getfield next {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.concurrent.LinkedBlockingQueue::dequeue@6 (line 216)
                      ; - java.util.concurrent.LinkedBlockingQueue::take@36 (line 437)
                      ; - java.util.concurrent.ThreadPoolExecutor::getTask@147 (line 1070)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@26 (line 1130)
  0x000001c3987d5598: 64f0 91ff 

  0x000001c3987d559c: ;   {other}
  0x000001c3987d559c: 0f1f 8400 | 0c1f 003f | baf6 ffff | ff48 ff74 | 2430 488f | 4424 2848 | 8944 24f8 | 8b44 2440 
  0x000001c3987d55bc: 8944 2430 | 488b 4424 | f848 ff74 | 2448 488f 

  0x000001c3987d55cc: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987d55cc: 4424 38e8 

  0x000001c3987d55d0: ; ImmutableOopMap {[40]=Oop [56]=Oop [80]=Oop [96]=Oop [104]=NarrowOop [108]=NarrowOop }
                      ;*getfield item {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.concurrent.LinkedBlockingQueue::dequeue@21 (line 219)
                      ; - java.util.concurrent.LinkedBlockingQueue::take@36 (line 437)
                      ; - java.util.concurrent.ThreadPoolExecutor::getTask@147 (line 1070)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@26 (line 1130)
  0x000001c3987d55d0: 2cf0 91ff 

  0x000001c3987d55d4: ;   {other}
  0x000001c3987d55d4: 0f1f 8400 | 441f 0040 | baf6 ffff | ff48 8944 | 24f8 8b44 | 2440 8944 | 2438 488b | 4424 f848 
  0x000001c3987d55f4: ff74 2448 | 488f 4424 

  0x000001c3987d55fc: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987d55fc: 4066 90e8 

  0x000001c3987d5600: ; ImmutableOopMap {[48]=Oop [64]=Oop [80]=Oop [96]=Oop [112]=NarrowOop }
                      ;*invokevirtual release {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.concurrent.locks.ReentrantLock::unlock@5 (line 494)
                      ; - java.util.concurrent.LinkedBlockingQueue::take@61 (line 442)
                      ; - java.util.concurrent.ThreadPoolExecutor::getTask@147 (line 1070)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@26 (line 1130)
  0x000001c3987d5600: fcef 91ff 

  0x000001c3987d5604: ;   {other}
  0x000001c3987d5604: 0f1f 8400 | 741f 0041 | baf4 ffff | ff48 ff74 | 2430 488f 

  0x000001c3987d5618: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987d5618: 4424 28e8 

  0x000001c3987d561c: ; ImmutableOopMap {[40]=Oop [72]=Oop [80]=Oop }
                      ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.concurrent.ThreadPoolExecutor::getTask@152 (line 1070)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@26 (line 1130)
  0x000001c3987d561c: e0ef 91ff 

  0x000001c3987d5620: ;   {other}
  0x000001c3987d5620: 0f1f 8400 | 901f 0042 | baf6 ffff | ff48 ff74 | 2430 488f 

  0x000001c3987d5634: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987d5634: 4424 28e8 

  0x000001c3987d5638: ; ImmutableOopMap {[40]=Oop [72]=Oop [80]=Oop [96]=Oop }
                      ;*invokevirtual get {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@42 (line 1136)
  0x000001c3987d5638: c4ef 91ff 

  0x000001c3987d563c: ;   {other}
  0x000001c3987d563c: 0f1f 8400 | ac1f 0043 | baf6 ffff | ff48 8b6c | 2448 48ff | 7424 3048 | 8f44 2428 | 48ff 7424 
  0x000001c3987d565c: 6048 8f44 | 2430 4889 | 4424 f88b | 4424 4089 | 4424 3848 | 8b44 24f8 

  0x000001c3987d5674: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987d5674: 6666 90e8 

  0x000001c3987d5678: ; ImmutableOopMap {rbp=Oop [40]=Oop [48]=Oop [80]=Oop }
                      ;*invokeinterface run {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.concurrent.Executors$RunnableAdapter::call@4 (line 572)
                      ; - java.util.concurrent.FutureTask::runAndReset@44 (line 358)
                      ; - com.sun.javafx.tk.RenderJob::run@1 (line 58)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@92 (line 1144)
  0x000001c3987d5678: 84ef 91ff 

  0x000001c3987d567c: ;   {other}
  0x000001c3987d567c: 0f1f 8400 | ec1f 0044 | baf6 ffff | ff48 ff74 | 2448 488f 

  0x000001c3987d5690: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987d5690: 4424 20e8 

  0x000001c3987d5694: ; ImmutableOopMap {rbp=Oop [32]=Oop [48]=Oop [80]=Oop [96]=Oop [104]=NarrowOop [112]=Oop }
                      ;*getfield tracker {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) javafx.scene.Scene$ScenePeerPaintListener::frameRendered@10 (line 2998)
                      ; - com.sun.javafx.tk.quantum.GlassScene::frameRendered@11 (line 328)
                      ; - com.sun.javafx.tk.quantum.PaintCollector::done@65 (line 291)
                      ; - com.sun.javafx.tk.RenderJob::run@81 (line 77)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@92 (line 1144)
  0x000001c3987d5694: 68ef 91ff 

  0x000001c3987d5698: ;   {other}
  0x000001c3987d5698: 0f1f 8400 | 0820 0045 | baf6 ffff | ff48 ff74 | 2430 488f 

  0x000001c3987d56ac: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987d56ac: 4424 28e8 

  0x000001c3987d56b0: ; ImmutableOopMap {[40]=Oop [72]=Oop [80]=Oop [96]=Oop }
                      ;*invokevirtual getCount {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.PaintCollector::done@72 (line 300)
                      ; - com.sun.javafx.tk.RenderJob::run@81 (line 77)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@92 (line 1144)
  0x000001c3987d56b0: 4cef 91ff 

  0x000001c3987d56b4: ;   {other}
  0x000001c3987d56b4: 0f1f 8400 | 2420 0046 | baf6 ffff | ff48 ff74 | 2430 488f 

  0x000001c3987d56c8: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987d56c8: 4424 28e8 

  0x000001c3987d56cc: ; ImmutableOopMap {[40]=Oop [72]=Oop [80]=Oop [96]=Oop }
                      ;*invokevirtual getCount {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.concurrent.CountDownLatch::getCount@4 (line 301)
                      ; - com.sun.javafx.tk.quantum.PaintCollector::done@72 (line 300)
                      ; - com.sun.javafx.tk.RenderJob::run@81 (line 77)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@92 (line 1144)
  0x000001c3987d56cc: 30ef 91ff 

  0x000001c3987d56d0: ;   {other}
  0x000001c3987d56d0: 0f1f 8400 | 4020 0047 | baf6 ffff | ff48 ff74 | 2430 488f 

  0x000001c3987d56e4: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987d56e4: 4424 28e8 

  0x000001c3987d56e8: ; ImmutableOopMap {[40]=Oop [72]=Oop [80]=Oop [96]=Oop }
                      ;*invokevirtual hasNativeSystemVsync {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.PaintCollector::done@91 (line 303)
                      ; - com.sun.javafx.tk.RenderJob::run@81 (line 77)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@92 (line 1144)
  0x000001c3987d56e8: 14ef 91ff 

  0x000001c3987d56ec: ;   {other}
  0x000001c3987d56ec: 0f1f 8400 | 5c20 0048 | baf6 ffff | ff48 ff74 | 2430 488f 

  0x000001c3987d5700: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987d5700: 4424 28e8 

  0x000001c3987d5704: ; ImmutableOopMap {[40]=Oop [72]=Oop [80]=Oop [96]=Oop }
                      ;*invokevirtual countDown {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.PaintCollector::done@123 (line 318)
                      ; - com.sun.javafx.tk.RenderJob::run@81 (line 77)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@92 (line 1144)
  0x000001c3987d5704: f8ee 91ff 

  0x000001c3987d5708: ;   {other}
  0x000001c3987d5708: 0f1f 8400 | 7820 0049 | baf6 ffff | ff48 ff74 | 2430 488f 

  0x000001c3987d571c: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987d571c: 4424 28e8 

  0x000001c3987d5720: ; ImmutableOopMap {[40]=Oop [72]=Oop [80]=Oop [96]=Oop }
                      ;*invokevirtual releaseShared {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.concurrent.CountDownLatch::countDown@5 (line 290)
                      ; - com.sun.javafx.tk.quantum.PaintCollector::done@123 (line 318)
                      ; - com.sun.javafx.tk.RenderJob::run@81 (line 77)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@92 (line 1144)
  0x000001c3987d5720: dcee 91ff 

  0x000001c3987d5724: ;   {other}
  0x000001c3987d5724: 0f1f 8400 | 9420 004a | baf6 ffff | ff48 ff74 | 2430 488f | 4424 2848 | 8944 24f8 | 8b44 2440 
  0x000001c3987d5744: 8944 2430 | 488b 4424 | f848 ff74 | 2448 488f 

  0x000001c3987d5754: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987d5754: 4424 38e8 

  0x000001c3987d5758: ; ImmutableOopMap {[40]=Oop [56]=Oop [80]=Oop [96]=Oop [104]=NarrowOop [108]=NarrowOop }
                      ;*invokeinterface await {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.concurrent.LinkedBlockingQueue::take@27 (line 435)
                      ; - java.util.concurrent.ThreadPoolExecutor::getTask@147 (line 1070)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@26 (line 1130)
  0x000001c3987d5758: a4ee 91ff 

  0x000001c3987d575c: ;   {other}
  0x000001c3987d575c: 0f1f 8400 | cc20 004b | ba45 ffff | ff48 8b6c | 2448 48ff | 7424 5048 | 8f44 2420 | 48ff 7424 
  0x000001c3987d577c: 3048 8f44 | 2428 4889 | 4424 f88b | 4424 4089 | 4424 3848 | 8b44 24f8 | 4c89 5c24 | 404c 895c 
  0x000001c3987d579c: 2448 4489 

  0x000001c3987d57a0: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987d57a0: 4424 50e8 

  0x000001c3987d57a4: ; ImmutableOopMap {rbp=Oop [32]=Oop [40]=Oop [64]=Oop [72]=Oop [80]=NarrowOop }
                      ;*ifnull {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.concurrent.FutureTask::runAndReset@36 (line 356)
                      ; - com.sun.javafx.tk.RenderJob::run@1 (line 58)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@92 (line 1144)
  0x000001c3987d57a4: 58ee 91ff 

  0x000001c3987d57a8: ;   {other}
  0x000001c3987d57a8: 0f1f 8400 | 1821 004c | ba45 ffff | ff48 ff74 | 2430 488f | 4424 2844 | 8954 243c 

  0x000001c3987d57c4: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987d57c4: 6666 90e8 

  0x000001c3987d57c8: ; ImmutableOopMap {[40]=Oop [60]=NarrowOop [72]=Oop [80]=Oop [96]=Oop }
                      ;*ifnull {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.tk.RenderJob::run@73 (line 75)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@92 (line 1144)
  0x000001c3987d57c8: 34ee 91ff 

  0x000001c3987d57cc: ;   {other}
  0x000001c3987d57cc: 0f1f 8400 | 3c21 004d | ba45 ffff | ff48 8b6c | 2448 48ff | 7424 3048 | 8f44 2428 | 4889 4424 
  0x000001c3987d57ec: f88b 4424 | 4089 4424 | 3848 8b44 | 24f8 4489 

  0x000001c3987d57fc: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987d57fc: 5424 3ce8 

  0x000001c3987d5800: ; ImmutableOopMap {rbp=Oop [40]=Oop [60]=NarrowOop [80]=Oop [96]=Oop [104]=NarrowOop [112]=Oop }
                      ;*ifnull {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.tk.quantum.GlassScene::frameRendered@4 (line 327)
                      ; - com.sun.javafx.tk.quantum.PaintCollector::done@65 (line 291)
                      ; - com.sun.javafx.tk.RenderJob::run@81 (line 77)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@92 (line 1144)
  0x000001c3987d5800: fced 91ff 

  0x000001c3987d5804: ;   {other}
  0x000001c3987d5804: 0f1f 8400 | 7421 004e | 488b d0eb | 0348 8bd0 

  0x000001c3987d5814: ;   {optimized virtual_call}
  0x000001c3987d5814: 6666 90e8 

  0x000001c3987d5818: ; ImmutableOopMap {[32]=Oop [40]=NarrowOop [48]=Oop [72]=Oop [80]=Oop [88]=Oop [96]=Oop }
                      ;*invokevirtual printStackTrace {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.RenderJob::run@91 (line 79)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@92 (line 1144)
  0x000001c3987d5818: 6492 91ff 

  0x000001c3987d581c: ;   {other}
  0x000001c3987d581c: 0f1f 8400 | 8c21 004f | e9b6 e9ff | ffba 45ff | ffff 488b | 6c24 2048 | ff74 2430 | 488f 4424 
  0x000001c3987d583c: 2844 895c 

  0x000001c3987d5840: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987d5840: 2438 90e8 

  0x000001c3987d5844: ; ImmutableOopMap {rbp=Oop [40]=Oop [56]=NarrowOop [80]=Oop }
                      ;*ifnull {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.concurrent.locks.LockSupport::unpark@1 (line 177)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::signalNext@30 (line 645)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::release@12 (line 1060)
                      ; - java.util.concurrent.ThreadPoolExecutor$Worker::unlock@2 (line 670)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@131 (line 1153)
  0x000001c3987d5844: b8ed 91ff 

  0x000001c3987d5848: ;   {other}
  0x000001c3987d5848: 0f1f 8400 | b821 0050 | ba45 ffff | ff48 ff74 | 2430 488f | 4424 2848 | 8944 24f8 | 8b44 2440 
  0x000001c3987d5868: 8944 2438 | 488b 4424 | f844 895c 

  0x000001c3987d5874: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987d5874: 2440 90e8 

  0x000001c3987d5878: ; ImmutableOopMap {[40]=Oop [64]=NarrowOop [72]=Oop [80]=Oop [96]=Oop }
                      ;*ifnull {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.concurrent.locks.LockSupport::unpark@1 (line 177)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::signalNext@30 (line 645)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::releaseShared@12 (line 1147)
                      ; - java.util.concurrent.CountDownLatch::countDown@5 (line 290)
                      ; - com.sun.javafx.tk.quantum.PaintCollector::done@123 (line 318)
                      ; - com.sun.javafx.tk.RenderJob::run@81 (line 77)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@92 (line 1144)
  0x000001c3987d5878: 84ed 91ff 

  0x000001c3987d587c: ;   {other}
  0x000001c3987d587c: 0f1f 8400 | ec21 0051 | ba45 ffff | ff48 ff74 | 2450 488f | 4424 2848 | 8944 24f8 | 8b44 2440 
  0x000001c3987d589c: 8944 2438 | 488b 4424 | f848 ff74 | 2448 488f | 4424 4044 | 8954 2454 

  0x000001c3987d58b4: ;   {runtime_call UncommonTrapBlob}
  0x000001c3987d58b4: 6666 90e8 

  0x000001c3987d58b8: ; ImmutableOopMap {[40]=Oop [48]=Oop [64]=Oop [84]=NarrowOop [96]=Oop [112]=NarrowOop }
                      ;*ifnull {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.concurrent.locks.LockSupport::unpark@1 (line 177)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::signalNext@30 (line 645)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::release@12 (line 1060)
                      ; - java.util.concurrent.locks.ReentrantLock::unlock@5 (line 494)
                      ; - java.util.concurrent.LinkedBlockingQueue::take@61 (line 442)
                      ; - java.util.concurrent.ThreadPoolExecutor::getTask@147 (line 1070)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@26 (line 1130)
  0x000001c3987d58b8: 44ed 91ff 

  0x000001c3987d58bc: ;   {other}
  0x000001c3987d58bc: 0f1f 8400 | 2c22 0052 | 498b d749 | ba60 f66c | 09f8 7f00 | 0041 ffd2 

  0x000001c3987d58d4: ;   {other}
  0x000001c3987d58d4: 0f1f 8400 | 0000 0000 | eb58 e98a | 0000 0048 | 8944 2420 | e953 0100 | 0048 8944 | 2420 e9ab 
  0x000001c3987d58f4: 0000 0048 | 8bd0 e962 | 0100 0044 | 8b40 0849 | ba00 0000 | 0008 0000 | 004d 03d0 | e9f7 0000 
  0x000001c3987d5914: 0048 8944 | 2430 488b | 6c24 60eb | 5148 8944 | 2428 4180 | 7f40 000f | 853d 0100 | 0048 8b5c 
  0x000001c3987d5934: 2438 4489 | 23f0 8344 | 24c0 0048 | 8b6c 2460 | 448b 450c | 4183 f805 | 7c1a 48ff | 7424 3048 
  0x000001c3987d5954: 8f44 2420 

  0x000001c3987d5958: ;   {optimized virtual_call}
  0x000001c3987d5958: 488b d5e8 

  0x000001c3987d595c: ; ImmutableOopMap {rbp=Oop [32]=Oop [40]=Oop [72]=Oop [80]=Oop }
                      ;*invokevirtual handlePossibleCancellationInterrupt {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.concurrent.FutureTask::runAndReset@105 (line 372)
                      ; - com.sun.javafx.tk.RenderJob::run@1 (line 58)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@92 (line 1144)
  0x000001c3987d595c: 2091 91ff 

  0x000001c3987d5960: ;   {other}
  0x000001c3987d5960: 0f1f 8400 | d022 0053 | 488b 4424 | 2848 8944 | 2430 488b | 5424 484c | 8bc5 4c8b | 4c24 3066 
  0x000001c3987d5980: 9048 b8ff | ffff ffff 

  0x000001c3987d5988: ;   {virtual_call}
  0x000001c3987d5988: ffff ffe8 

  0x000001c3987d598c: ; ImmutableOopMap {[48]=Oop [72]=Oop [80]=Oop }
                      ;*invokevirtual afterExecute {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@112 (line 1147)
  0x000001c3987d598c: f093 91ff 

  0x000001c3987d5990: ;   {other}
  0x000001c3987d5990: 0f1f 8400 | 0023 0054 | 48ff 7424 | 3048 8f44 | 2420 488b | 6c24 504c | 8b55 2049 | 83c2 014c 
  0x000001c3987d59b0: 8955 20f0 | 8344 24c0 | 0048 8b54 

  0x000001c3987d59bc: ;   {optimized virtual_call}
  0x000001c3987d59bc: 2450 90e8 

  0x000001c3987d59c0: ; ImmutableOopMap {rbp=Oop [32]=Oop [72]=Oop [80]=Oop }
                      ;*invokevirtual unlock {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@152 (line 1153)
  0x000001c3987d59c0: bc90 91ff 

  0x000001c3987d59c4: ;   {other}
  0x000001c3987d59c4: 0f1f 8400 | 3423 0055 | eb72 448b | 5808 49ba | 0000 0000 | 0800 0000 | 4d03 d3eb | 2b48 8be8 
  0x000001c3987d59e4: 488b 5424 

  0x000001c3987d59e8: ;   {optimized virtual_call}
  0x000001c3987d59e8: 3866 90e8 

  0x000001c3987d59ec: ; ImmutableOopMap {rbp=Oop [32]=Oop [40]=NarrowOop [48]=Oop [72]=Oop [80]=Oop [88]=Oop }
                      ;*invokevirtual unlock {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.concurrent.LinkedBlockingQueue::take@71 (line 442)
                      ; - java.util.concurrent.ThreadPoolExecutor::getTask@147 (line 1070)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@26 (line 1130)
  0x000001c3987d59ec: 9090 91ff 

  0x000001c3987d59f0: ;   {other}
  0x000001c3987d59f0: 0f1f 8400 | 6023 0056 | 448b 4508 | 49ba 0000 | 0000 0800 | 0000 4d03 | d048 8bc5 

  0x000001c3987d5a0c: ;   {metadata('java/lang/InterruptedException')}
  0x000001c3987d5a0c: 49bb a0e6 | 0900 0800 | 0000 4d3b | d375 0f4d | 8b97 5804 

  0x000001c3987d5a20: ; ImmutableOopMap {[32]=Oop [40]=NarrowOop [48]=Oop [72]=Oop [80]=Oop [88]=Oop }
                      ;*goto {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.concurrent.ThreadPoolExecutor::getTask@174 (line 1077)
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@26 (line 1130)
                      ;   {poll}
  0x000001c3987d5a20: 0000 4185 | 02e9 29e8 | ffff 4889 | 4424 2048 | 8b6c 2450 | eb0a 4889 | 4424 2048 | 8b6c 2450 
  0x000001c3987d5a40: 488b 5424 | 484c 8bc5 | 448b 4c24 

  0x000001c3987d5a4c: ;   {optimized virtual_call}
  0x000001c3987d5a4c: 4066 90e8 

  0x000001c3987d5a50: ; ImmutableOopMap {[32]=Oop }
                      ;*invokevirtual processWorkerExit {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.concurrent.ThreadPoolExecutor::runWorker@180 (line 1158)
  0x000001c3987d5a50: 2c90 91ff 

  0x000001c3987d5a54: ;   {other}
  0x000001c3987d5a54: 0f1f 8400 | c423 0058 | 488b 5424 | 2048 81c4 | a000 0000 

  0x000001c3987d5a68: ;   {runtime_call _rethrow_Java}
  0x000001c3987d5a68: 5de9 121f | 9eff 488b | 5c24 3844 | 8b13 4585 | d20f 84b7 | feff ff4d | 8b5f 2849 | 8bca 48c1 
  0x000001c3987d5a88: e103 4d85 | db0f 8431 | feff ff4d | 8b57 384b | 894c 1af8 | 4983 c3f8 | 4d89 5f28 | e98d feff 
  0x000001c3987d5aa8: ;   {runtime_call StubRoutines (final stubs)}
  0x000001c3987d5aa8: ffe8 b2f2 | 8fff e9bb | dfff fff4 | f4f4 f4f4 
[Stub Code]
  0x000001c3987d5ab8: ;   {no_reloc}
  0x000001c3987d5ab8: 48bb 0000 | 0000 0000 

  0x000001c3987d5ac0: ;   {runtime_call}
  0x000001c3987d5ac0: 0000 e9fb 

  0x000001c3987d5ac4: ;   {static_stub}
  0x000001c3987d5ac4: ffff ff48 | bb00 0000 | 0000 0000 

  0x000001c3987d5ad0: ;   {runtime_call}
  0x000001c3987d5ad0: 00e9 fbff 

  0x000001c3987d5ad4: ;   {static_stub}
  0x000001c3987d5ad4: ffff 48bb | 0000 0000 | 0000 0000 

  0x000001c3987d5ae0: ;   {runtime_call}
  0x000001c3987d5ae0: e9fb ffff 

  0x000001c3987d5ae4: ;   {static_stub}
  0x000001c3987d5ae4: ff48 bb00 | 0000 0000 

  0x000001c3987d5aec: ;   {runtime_call}
  0x000001c3987d5aec: 0000 00e9 | fbff ffff 

  0x000001c3987d5af4: ;   {static_stub}
  0x000001c3987d5af4: 48bb 0000 | 0000 0000 

  0x000001c3987d5afc: ;   {runtime_call}
  0x000001c3987d5afc: 0000 e9fb 

  0x000001c3987d5b00: ;   {static_stub}
  0x000001c3987d5b00: ffff ff48 | bb00 0000 | 0000 0000 

  0x000001c3987d5b0c: ;   {runtime_call}
  0x000001c3987d5b0c: 00e9 fbff 

  0x000001c3987d5b10: ;   {static_stub}
  0x000001c3987d5b10: ffff 48bb | 0000 0000 | 0000 0000 

  0x000001c3987d5b1c: ;   {runtime_call}
  0x000001c3987d5b1c: e9fb ffff 

  0x000001c3987d5b20: ;   {static_stub}
  0x000001c3987d5b20: ff48 bb18 | c629 a8c3 

  0x000001c3987d5b28: ;   {runtime_call I2C/C2I adapters}
  0x000001c3987d5b28: 0100 00e9 | 33d9 91ff 

  0x000001c3987d5b30: ;   {static_stub}
  0x000001c3987d5b30: 48bb 0000 | 0000 0000 

  0x000001c3987d5b38: ;   {runtime_call}
  0x000001c3987d5b38: 0000 e9fb 

  0x000001c3987d5b3c: ;   {static_stub}
  0x000001c3987d5b3c: ffff ff48 | bb00 0000 | 0000 0000 

  0x000001c3987d5b48: ;   {runtime_call}
  0x000001c3987d5b48: 00e9 fbff 

  0x000001c3987d5b4c: ;   {runtime_call ExceptionBlob}
  0x000001c3987d5b4c: ffff e92d | 049e ffe8 | 0000 0000 | 4883 2c24 

  0x000001c3987d5b5c: ;   {runtime_call DeoptimizationBlob}
  0x000001c3987d5b5c: 05e9 3eee | 91ff f4f4 | f4f4 f4f4 
[/MachCode]


---------------  P R O C E S S  ---------------

Threads class SMR info:
_java_thread_list=0x000001c3aceeaa70, length=16, elements={
0x000001c38ae90960, 0x000001c3a7c67420, 0x000001c3a7c67d50, 0x000001c3a7c6c580,
0x000001c3a7c69d10, 0x000001c3a7c6a770, 0x000001c3a7c6b1d0, 0x000001c3a7c47980,
0x000001c3a7c8cf30, 0x000001c3a7b53070, 0x000001c3ac2bca30, 0x000001c3ac871850,
0x000001c3acd35520, 0x000001c3acd3f570, 0x000001c3acf52320, 0x000001c3acfe6ce0
}

Java Threads: ( => current thread )
  0x000001c38ae90960 JavaThread "main"                              [_thread_blocked, id=18860, stack(0x0000003ab3c00000,0x0000003ab3d00000) (1024K)]
  0x000001c3a7c67420 JavaThread "Reference Handler"          daemon [_thread_blocked, id=21464, stack(0x0000003ab4400000,0x0000003ab4500000) (1024K)]
  0x000001c3a7c67d50 JavaThread "Finalizer"                  daemon [_thread_blocked, id=6520, stack(0x0000003ab4500000,0x0000003ab4600000) (1024K)]
  0x000001c3a7c6c580 JavaThread "Signal Dispatcher"          daemon [_thread_blocked, id=11040, stack(0x0000003ab4600000,0x0000003ab4700000) (1024K)]
  0x000001c3a7c69d10 JavaThread "Attach Listener"            daemon [_thread_blocked, id=22236, stack(0x0000003ab4700000,0x0000003ab4800000) (1024K)]
  0x000001c3a7c6a770 JavaThread "Service Thread"             daemon [_thread_blocked, id=22536, stack(0x0000003ab4800000,0x0000003ab4900000) (1024K)]
  0x000001c3a7c6b1d0 JavaThread "Monitor Deflation Thread"   daemon [_thread_blocked, id=19620, stack(0x0000003ab4900000,0x0000003ab4a00000) (1024K)]
  0x000001c3a7c47980 JavaThread "C2 CompilerThread0"         daemon [_thread_blocked, id=14216, stack(0x0000003ab4a00000,0x0000003ab4b00000) (1024K)]
  0x000001c3a7c8cf30 JavaThread "C1 CompilerThread0"         daemon [_thread_blocked, id=4116, stack(0x0000003ab4b00000,0x0000003ab4c00000) (1024K)]
  0x000001c3a7b53070 JavaThread "Common-Cleaner"             daemon [_thread_blocked, id=14352, stack(0x0000003ab4c00000,0x0000003ab4d00000) (1024K)]
  0x000001c3ac2bca30 JavaThread "Notification Thread"        daemon [_thread_blocked, id=4084, stack(0x0000003ab4f00000,0x0000003ab5000000) (1024K)]
=>0x000001c3ac871850 JavaThread "QuantumRenderer-0"          daemon [_thread_in_native, id=13372, stack(0x0000003ab5000000,0x0000003ab5100000) (1024K)]
  0x000001c3acd35520 JavaThread "InvokeLaterDispatcher"      daemon [_thread_blocked, id=11384, stack(0x0000003ab5300000,0x0000003ab5400000) (1024K)]
  0x000001c3acd3f570 JavaThread "JavaFX Application Thread"         [_thread_blocked, id=23212, stack(0x0000003ab5400000,0x0000003ab5500000) (1024K)]
  0x000001c3acf52320 JavaThread "JavaFX-Launcher"                   [_thread_blocked, id=4920, stack(0x0000003ab5600000,0x0000003ab5700000) (1024K)]
  0x000001c3acfe6ce0 JavaThread "Thread-2"                   daemon [_thread_in_native, id=22484, stack(0x0000003ab4e00000,0x0000003ab4f00000) (1024K)]
Total: 16

Other Threads:
  0x000001c3a7bd3b70 VMThread "VM Thread"                           [id=2296, stack(0x0000003ab4300000,0x0000003ab4400000) (1024K)]
  0x000001c3a7b51e70 WatcherThread "VM Periodic Task Thread"        [id=10916, stack(0x0000003ab4200000,0x0000003ab4300000) (1024K)]
  0x000001c38d0c19d0 WorkerThread "GC Thread#0"                     [id=18836, stack(0x0000003ab3d00000,0x0000003ab3e00000) (1024K)]
  0x000001c3acefa410 WorkerThread "GC Thread#1"                     [id=2812, stack(0x0000003ab5700000,0x0000003ab5800000) (1024K)]
  0x000001c3aceec150 WorkerThread "GC Thread#2"                     [id=21780, stack(0x0000003ab5800000,0x0000003ab5900000) (1024K)]
  0x000001c3acefa7b0 WorkerThread "GC Thread#3"                     [id=15440, stack(0x0000003ab5900000,0x0000003ab5a00000) (1024K)]
  0x000001c3acefab50 WorkerThread "GC Thread#4"                     [id=17456, stack(0x0000003ab5a00000,0x0000003ab5b00000) (1024K)]
  0x000001c3ad026610 WorkerThread "GC Thread#5"                     [id=11436, stack(0x0000003ab5b00000,0x0000003ab5c00000) (1024K)]
  0x000001c3ad167e70 WorkerThread "GC Thread#6"                     [id=15180, stack(0x0000003ab6000000,0x0000003ab6100000) (1024K)]
  0x000001c3ad168210 WorkerThread "GC Thread#7"                     [id=4068, stack(0x0000003ab6100000,0x0000003ab6200000) (1024K)]
  0x000001c3cf230b50 WorkerThread "GC Thread#8"                     [id=8080, stack(0x0000003ab3900000,0x0000003ab3a00000) (1024K)]
  0x000001c38d0d24c0 ConcurrentGCThread "G1 Main Marker"            [id=22164, stack(0x0000003ab3e00000,0x0000003ab3f00000) (1024K)]
  0x000001c38d0d3670 WorkerThread "G1 Conc#0"                       [id=1592, stack(0x0000003ab3f00000,0x0000003ab4000000) (1024K)]
  0x000001c38d12e090 ConcurrentGCThread "G1 Refine#0"               [id=22268, stack(0x0000003ab4000000,0x0000003ab4100000) (1024K)]
  0x000001c38d12ea10 ConcurrentGCThread "G1 Service"                [id=23144, stack(0x0000003ab4100000,0x0000003ab4200000) (1024K)]
Total: 15

Threads with active compile tasks:
Total: 0

VM state: not at safepoint (normal execution)

VM Mutex/Monitor currently owned by a thread: None

Heap address: 0x0000000705a00000, size: 4006 MB, Compressed Oops mode: Zero based, Oop shift amount: 3

CDS archive(s) not mapped
Compressed class space mapped at: 0x0000000800000000-0x0000000840000000, reserved size: 1073741824
Narrow klass base: 0x0000000800000000, Narrow klass shift: 0, Narrow klass range: 0x40000000

GC Precious Log:
 CardTable entry size: 512
 Card Set container configuration: InlinePtr #cards 4 size 8 Array Of Cards #cards 16 size 48 Howl #buckets 8 coarsen threshold 3686 Howl Bitmap #cards 512 size 80 coarsen threshold 460 Card regions per heap region 1 cards per card region 4096
 CPUs: 12 total, 12 available
 Memory: 16016M
 Large Page Support: Disabled
 NUMA Support: Disabled
 Compressed Oops: Enabled (Zero based)
 Heap Region Size: 2M
 Heap Min Capacity: 8M
 Heap Initial Capacity: 252M
 Heap Max Capacity: 4006M
 Pre-touch: Disabled
 Parallel Workers: 10
 Concurrent Workers: 3
 Concurrent Refinement Workers: 10
 Periodic GC: Disabled

Heap:
 garbage-first heap   total 258048K, used 127851K [0x0000000705a00000, 0x0000000800000000)
  region size 2048K, 59 young (120832K), 3 survivors (6144K)
 Metaspace       used 18319K, committed 18560K, reserved 1114112K
  class space    used 1963K, committed 2112K, reserved 1048576K

Heap Regions: E=young(eden), S=young(survivor), O=old, HS=humongous(starts), HC=humongous(continues), CS=collection set, F=free, TAMS=top-at-mark-start, PB=parsable bottom
|   0|0x0000000705a00000, 0x0000000705c00000, 0x0000000705c00000|100%| O|  |TAMS 0x0000000705a00000| PB 0x0000000705a00000| Untracked 
|   1|0x0000000705c00000, 0x0000000705e00000, 0x0000000705e00000|100%| O|  |TAMS 0x0000000705c00000| PB 0x0000000705c00000| Untracked 
|   2|0x0000000705e00000, 0x0000000706000000, 0x0000000706000000|100%| O|  |TAMS 0x0000000705e00000| PB 0x0000000705e00000| Untracked 
|   3|0x0000000706000000, 0x0000000706200000, 0x0000000706200000|100%| O|  |TAMS 0x0000000706000000| PB 0x0000000706000000| Untracked 
|   4|0x0000000706200000, 0x00000007063f0420, 0x0000000706400000| 96%| O|  |TAMS 0x0000000706200000| PB 0x0000000706200000| Untracked 
|   5|0x0000000706400000, 0x0000000706400000, 0x0000000706600000|  0%| F|  |TAMS 0x0000000706400000| PB 0x0000000706400000| Untracked 
|   6|0x0000000706600000, 0x0000000706600000, 0x0000000706800000|  0%| F|  |TAMS 0x0000000706600000| PB 0x0000000706600000| Untracked 
|   7|0x0000000706800000, 0x0000000706800000, 0x0000000706a00000|  0%| F|  |TAMS 0x0000000706800000| PB 0x0000000706800000| Untracked 
|   8|0x0000000706a00000, 0x0000000706a00000, 0x0000000706c00000|  0%| F|  |TAMS 0x0000000706a00000| PB 0x0000000706a00000| Untracked 
|   9|0x0000000706c00000, 0x0000000706c00000, 0x0000000706e00000|  0%| F|  |TAMS 0x0000000706c00000| PB 0x0000000706c00000| Untracked 
|  10|0x0000000706e00000, 0x0000000706e00000, 0x0000000707000000|  0%| F|  |TAMS 0x0000000706e00000| PB 0x0000000706e00000| Untracked 
|  11|0x0000000707000000, 0x0000000707000000, 0x0000000707200000|  0%| F|  |TAMS 0x0000000707000000| PB 0x0000000707000000| Untracked 
|  12|0x0000000707200000, 0x0000000707200000, 0x0000000707400000|  0%| F|  |TAMS 0x0000000707200000| PB 0x0000000707200000| Untracked 
|  13|0x0000000707400000, 0x0000000707400000, 0x0000000707600000|  0%| F|  |TAMS 0x0000000707400000| PB 0x0000000707400000| Untracked 
|  14|0x0000000707600000, 0x0000000707600000, 0x0000000707800000|  0%| F|  |TAMS 0x0000000707600000| PB 0x0000000707600000| Untracked 
|  15|0x0000000707800000, 0x0000000707800000, 0x0000000707a00000|  0%| F|  |TAMS 0x0000000707800000| PB 0x0000000707800000| Untracked 
|  16|0x0000000707a00000, 0x0000000707a00000, 0x0000000707c00000|  0%| F|  |TAMS 0x0000000707a00000| PB 0x0000000707a00000| Untracked 
|  17|0x0000000707c00000, 0x0000000707c00000, 0x0000000707e00000|  0%| F|  |TAMS 0x0000000707c00000| PB 0x0000000707c00000| Untracked 
|  18|0x0000000707e00000, 0x0000000707e00000, 0x0000000708000000|  0%| F|  |TAMS 0x0000000707e00000| PB 0x0000000707e00000| Untracked 
|  19|0x0000000708000000, 0x0000000708000000, 0x0000000708200000|  0%| F|  |TAMS 0x0000000708000000| PB 0x0000000708000000| Untracked 
|  20|0x0000000708200000, 0x0000000708200000, 0x0000000708400000|  0%| F|  |TAMS 0x0000000708200000| PB 0x0000000708200000| Untracked 
|  21|0x0000000708400000, 0x0000000708400000, 0x0000000708600000|  0%| F|  |TAMS 0x0000000708400000| PB 0x0000000708400000| Untracked 
|  22|0x0000000708600000, 0x0000000708600000, 0x0000000708800000|  0%| F|  |TAMS 0x0000000708600000| PB 0x0000000708600000| Untracked 
|  23|0x0000000708800000, 0x0000000708800000, 0x0000000708a00000|  0%| F|  |TAMS 0x0000000708800000| PB 0x0000000708800000| Untracked 
|  24|0x0000000708a00000, 0x0000000708a00000, 0x0000000708c00000|  0%| F|  |TAMS 0x0000000708a00000| PB 0x0000000708a00000| Untracked 
|  25|0x0000000708c00000, 0x0000000708c00000, 0x0000000708e00000|  0%| F|  |TAMS 0x0000000708c00000| PB 0x0000000708c00000| Untracked 
|  26|0x0000000708e00000, 0x0000000708e00000, 0x0000000709000000|  0%| F|  |TAMS 0x0000000708e00000| PB 0x0000000708e00000| Untracked 
|  27|0x0000000709000000, 0x0000000709000000, 0x0000000709200000|  0%| F|  |TAMS 0x0000000709000000| PB 0x0000000709000000| Untracked 
|  28|0x0000000709200000, 0x0000000709200000, 0x0000000709400000|  0%| F|  |TAMS 0x0000000709200000| PB 0x0000000709200000| Untracked 
|  29|0x0000000709400000, 0x0000000709400000, 0x0000000709600000|  0%| F|  |TAMS 0x0000000709400000| PB 0x0000000709400000| Untracked 
|  30|0x0000000709600000, 0x0000000709600000, 0x0000000709800000|  0%| F|  |TAMS 0x0000000709600000| PB 0x0000000709600000| Untracked 
|  31|0x0000000709800000, 0x0000000709800000, 0x0000000709a00000|  0%| F|  |TAMS 0x0000000709800000| PB 0x0000000709800000| Untracked 
|  32|0x0000000709a00000, 0x0000000709a00000, 0x0000000709c00000|  0%| F|  |TAMS 0x0000000709a00000| PB 0x0000000709a00000| Untracked 
|  33|0x0000000709c00000, 0x0000000709c00000, 0x0000000709e00000|  0%| F|  |TAMS 0x0000000709c00000| PB 0x0000000709c00000| Untracked 
|  34|0x0000000709e00000, 0x0000000709e00000, 0x000000070a000000|  0%| F|  |TAMS 0x0000000709e00000| PB 0x0000000709e00000| Untracked 
|  35|0x000000070a000000, 0x000000070a000000, 0x000000070a200000|  0%| F|  |TAMS 0x000000070a000000| PB 0x000000070a000000| Untracked 
|  36|0x000000070a200000, 0x000000070a200000, 0x000000070a400000|  0%| F|  |TAMS 0x000000070a200000| PB 0x000000070a200000| Untracked 
|  37|0x000000070a400000, 0x000000070a400000, 0x000000070a600000|  0%| F|  |TAMS 0x000000070a400000| PB 0x000000070a400000| Untracked 
|  38|0x000000070a600000, 0x000000070a600000, 0x000000070a800000|  0%| F|  |TAMS 0x000000070a600000| PB 0x000000070a600000| Untracked 
|  39|0x000000070a800000, 0x000000070a800000, 0x000000070aa00000|  0%| F|  |TAMS 0x000000070a800000| PB 0x000000070a800000| Untracked 
|  40|0x000000070aa00000, 0x000000070aa00000, 0x000000070ac00000|  0%| F|  |TAMS 0x000000070aa00000| PB 0x000000070aa00000| Untracked 
|  41|0x000000070ac00000, 0x000000070ac00000, 0x000000070ae00000|  0%| F|  |TAMS 0x000000070ac00000| PB 0x000000070ac00000| Untracked 
|  42|0x000000070ae00000, 0x000000070ae00000, 0x000000070b000000|  0%| F|  |TAMS 0x000000070ae00000| PB 0x000000070ae00000| Untracked 
|  43|0x000000070b000000, 0x000000070b000000, 0x000000070b200000|  0%| F|  |TAMS 0x000000070b000000| PB 0x000000070b000000| Untracked 
|  44|0x000000070b200000, 0x000000070b200000, 0x000000070b400000|  0%| F|  |TAMS 0x000000070b200000| PB 0x000000070b200000| Untracked 
|  45|0x000000070b400000, 0x000000070b400000, 0x000000070b600000|  0%| F|  |TAMS 0x000000070b400000| PB 0x000000070b400000| Untracked 
|  46|0x000000070b600000, 0x000000070b600000, 0x000000070b800000|  0%| F|  |TAMS 0x000000070b600000| PB 0x000000070b600000| Untracked 
|  47|0x000000070b800000, 0x000000070b800000, 0x000000070ba00000|  0%| F|  |TAMS 0x000000070b800000| PB 0x000000070b800000| Untracked 
|  48|0x000000070ba00000, 0x000000070baeabb8, 0x000000070bc00000| 45%| S|CS|TAMS 0x000000070ba00000| PB 0x000000070ba00000| Complete 
|  49|0x000000070bc00000, 0x000000070be00000, 0x000000070be00000|100%| S|CS|TAMS 0x000000070bc00000| PB 0x000000070bc00000| Complete 
|  50|0x000000070be00000, 0x000000070c000000, 0x000000070c000000|100%| S|CS|TAMS 0x000000070be00000| PB 0x000000070be00000| Complete 
|  51|0x000000070c000000, 0x000000070c000000, 0x000000070c200000|  0%| F|  |TAMS 0x000000070c000000| PB 0x000000070c000000| Untracked 
|  52|0x000000070c200000, 0x000000070c200000, 0x000000070c400000|  0%| F|  |TAMS 0x000000070c200000| PB 0x000000070c200000| Untracked 
|  53|0x000000070c400000, 0x000000070c400000, 0x000000070c600000|  0%| F|  |TAMS 0x000000070c400000| PB 0x000000070c400000| Untracked 
|  54|0x000000070c600000, 0x000000070c600000, 0x000000070c800000|  0%| F|  |TAMS 0x000000070c600000| PB 0x000000070c600000| Untracked 
|  55|0x000000070c800000, 0x000000070c800000, 0x000000070ca00000|  0%| F|  |TAMS 0x000000070c800000| PB 0x000000070c800000| Untracked 
|  56|0x000000070ca00000, 0x000000070ca00000, 0x000000070cc00000|  0%| F|  |TAMS 0x000000070ca00000| PB 0x000000070ca00000| Untracked 
|  57|0x000000070cc00000, 0x000000070cc00000, 0x000000070ce00000|  0%| F|  |TAMS 0x000000070cc00000| PB 0x000000070cc00000| Untracked 
|  58|0x000000070ce00000, 0x000000070ce00000, 0x000000070d000000|  0%| F|  |TAMS 0x000000070ce00000| PB 0x000000070ce00000| Untracked 
|  59|0x000000070d000000, 0x000000070d000000, 0x000000070d200000|  0%| F|  |TAMS 0x000000070d000000| PB 0x000000070d000000| Untracked 
|  60|0x000000070d200000, 0x000000070d200000, 0x000000070d400000|  0%| F|  |TAMS 0x000000070d200000| PB 0x000000070d200000| Untracked 
|  61|0x000000070d400000, 0x000000070d400000, 0x000000070d600000|  0%| F|  |TAMS 0x000000070d400000| PB 0x000000070d400000| Untracked 
|  62|0x000000070d600000, 0x000000070d600000, 0x000000070d800000|  0%| F|  |TAMS 0x000000070d600000| PB 0x000000070d600000| Untracked 
|  63|0x000000070d800000, 0x000000070d800000, 0x000000070da00000|  0%| F|  |TAMS 0x000000070d800000| PB 0x000000070d800000| Untracked 
|  64|0x000000070da00000, 0x000000070da00000, 0x000000070dc00000|  0%| F|  |TAMS 0x000000070da00000| PB 0x000000070da00000| Untracked 
|  65|0x000000070dc00000, 0x000000070dc00000, 0x000000070de00000|  0%| F|  |TAMS 0x000000070dc00000| PB 0x000000070dc00000| Untracked 
|  66|0x000000070de00000, 0x000000070de00000, 0x000000070e000000|  0%| F|  |TAMS 0x000000070de00000| PB 0x000000070de00000| Untracked 
|  67|0x000000070e000000, 0x000000070e000000, 0x000000070e200000|  0%| F|  |TAMS 0x000000070e000000| PB 0x000000070e000000| Untracked 
|  68|0x000000070e200000, 0x000000070e200000, 0x000000070e400000|  0%| F|  |TAMS 0x000000070e200000| PB 0x000000070e200000| Untracked 
|  69|0x000000070e400000, 0x000000070e400000, 0x000000070e600000|  0%| F|  |TAMS 0x000000070e400000| PB 0x000000070e400000| Untracked 
|  70|0x000000070e600000, 0x000000070e700800, 0x000000070e800000| 50%| E|  |TAMS 0x000000070e600000| PB 0x000000070e600000| Complete 
|  71|0x000000070e800000, 0x000000070ea00000, 0x000000070ea00000|100%| E|CS|TAMS 0x000000070e800000| PB 0x000000070e800000| Complete 
|  72|0x000000070ea00000, 0x000000070ec00000, 0x000000070ec00000|100%| E|CS|TAMS 0x000000070ea00000| PB 0x000000070ea00000| Complete 
|  73|0x000000070ec00000, 0x000000070ee00000, 0x000000070ee00000|100%| E|CS|TAMS 0x000000070ec00000| PB 0x000000070ec00000| Complete 
|  74|0x000000070ee00000, 0x000000070f000000, 0x000000070f000000|100%| E|CS|TAMS 0x000000070ee00000| PB 0x000000070ee00000| Complete 
|  75|0x000000070f000000, 0x000000070f200000, 0x000000070f200000|100%| E|CS|TAMS 0x000000070f000000| PB 0x000000070f000000| Complete 
|  76|0x000000070f200000, 0x000000070f400000, 0x000000070f400000|100%| E|CS|TAMS 0x000000070f200000| PB 0x000000070f200000| Complete 
|  77|0x000000070f400000, 0x000000070f600000, 0x000000070f600000|100%| E|CS|TAMS 0x000000070f400000| PB 0x000000070f400000| Complete 
|  78|0x000000070f600000, 0x000000070f800000, 0x000000070f800000|100%| E|CS|TAMS 0x000000070f600000| PB 0x000000070f600000| Complete 
|  79|0x000000070f800000, 0x000000070fa00000, 0x000000070fa00000|100%| E|CS|TAMS 0x000000070f800000| PB 0x000000070f800000| Complete 
|  80|0x000000070fa00000, 0x000000070fc00000, 0x000000070fc00000|100%| E|CS|TAMS 0x000000070fa00000| PB 0x000000070fa00000| Complete 
|  81|0x000000070fc00000, 0x000000070fe00000, 0x000000070fe00000|100%| E|CS|TAMS 0x000000070fc00000| PB 0x000000070fc00000| Complete 
|  82|0x000000070fe00000, 0x0000000710000000, 0x0000000710000000|100%| E|CS|TAMS 0x000000070fe00000| PB 0x000000070fe00000| Complete 
|  83|0x0000000710000000, 0x0000000710200000, 0x0000000710200000|100%| E|CS|TAMS 0x0000000710000000| PB 0x0000000710000000| Complete 
|  84|0x0000000710200000, 0x0000000710400000, 0x0000000710400000|100%| E|CS|TAMS 0x0000000710200000| PB 0x0000000710200000| Complete 
|  85|0x0000000710400000, 0x0000000710600000, 0x0000000710600000|100%| E|CS|TAMS 0x0000000710400000| PB 0x0000000710400000| Complete 
|  86|0x0000000710600000, 0x0000000710800000, 0x0000000710800000|100%| E|CS|TAMS 0x0000000710600000| PB 0x0000000710600000| Complete 
|  87|0x0000000710800000, 0x0000000710a00000, 0x0000000710a00000|100%| E|CS|TAMS 0x0000000710800000| PB 0x0000000710800000| Complete 
|  88|0x0000000710a00000, 0x0000000710c00000, 0x0000000710c00000|100%| E|CS|TAMS 0x0000000710a00000| PB 0x0000000710a00000| Complete 
|  89|0x0000000710c00000, 0x0000000710e00000, 0x0000000710e00000|100%| E|CS|TAMS 0x0000000710c00000| PB 0x0000000710c00000| Complete 
|  90|0x0000000710e00000, 0x0000000711000000, 0x0000000711000000|100%| E|CS|TAMS 0x0000000710e00000| PB 0x0000000710e00000| Complete 
|  91|0x0000000711000000, 0x0000000711200000, 0x0000000711200000|100%| E|CS|TAMS 0x0000000711000000| PB 0x0000000711000000| Complete 
|  92|0x0000000711200000, 0x0000000711400000, 0x0000000711400000|100%| E|CS|TAMS 0x0000000711200000| PB 0x0000000711200000| Complete 
|  93|0x0000000711400000, 0x0000000711600000, 0x0000000711600000|100%| E|CS|TAMS 0x0000000711400000| PB 0x0000000711400000| Complete 
|  94|0x0000000711600000, 0x0000000711800000, 0x0000000711800000|100%| E|CS|TAMS 0x0000000711600000| PB 0x0000000711600000| Complete 
|  95|0x0000000711800000, 0x0000000711a00000, 0x0000000711a00000|100%| E|CS|TAMS 0x0000000711800000| PB 0x0000000711800000| Complete 
|  96|0x0000000711a00000, 0x0000000711c00000, 0x0000000711c00000|100%| E|CS|TAMS 0x0000000711a00000| PB 0x0000000711a00000| Complete 
|  97|0x0000000711c00000, 0x0000000711e00000, 0x0000000711e00000|100%| E|CS|TAMS 0x0000000711c00000| PB 0x0000000711c00000| Complete 
|  98|0x0000000711e00000, 0x0000000712000000, 0x0000000712000000|100%| E|CS|TAMS 0x0000000711e00000| PB 0x0000000711e00000| Complete 
|  99|0x0000000712000000, 0x0000000712200000, 0x0000000712200000|100%| E|CS|TAMS 0x0000000712000000| PB 0x0000000712000000| Complete 
| 100|0x0000000712200000, 0x0000000712400000, 0x0000000712400000|100%| E|CS|TAMS 0x0000000712200000| PB 0x0000000712200000| Complete 
| 101|0x0000000712400000, 0x0000000712600000, 0x0000000712600000|100%| E|CS|TAMS 0x0000000712400000| PB 0x0000000712400000| Complete 
| 102|0x0000000712600000, 0x0000000712800000, 0x0000000712800000|100%| E|CS|TAMS 0x0000000712600000| PB 0x0000000712600000| Complete 
| 103|0x0000000712800000, 0x0000000712a00000, 0x0000000712a00000|100%| E|CS|TAMS 0x0000000712800000| PB 0x0000000712800000| Complete 
| 104|0x0000000712a00000, 0x0000000712c00000, 0x0000000712c00000|100%| E|CS|TAMS 0x0000000712a00000| PB 0x0000000712a00000| Complete 
| 105|0x0000000712c00000, 0x0000000712e00000, 0x0000000712e00000|100%| E|CS|TAMS 0x0000000712c00000| PB 0x0000000712c00000| Complete 
| 106|0x0000000712e00000, 0x0000000713000000, 0x0000000713000000|100%| E|CS|TAMS 0x0000000712e00000| PB 0x0000000712e00000| Complete 
| 107|0x0000000713000000, 0x0000000713200000, 0x0000000713200000|100%| E|CS|TAMS 0x0000000713000000| PB 0x0000000713000000| Complete 
| 108|0x0000000713200000, 0x0000000713400000, 0x0000000713400000|100%| E|CS|TAMS 0x0000000713200000| PB 0x0000000713200000| Complete 
| 109|0x0000000713400000, 0x0000000713600000, 0x0000000713600000|100%| E|CS|TAMS 0x0000000713400000| PB 0x0000000713400000| Complete 
| 110|0x0000000713600000, 0x0000000713800000, 0x0000000713800000|100%| E|CS|TAMS 0x0000000713600000| PB 0x0000000713600000| Complete 
| 111|0x0000000713800000, 0x0000000713a00000, 0x0000000713a00000|100%| E|CS|TAMS 0x0000000713800000| PB 0x0000000713800000| Complete 
| 112|0x0000000713a00000, 0x0000000713c00000, 0x0000000713c00000|100%| E|CS|TAMS 0x0000000713a00000| PB 0x0000000713a00000| Complete 
| 113|0x0000000713c00000, 0x0000000713e00000, 0x0000000713e00000|100%| E|CS|TAMS 0x0000000713c00000| PB 0x0000000713c00000| Complete 
| 114|0x0000000713e00000, 0x0000000714000000, 0x0000000714000000|100%| E|CS|TAMS 0x0000000713e00000| PB 0x0000000713e00000| Complete 
| 115|0x0000000714000000, 0x0000000714200000, 0x0000000714200000|100%| E|CS|TAMS 0x0000000714000000| PB 0x0000000714000000| Complete 
| 116|0x0000000714200000, 0x0000000714400000, 0x0000000714400000|100%| E|CS|TAMS 0x0000000714200000| PB 0x0000000714200000| Complete 
| 117|0x0000000714400000, 0x0000000714600000, 0x0000000714600000|100%| E|CS|TAMS 0x0000000714400000| PB 0x0000000714400000| Complete 
| 118|0x0000000714600000, 0x0000000714800000, 0x0000000714800000|100%| E|CS|TAMS 0x0000000714600000| PB 0x0000000714600000| Complete 
| 119|0x0000000714800000, 0x0000000714a00000, 0x0000000714a00000|100%| E|CS|TAMS 0x0000000714800000| PB 0x0000000714800000| Complete 
| 120|0x0000000714a00000, 0x0000000714c00000, 0x0000000714c00000|100%| E|CS|TAMS 0x0000000714a00000| PB 0x0000000714a00000| Complete 
| 121|0x0000000714c00000, 0x0000000714e00000, 0x0000000714e00000|100%| E|CS|TAMS 0x0000000714c00000| PB 0x0000000714c00000| Complete 
| 122|0x0000000714e00000, 0x0000000715000000, 0x0000000715000000|100%| E|CS|TAMS 0x0000000714e00000| PB 0x0000000714e00000| Complete 
| 123|0x0000000715000000, 0x0000000715200000, 0x0000000715200000|100%| E|CS|TAMS 0x0000000715000000| PB 0x0000000715000000| Complete 
| 124|0x0000000715200000, 0x0000000715400000, 0x0000000715400000|100%| E|CS|TAMS 0x0000000715200000| PB 0x0000000715200000| Complete 
| 125|0x0000000715400000, 0x0000000715600000, 0x0000000715600000|100%| E|CS|TAMS 0x0000000715400000| PB 0x0000000715400000| Complete 

Card table byte_map: [0x000001c3a08a0000,0x000001c3a1080000] _byte_map_base: 0x000001c39d073000

Marking Bits: (CMBitMap*) 0x000001c38d0c1fe0
 Bits: [0x000001c3a1080000, 0x000001c3a4f18000)

Polling page: 0x000001c38b000000

Metaspace:

Usage:
  Non-class:     15.97 MB used.
      Class:      1.92 MB used.
       Both:     17.89 MB used.

Virtual space:
  Non-class space:       64.00 MB reserved,      16.06 MB ( 25%) committed,  1 nodes.
      Class space:        1.00 GB reserved,       2.06 MB ( <1%) committed,  1 nodes.
             Both:        1.06 GB reserved,      18.12 MB (  2%) committed. 

Chunk freelists:
   Non-Class:  15.12 MB
       Class:  13.86 MB
        Both:  28.98 MB

MaxMetaspaceSize: unlimited
CompressedClassSpaceSize: 1.00 GB
Initial GC threshold: 21.00 MB
Current GC threshold: 21.00 MB
CDS: off
 - commit_granule_bytes: 65536.
 - commit_granule_words: 8192.
 - virtual_space_node_default_size: 8388608.
 - enlarge_chunks_in_place: 1.
 - use_allocation_guard: 0.


Internal statistics:

num_allocs_failed_limit: 0.
num_arena_births: 160.
num_arena_deaths: 0.
num_vsnodes_births: 2.
num_vsnodes_deaths: 0.
num_space_committed: 290.
num_space_uncommitted: 0.
num_chunks_returned_to_freelist: 0.
num_chunks_taken_from_freelist: 512.
num_chunk_merges: 0.
num_chunk_splits: 347.
num_chunks_enlarged: 269.
num_inconsistent_stats: 0.

CodeHeap 'non-profiled nmethods': size=120000Kb used=1646Kb max_used=1646Kb free=118354Kb
 bounds [0x000001c398640000, 0x000001c3988b0000, 0x000001c39fb70000]
CodeHeap 'profiled nmethods': size=120000Kb used=5060Kb max_used=5060Kb free=114939Kb
 bounds [0x000001c390b70000, 0x000001c391070000, 0x000001c3980a0000]
CodeHeap 'non-nmethods': size=5760Kb used=1715Kb max_used=1750Kb free=4044Kb
 bounds [0x000001c3980a0000, 0x000001c398310000, 0x000001c398640000]
 total_blobs=3443 nmethods=2700 adapters=646
 compilation: enabled
              stopped_count=0, restarted_count=0
 full_count=0

Compilation events (20 events):
Event: 72.994 Thread 0x000001c3a7c47980 2691   !   4       java.util.concurrent.locks.AbstractQueuedSynchronizer::acquire (424 bytes)
Event: 73.032 Thread 0x000001c3a7c47980 nmethod 2691 0x000001c3987d1410 code [0x000001c3987d1680, 0x000001c3987d2f28]
Event: 75.810 Thread 0x000001c3a7c47980 2692 % !   4       java.util.concurrent.ThreadPoolExecutor::runWorker @ 21 (187 bytes)
Event: 75.881 Thread 0x000001c3a7c47980 nmethod 2692% 0x000001c3987d3690 code [0x000001c3987d3a40, 0x000001c3987d5b68]
Event: 86.356 Thread 0x000001c3a7c47980 2693       4       com.sun.javafx.tk.quantum.QuantumToolkit$$Lambda/0x00000008000fac38::run (8 bytes)
Event: 86.360 Thread 0x000001c3a7c47980 nmethod 2693 0x000001c3987d7110 code [0x000001c3987d72c0, 0x000001c3987d73d0]
Event: 92.580 Thread 0x000001c3a7c47980 2694       4       java.util.concurrent.locks.LockSupport::setBlocker (12 bytes)
Event: 92.581 Thread 0x000001c3a7c47980 nmethod 2694 0x000001c3987d7510 code [0x000001c3987d76a0, 0x000001c3987d77e0]
Event: 105.885 Thread 0x000001c3a7c47980 2695       4       java.util.concurrent.ForkJoinPool::managedBlock (36 bytes)
Event: 105.898 Thread 0x000001c3a7c47980 nmethod 2695 0x000001c3987d7890 code [0x000001c3987d7a40, 0x000001c3987d7c48]
Event: 106.835 Thread 0x000001c3a7c8cf30 2696   !   3       java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::await (185 bytes)
Event: 106.838 Thread 0x000001c3a7c8cf30 nmethod 2696 0x000001c39105f110 code [0x000001c39105f4a0, 0x000001c391060a58]
Event: 113.101 Thread 0x000001c3a7c47980 2697   !   4       java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::await (185 bytes)
Event: 113.129 Thread 0x000001c3a7c47980 nmethod 2697 0x000001c3987d7e10 code [0x000001c3987d80e0, 0x000001c3987d90b8]
Event: 142.180 Thread 0x000001c3a7c47980 2698   !   4       java.util.concurrent.locks.LockSupport::park (47 bytes)
Event: 142.182 Thread 0x000001c3a7c47980 nmethod 2698 0x000001c3987d9b10 code [0x000001c3987d9cc0, 0x000001c3987d9f30]
Event: 143.077 Thread 0x000001c3a7c47980 2699       4       java.util.concurrent.locks.AbstractQueuedSynchronizer::signalNextIfShared (41 bytes)
Event: 143.077 Thread 0x000001c3a7c47980 nmethod 2699 0x000001c3987da010 code [0x000001c3987da1a0, 0x000001c3987da240]
Event: 185.838 Thread 0x000001c3a7c47980 2700  s    4       com.sun.javafx.sg.prism.GrowableDataBuffer::returnBuffer (149 bytes)
Event: 185.860 Thread 0x000001c3a7c47980 nmethod 2700 0x000001c3987da310 code [0x000001c3987da520, 0x000001c3987db300]

GC Heap History (12 events):
Event: 0.359 GC heap before
{Heap before GC invocations=0 (full 0):
 garbage-first heap   total 258048K, used 20480K [0x0000000705a00000, 0x0000000800000000)
  region size 2048K, 11 young (22528K), 0 survivors (0K)
 Metaspace       used 11587K, committed 11776K, reserved 1114112K
  class space    used 1124K, committed 1216K, reserved 1048576K
}
Event: 0.361 GC heap after
{Heap after GC invocations=1 (full 0):
 garbage-first heap   total 258048K, used 2474K [0x0000000705a00000, 0x0000000800000000)
  region size 2048K, 2 young (4096K), 2 survivors (4096K)
 Metaspace       used 11587K, committed 11776K, reserved 1114112K
  class space    used 1124K, committed 1216K, reserved 1048576K
}
Event: 0.690 GC heap before
{Heap before GC invocations=1 (full 0):
 garbage-first heap   total 258048K, used 41386K [0x0000000705a00000, 0x0000000800000000)
  region size 2048K, 22 young (45056K), 2 survivors (4096K)
 Metaspace       used 17077K, committed 17344K, reserved 1114112K
  class space    used 1901K, committed 2048K, reserved 1048576K
}
Event: 0.698 GC heap after
{Heap after GC invocations=2 (full 0):
 garbage-first heap   total 258048K, used 14558K [0x0000000705a00000, 0x0000000800000000)
  region size 2048K, 3 young (6144K), 3 survivors (6144K)
 Metaspace       used 17077K, committed 17344K, reserved 1114112K
  class space    used 1901K, committed 2048K, reserved 1048576K
}
Event: 61.554 GC heap before
{Heap before GC invocations=2 (full 0):
 garbage-first heap   total 258048K, used 88286K [0x0000000705a00000, 0x0000000800000000)
  region size 2048K, 39 young (79872K), 3 survivors (6144K)
 Metaspace       used 18316K, committed 18560K, reserved 1114112K
  class space    used 1963K, committed 2112K, reserved 1048576K
}
Event: 61.558 GC heap after
{Heap after GC invocations=3 (full 0):
 garbage-first heap   total 258048K, used 14889K [0x0000000705a00000, 0x0000000800000000)
  region size 2048K, 3 young (6144K), 3 survivors (6144K)
 Metaspace       used 18316K, committed 18560K, reserved 1114112K
  class space    used 1963K, committed 2112K, reserved 1048576K
}
Event: 118.746 GC heap before
{Heap before GC invocations=3 (full 0):
 garbage-first heap   total 258048K, used 162345K [0x0000000705a00000, 0x0000000800000000)
  region size 2048K, 75 young (153600K), 3 survivors (6144K)
 Metaspace       used 18319K, committed 18560K, reserved 1114112K
  class space    used 1963K, committed 2112K, reserved 1048576K
}
Event: 118.769 GC heap after
{Heap after GC invocations=4 (full 0):
 garbage-first heap   total 258048K, used 15285K [0x0000000705a00000, 0x0000000800000000)
  region size 2048K, 3 young (6144K), 3 survivors (6144K)
 Metaspace       used 18319K, committed 18560K, reserved 1114112K
  class space    used 1963K, committed 2112K, reserved 1048576K
}
Event: 185.790 GC heap before
{Heap before GC invocations=4 (full 0):
 garbage-first heap   total 258048K, used 162741K [0x0000000705a00000, 0x0000000800000000)
  region size 2048K, 75 young (153600K), 3 survivors (6144K)
 Metaspace       used 18319K, committed 18560K, reserved 1114112K
  class space    used 1963K, committed 2112K, reserved 1048576K
}
Event: 185.793 GC heap after
{Heap after GC invocations=5 (full 0):
 garbage-first heap   total 258048K, used 15201K [0x0000000705a00000, 0x0000000800000000)
  region size 2048K, 3 young (6144K), 3 survivors (6144K)
 Metaspace       used 18319K, committed 18560K, reserved 1114112K
  class space    used 1963K, committed 2112K, reserved 1048576K
}
Event: 245.948 GC heap before
{Heap before GC invocations=5 (full 0):
 garbage-first heap   total 258048K, used 162657K [0x0000000705a00000, 0x0000000800000000)
  region size 2048K, 75 young (153600K), 3 survivors (6144K)
 Metaspace       used 18319K, committed 18560K, reserved 1114112K
  class space    used 1963K, committed 2112K, reserved 1048576K
}
Event: 245.951 GC heap after
{Heap after GC invocations=6 (full 0):
 garbage-first heap   total 258048K, used 15211K [0x0000000705a00000, 0x0000000800000000)
  region size 2048K, 3 young (6144K), 3 survivors (6144K)
 Metaspace       used 18319K, committed 18560K, reserved 1114112K
  class space    used 1963K, committed 2112K, reserved 1048576K
}

Dll operation events (20 events):
Event: 0.198 Loaded shared library H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\api-ms-win-crt-locale-l1-1-0.dll
Event: 0.199 Loaded shared library H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\api-ms-win-crt-math-l1-1-0.dll
Event: 0.199 Loaded shared library H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\api-ms-win-crt-multibyte-l1-1-0.dll
Event: 0.199 Loaded shared library H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\api-ms-win-crt-private-l1-1-0.dll
Event: 0.200 Loaded shared library H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\api-ms-win-crt-process-l1-1-0.dll
Event: 0.200 Loaded shared library H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\api-ms-win-crt-runtime-l1-1-0.dll
Event: 0.201 Loaded shared library H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\api-ms-win-crt-stdio-l1-1-0.dll
Event: 0.201 Loaded shared library H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\api-ms-win-crt-string-l1-1-0.dll
Event: 0.201 Loaded shared library H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\api-ms-win-crt-time-l1-1-0.dll
Event: 0.202 Loaded shared library H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\api-ms-win-crt-utility-l1-1-0.dll
Event: 0.202 Loaded shared library H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\ucrtbase.dll
Event: 0.203 Loaded shared library H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\vcruntime140.dll
Event: 0.203 Loaded shared library H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\vcruntime140_1.dll
Event: 0.204 Loaded shared library H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\msvcp140.dll
Event: 0.204 Loaded shared library H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\msvcp140_1.dll
Event: 0.204 Loaded shared library H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\msvcp140_2.dll
Event: 0.223 Loaded shared library H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\prism_d3d.dll
Event: 0.280 Loaded shared library H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\glass.dll
Event: 0.406 Loaded shared library C:\Users\CYTech Student\.p2\pool\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_21.0.3.v20240426-1530\jre\bin\jimage.dll
Event: 0.416 Loaded shared library H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\javafx_font.dll

Deoptimization events (20 events):
Event: 72.245 Thread 0x000001c3acd3f570 DEOPT PACKING pc=0x000001c398760fa4 sp=0x0000003ab54fe820
Event: 72.246 Thread 0x000001c3acd3f570 DEOPT UNPACKING pc=0x000001c3980f46a2 sp=0x0000003ab54fe740 mode 2
Event: 78.409 Thread 0x000001c3ac871850 DEOPT PACKING pc=0x000001c391059f97 sp=0x0000003ab50fef80
Event: 78.410 Thread 0x000001c3ac871850 DEOPT UNPACKING pc=0x000001c3980f4e42 sp=0x0000003ab50fe4f8 mode 0
Event: 105.862 Thread 0x000001c3ac871850 Uncommon trap: trap_request=0xffffff45 fr.pc=0x000001c3987830d8 relative=0x0000000000000c98
Event: 105.863 Thread 0x000001c3ac871850 Uncommon trap: reason=unstable_if action=reinterpret pc=0x000001c3987830d8 method=java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.canReacquire(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionNode;)Z @ 18 c2
Event: 105.864 Thread 0x000001c3ac871850 DEOPT PACKING pc=0x000001c3987830d8 sp=0x0000003ab50fef90
Event: 105.864 Thread 0x000001c3ac871850 DEOPT UNPACKING pc=0x000001c3980f46a2 sp=0x0000003ab50feed0 mode 2
Event: 185.794 Thread 0x000001c3ac871850 Uncommon trap: trap_request=0xfffffff4 fr.pc=0x000001c3987cf70c relative=0x0000000000000b6c
Event: 185.794 Thread 0x000001c3ac871850 Uncommon trap: reason=null_check action=make_not_entrant pc=0x000001c3987cf70c method=com.sun.javafx.sg.prism.GrowableDataBuffer.returnBuffer(Lcom/sun/javafx/sg/prism/GrowableDataBuffer;)V @ 39 c2
Event: 185.794 Thread 0x000001c3ac871850 DEOPT PACKING pc=0x000001c3987cf70c sp=0x0000003ab50fee80
Event: 185.795 Thread 0x000001c3ac871850 DEOPT UNPACKING pc=0x000001c3980f46a2 sp=0x0000003ab50fee08 mode 2
Event: 292.056 Thread 0x000001c3acd3f570 Uncommon trap: trap_request=0xffffff45 fr.pc=0x000001c39872f62c relative=0x0000000000000d4c
Event: 292.056 Thread 0x000001c3acd3f570 Uncommon trap: reason=unstable_if action=reinterpret pc=0x000001c39872f62c method=javafx.beans.property.DoublePropertyBase.set(D)V @ 64 c2
Event: 292.057 Thread 0x000001c3acd3f570 DEOPT PACKING pc=0x000001c39872f62c sp=0x0000003ab54fd470
Event: 292.057 Thread 0x000001c3acd3f570 DEOPT UNPACKING pc=0x000001c3980f46a2 sp=0x0000003ab54fd420 mode 2
Event: 292.071 Thread 0x000001c3ac871850 Uncommon trap: trap_request=0xffffff45 fr.pc=0x000001c3987b78ac relative=0x00000000000016ac
Event: 292.071 Thread 0x000001c3ac871850 Uncommon trap: reason=unstable_if action=reinterpret pc=0x000001c3987b78ac method=com.sun.javafx.tk.quantum.ViewPainter.paintImpl(Lcom/sun/prism/Graphics;)V @ 73 c2
Event: 292.072 Thread 0x000001c3ac871850 DEOPT PACKING pc=0x000001c3987b78ac sp=0x0000003ab50feef0
Event: 292.072 Thread 0x000001c3ac871850 DEOPT UNPACKING pc=0x000001c3980f46a2 sp=0x0000003ab50fee80 mode 2

Classes loaded (20 events):
Event: 0.664 Loading class java/util/WeakHashMap$EntryIterator
Event: 0.664 Loading class java/util/WeakHashMap$EntryIterator done
Event: 0.670 Loading class java/nio/HeapIntBuffer
Event: 0.670 Loading class java/nio/HeapIntBuffer done
Event: 0.672 Loading class java/util/concurrent/ConcurrentLinkedQueue
Event: 0.672 Loading class java/util/concurrent/ConcurrentLinkedQueue done
Event: 0.672 Loading class java/util/concurrent/ConcurrentLinkedQueue$Node
Event: 0.672 Loading class java/util/concurrent/ConcurrentLinkedQueue$Node done
Event: 0.673 Loading class java/lang/invoke/MethodHandle$1
Event: 0.673 Loading class java/lang/invoke/MethodHandle$1 done
Event: 0.684 Loading class java/text/CharacterIterator
Event: 0.684 Loading class java/text/CharacterIterator done
Event: 0.699 Loading class java/util/EnumMap$Values
Event: 0.699 Loading class java/util/EnumMap$Values done
Event: 0.699 Loading class java/util/EnumMap$ValueIterator
Event: 0.699 Loading class java/util/EnumMap$EnumMapIterator
Event: 0.699 Loading class java/util/EnumMap$EnumMapIterator done
Event: 0.699 Loading class java/util/EnumMap$ValueIterator done
Event: 0.706 Loading class java/nio/DirectByteBuffer$Deallocator
Event: 0.706 Loading class java/nio/DirectByteBuffer$Deallocator done

Classes unloaded (0 events):
No events

Classes redefined (0 events):
No events

Internal exceptions (20 events):
Event: 0.621 Thread 0x000001c3acd3f570 Exception <a 'java/lang/ClassNotFoundException'{0x0000000712f3bb20}: com/sun/glass/ui/win/themes_cs_Latn> (0x0000000712f3bb20) 
thrown [s\src\hotspot\share\prims\jni.cpp, line 539]
Event: 0.621 Thread 0x000001c3acd3f570 Exception <a 'java/lang/ClassNotFoundException'{0x0000000712f3cbb0}: com/sun/glass/ui/win/themes_cs_Latn_CZ> (0x0000000712f3cbb0) 
thrown [s\src\hotspot\share\prims\jni.cpp, line 539]
Event: 0.621 Thread 0x000001c3acd3f570 Exception <a 'java/lang/ClassNotFoundException'{0x0000000712f3dea8}: com/sun/glass/ui/win/themes_af_NA> (0x0000000712f3dea8) 
thrown [s\src\hotspot\share\prims\jni.cpp, line 539]
Event: 0.621 Thread 0x000001c3acd3f570 Exception <a 'java/lang/ClassNotFoundException'{0x0000000712f3f320}: com/sun/glass/ui/win/themes_en_IN> (0x0000000712f3f320) 
thrown [s\src\hotspot\share\prims\jni.cpp, line 539]
Event: 0.621 Thread 0x000001c3acd3f570 Exception <a 'java/lang/ClassNotFoundException'{0x0000000712f40988}: com/sun/glass/ui/win/themes_es_NI> (0x0000000712f40988) 
thrown [s\src\hotspot\share\prims\jni.cpp, line 539]
Event: 0.621 Thread 0x000001c3acd3f570 Exception <a 'java/lang/ClassNotFoundException'{0x0000000712f41dc0}: com/sun/glass/ui/win/themes_ii_Yiii> (0x0000000712f41dc0) 
thrown [s\src\hotspot\share\prims\jni.cpp, line 539]
Event: 0.621 Thread 0x000001c3acd3f570 Exception <a 'java/lang/ClassNotFoundException'{0x0000000712f42e50}: com/sun/glass/ui/win/themes_ii_Yiii_CN> (0x0000000712f42e50) 
thrown [s\src\hotspot\share\prims\jni.cpp, line 539]
Event: 0.621 Thread 0x000001c3acd3f570 Exception <a 'java/lang/ClassNotFoundException'{0x0000000712f44148}: com/sun/glass/ui/win/themes_mas_TZ> (0x0000000712f44148) 
thrown [s\src\hotspot\share\prims\jni.cpp, line 539]
Event: 0.621 Thread 0x000001c3acd3f570 Exception <a 'java/lang/ClassNotFoundException'{0x0000000712f45830}: com/sun/glass/ui/win/themes_ms_BN> (0x0000000712f45830) 
thrown [s\src\hotspot\share\prims\jni.cpp, line 539]
Event: 0.621 Thread 0x000001c3acd3f570 Exception <a 'java/lang/ClassNotFoundException'{0x0000000712f46b00}: com/sun/glass/ui/win/themes_ccp_IN> (0x0000000712f46b00) 
thrown [s\src\hotspot\share\prims\jni.cpp, line 539]
Event: 0.641 Thread 0x000001c3acd3f570 Exception <a 'java/lang/NoSuchMethodError'{0x0000000712dc3c10}: 'java.lang.Object java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial(java.lang.Object, java.lang.Object, int)'> (0x0000000712dc3c10) 
thrown [s\src\hotspot\share\interpreter\linkResolver.cpp, line 773]
Event: 0.672 Thread 0x000001c3acd3f570 Exception <a 'java/lang/NoSuchMethodError'{0x0000000712a7a8c8}: 'long java.lang.invoke.DirectMethodHandle$Holder.invokeStatic(java.lang.Object, java.lang.Object, java.lang.Object)'> (0x0000000712a7a8c8) 
thrown [s\src\hotspot\share\interpreter\linkResolver.cpp, line 773]
Event: 0.673 Thread 0x000001c3acd3f570 Exception <a 'java/lang/NoSuchMethodError'{0x0000000712ada1a8}: 'long java.lang.invoke.DirectMethodHandle$Holder.invokeStaticInit(java.lang.Object, java.lang.Object, java.lang.Object)'> (0x0000000712ada1a8) 
thrown [s\src\hotspot\share\interpreter\linkResolver.cpp, line 773]
Event: 0.675 Thread 0x000001c3acd3f570 Exception <a 'java/lang/NoSuchMethodError'{0x0000000712af3060}: 'java.lang.Object java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial(java.lang.Object, java.lang.Object, long)'> (0x0000000712af3060) 
thrown [s\src\hotspot\share\interpreter\linkResolver.cpp, line 773]
Event: 0.675 Thread 0x000001c3acd3f570 Exception <a 'java/lang/NoSuchMethodError'{0x0000000712af6958}: 'java.lang.Object java.lang.invoke.Invokers$Holder.linkToTargetMethod(java.lang.Object, long, java.lang.Object)'> (0x0000000712af6958) 
thrown [s\src\hotspot\share\interpreter\linkResolver.cpp, line 773]
Event: 0.688 Thread 0x000001c3ac871850 Exception <a 'java/lang/NoSuchMethodError'{0x0000000712bdbbb8}: 'int java.lang.invoke.DirectMethodHandle$Holder.invokeStaticInit(java.lang.Object, java.lang.Object)'> (0x0000000712bdbbb8) 
thrown [s\src\hotspot\share\interpreter\linkResolver.cpp, line 773]
Event: 0.706 Thread 0x000001c3ac871850 Exception <a 'java/lang/NoSuchMethodError'{0x000000071526b9b8}: 'java.lang.Object java.lang.invoke.Invokers$Holder.invokeExact_MT(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)'> (0x000000071526b9b8) 
thrown [s\src\hotspot\share\interpreter\linkResolver.cpp, line 773]
Event: 1.642 Thread 0x000001c3ac871850 Implicit null exception at 0x000001c3986f04ce to 0x000001c3986f0ae0
Event: 61.558 Thread 0x000001c3acd3f570 Implicit null exception at 0x000001c3987949fd to 0x000001c398794d50
Event: 185.794 Thread 0x000001c3ac871850 Implicit null exception at 0x000001c3987ced9a to 0x000001c3987cf6e4

ZGC Phase Switch (0 events):
No events

VM Operations (20 events):
Event: 73.563 Executing VM operation: Cleanup
Event: 73.565 Executing VM operation: Cleanup done
Event: 118.745 Executing VM operation: G1CollectForAllocation (G1 Evacuation Pause)
Event: 118.769 Executing VM operation: G1CollectForAllocation (G1 Evacuation Pause) done
Event: 120.241 Executing VM operation: HandshakeAllThreads (HandshakeForDeflation)
Event: 120.241 Executing VM operation: HandshakeAllThreads (HandshakeForDeflation) done
Event: 120.241 Executing VM operation: RendezvousGCThreads
Event: 120.241 Executing VM operation: RendezvousGCThreads done
Event: 180.328 Executing VM operation: HandshakeAllThreads (HandshakeForDeflation)
Event: 180.328 Executing VM operation: HandshakeAllThreads (HandshakeForDeflation) done
Event: 180.329 Executing VM operation: RendezvousGCThreads
Event: 180.329 Executing VM operation: RendezvousGCThreads done
Event: 185.790 Executing VM operation: G1CollectForAllocation (G1 Evacuation Pause)
Event: 185.793 Executing VM operation: G1CollectForAllocation (G1 Evacuation Pause) done
Event: 240.412 Executing VM operation: HandshakeAllThreads (HandshakeForDeflation)
Event: 240.412 Executing VM operation: HandshakeAllThreads (HandshakeForDeflation) done
Event: 240.412 Executing VM operation: RendezvousGCThreads
Event: 240.412 Executing VM operation: RendezvousGCThreads done
Event: 245.948 Executing VM operation: G1CollectForAllocation (G1 Evacuation Pause)
Event: 245.951 Executing VM operation: G1CollectForAllocation (G1 Evacuation Pause) done

Events (20 events):
Event: 0.037 Thread 0x000001c3a7c69d10 Thread added: 0x000001c3a7c69d10
Event: 0.037 Thread 0x000001c3a7c6a770 Thread added: 0x000001c3a7c6a770
Event: 0.037 Thread 0x000001c3a7c6b1d0 Thread added: 0x000001c3a7c6b1d0
Event: 0.037 Thread 0x000001c3a7c47980 Thread added: 0x000001c3a7c47980
Event: 0.037 Thread 0x000001c3a7c8cf30 Thread added: 0x000001c3a7c8cf30
Event: 0.072 Thread 0x000001c3a7b53070 Thread added: 0x000001c3a7b53070
Event: 0.107 Thread 0x000001c3a7f6a2c0 Thread added: 0x000001c3a7f6a2c0
Event: 0.113 Thread 0x000001c3a7f58940 Thread added: 0x000001c3a7f58940
Event: 0.144 Thread 0x000001c3ac2bca30 Thread added: 0x000001c3ac2bca30
Event: 0.220 Thread 0x000001c3ac871850 Thread added: 0x000001c3ac871850
Event: 0.281 Thread 0x000001c3acd35520 Thread added: 0x000001c3acd35520
Event: 0.283 Thread 0x000001c3acd3f570 Thread added: 0x000001c3acd3f570
Event: 0.317 Thread 0x000001c3a7f58940 Thread exited: 0x000001c3a7f58940
Event: 0.346 Thread 0x000001c3acf52320 Thread added: 0x000001c3acf52320
Event: 0.356 Thread 0x000001c3acfe6ce0 Thread added: 0x000001c3acfe6ce0
Event: 0.512 Thread 0x000001c3ad175180 Thread added: 0x000001c3ad175180
Event: 1.375 Thread 0x000001c3ad175180 Thread exited: 0x000001c3ad175180
Event: 1.375 Thread 0x000001c3a7f6a2c0 Thread exited: 0x000001c3a7f6a2c0
Event: 55.116 Thread 0x000001c3c753afe0 Thread added: 0x000001c3c753afe0
Event: 58.272 Thread 0x000001c3c753afe0 Thread exited: 0x000001c3c753afe0


Dynamic libraries:
0x00007ff7287c0000 - 0x00007ff7287ce000 	C:\Users\CYTech Student\.p2\pool\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_21.0.3.v20240426-1530\jre\bin\javaw.exe
0x00007ff86a3d0000 - 0x00007ff86a5c8000 	C:\Windows\SYSTEM32\ntdll.dll
0x00007ff869de0000 - 0x00007ff869e9d000 	C:\Windows\System32\KERNEL32.DLL
0x00007ff867d90000 - 0x00007ff868086000 	C:\Windows\System32\KERNELBASE.dll
0x00007ff867b30000 - 0x00007ff867c30000 	C:\Windows\System32\ucrtbase.dll
0x00007ff849210000 - 0x00007ff849228000 	C:\Users\CYTech Student\.p2\pool\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_21.0.3.v20240426-1530\jre\bin\jli.dll
0x00007ff84eb40000 - 0x00007ff84eb5b000 	C:\Users\CYTech Student\.p2\pool\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_21.0.3.v20240426-1530\jre\bin\VCRUNTIME140.dll
0x00007ff8693a0000 - 0x00007ff86953f000 	C:\Windows\System32\USER32.dll
0x00007ff849700000 - 0x00007ff84999a000 	C:\Windows\WinSxS\amd64_microsoft.windows.common-controls_6595b64144ccf1df_6.0.19041.3636_none_60b6a03d71f818d5\COMCTL32.dll
0x00007ff867b00000 - 0x00007ff867b22000 	C:\Windows\System32\win32u.dll
0x00007ff868e20000 - 0x00007ff868ebe000 	C:\Windows\System32\msvcrt.dll
0x00007ff86a180000 - 0x00007ff86a1ab000 	C:\Windows\System32\GDI32.dll
0x00007ff868130000 - 0x00007ff868247000 	C:\Windows\System32\gdi32full.dll
0x00007ff868090000 - 0x00007ff86812d000 	C:\Windows\System32\msvcp_win.dll
0x00007ff869f30000 - 0x00007ff869f62000 	C:\Windows\System32\IMM32.DLL
0x00007ff85fc80000 - 0x00007ff85fc8c000 	C:\Users\CYTech Student\.p2\pool\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_21.0.3.v20240426-1530\jre\bin\vcruntime140_1.dll
0x00007ff849180000 - 0x00007ff84920e000 	C:\Users\CYTech Student\.p2\pool\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_21.0.3.v20240426-1530\jre\bin\msvcp140.dll
0x00007ff8093b0000 - 0x00007ff80a132000 	C:\Users\CYTech Student\.p2\pool\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_21.0.3.v20240426-1530\jre\bin\server\jvm.dll
0x00007ff868ca0000 - 0x00007ff868d50000 	C:\Windows\System32\ADVAPI32.dll
0x00007ff86a0e0000 - 0x00007ff86a180000 	C:\Windows\System32\sechost.dll
0x00007ff86a1b0000 - 0x00007ff86a2d3000 	C:\Windows\System32\RPCRT4.dll
0x00007ff867ad0000 - 0x00007ff867af7000 	C:\Windows\System32\bcrypt.dll
0x00007ff868f20000 - 0x00007ff868f8b000 	C:\Windows\System32\WS2_32.dll
0x00007ff85c6b0000 - 0x00007ff85c6d7000 	C:\Windows\SYSTEM32\WINMM.dll
0x00007ff866fd0000 - 0x00007ff86701b000 	C:\Windows\SYSTEM32\POWRPROF.dll
0x00007ff85f880000 - 0x00007ff85f88a000 	C:\Windows\SYSTEM32\VERSION.dll
0x00007ff866e80000 - 0x00007ff866e92000 	C:\Windows\SYSTEM32\UMPDC.dll
0x00007ff8658f0000 - 0x00007ff865902000 	C:\Windows\SYSTEM32\kernel.appcore.dll
0x00007ff864f70000 - 0x00007ff864f7a000 	C:\Users\CYTech Student\.p2\pool\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_21.0.3.v20240426-1530\jre\bin\jimage.dll
0x00007ff857cb0000 - 0x00007ff857e94000 	C:\Windows\SYSTEM32\DBGHELP.DLL
0x00007ff83b290000 - 0x00007ff83b2c4000 	C:\Windows\SYSTEM32\dbgcore.DLL
0x00007ff868370000 - 0x00007ff8683f2000 	C:\Windows\System32\bcryptPrimitives.dll
0x00007ff8634d0000 - 0x00007ff8634ef000 	C:\Users\CYTech Student\.p2\pool\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_21.0.3.v20240426-1530\jre\bin\java.dll
0x00007ff863490000 - 0x00007ff8634a8000 	C:\Users\CYTech Student\.p2\pool\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_21.0.3.v20240426-1530\jre\bin\zip.dll
0x00007ff868400000 - 0x00007ff868b6b000 	C:\Windows\System32\SHELL32.dll
0x00007ff865b10000 - 0x00007ff8662ae000 	C:\Windows\SYSTEM32\windows.storage.dll
0x00007ff869a80000 - 0x00007ff869dd3000 	C:\Windows\System32\combase.dll
0x00007ff8674b0000 - 0x00007ff8674de000 	C:\Windows\SYSTEM32\Wldp.dll
0x00007ff86a010000 - 0x00007ff86a0dd000 	C:\Windows\System32\OLEAUT32.dll
0x00007ff86a2e0000 - 0x00007ff86a38d000 	C:\Windows\System32\SHCORE.dll
0x00007ff869340000 - 0x00007ff869395000 	C:\Windows\System32\shlwapi.dll
0x00007ff8679b0000 - 0x00007ff8679d3000 	C:\Windows\SYSTEM32\profapi.dll
0x00007ff863700000 - 0x00007ff863710000 	C:\Users\CYTech Student\.p2\pool\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_21.0.3.v20240426-1530\jre\bin\net.dll
0x00007ff862560000 - 0x00007ff86266a000 	C:\Windows\SYSTEM32\WINHTTP.dll
0x00007ff867210000 - 0x00007ff86727a000 	C:\Windows\system32\mswsock.dll
0x00007ff85c330000 - 0x00007ff85c346000 	C:\Users\CYTech Student\.p2\pool\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_21.0.3.v20240426-1530\jre\bin\nio.dll
0x000001c38d020000 - 0x000001c38d024000 	H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\api-ms-win-core-console-l1-1-0.dll
0x000001c3a7fe0000 - 0x000001c3a7fe4000 	H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\api-ms-win-core-console-l1-2-0.dll
0x000001c3a7ff0000 - 0x000001c3a7ff4000 	H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\api-ms-win-core-datetime-l1-1-0.dll
0x000001c3ad900000 - 0x000001c3ad904000 	H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\api-ms-win-core-debug-l1-1-0.dll
0x000001c3ad910000 - 0x000001c3ad914000 	H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\api-ms-win-core-errorhandling-l1-1-0.dll
0x000001c3ad920000 - 0x000001c3ad925000 	H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\api-ms-win-core-file-l1-1-0.dll
0x000001c3ad930000 - 0x000001c3ad934000 	H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\api-ms-win-core-file-l1-2-0.dll
0x000001c3ad940000 - 0x000001c3ad944000 	H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\api-ms-win-core-file-l2-1-0.dll
0x000001c3ad950000 - 0x000001c3ad954000 	H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\api-ms-win-core-handle-l1-1-0.dll
0x000001c3ad960000 - 0x000001c3ad964000 	H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\api-ms-win-core-heap-l1-1-0.dll
0x000001c3ad970000 - 0x000001c3ad974000 	H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\api-ms-win-core-interlocked-l1-1-0.dll
0x000001c3ad980000 - 0x000001c3ad984000 	H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\api-ms-win-core-libraryloader-l1-1-0.dll
0x000001c3ad990000 - 0x000001c3ad994000 	H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\api-ms-win-core-localization-l1-2-0.dll
0x000001c3ad9a0000 - 0x000001c3ad9a4000 	H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\api-ms-win-core-memory-l1-1-0.dll
0x000001c3ad9b0000 - 0x000001c3ad9b4000 	H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\api-ms-win-core-namedpipe-l1-1-0.dll
0x000001c3ad9c0000 - 0x000001c3ad9c4000 	H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\api-ms-win-core-processenvironment-l1-1-0.dll
0x000001c3ad9d0000 - 0x000001c3ad9d4000 	H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\api-ms-win-core-processthreads-l1-1-0.dll
0x000001c3ad9e0000 - 0x000001c3ad9e4000 	H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\api-ms-win-core-processthreads-l1-1-1.dll
0x000001c3ad9f0000 - 0x000001c3ad9f4000 	H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\api-ms-win-core-profile-l1-1-0.dll
0x000001c3ada00000 - 0x000001c3ada04000 	H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\api-ms-win-core-rtlsupport-l1-1-0.dll
0x000001c3ada10000 - 0x000001c3ada14000 	H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\api-ms-win-core-string-l1-1-0.dll
0x000001c3ada20000 - 0x000001c3ada24000 	H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\api-ms-win-core-synch-l1-1-0.dll
0x000001c3ada30000 - 0x000001c3ada34000 	H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\api-ms-win-core-synch-l1-2-0.dll
0x000001c3ada40000 - 0x000001c3ada44000 	H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\api-ms-win-core-sysinfo-l1-1-0.dll
0x000001c3ada50000 - 0x000001c3ada54000 	H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\api-ms-win-core-timezone-l1-1-0.dll
0x000001c3ada60000 - 0x000001c3ada64000 	H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\api-ms-win-core-util-l1-1-0.dll
0x000001c3ada70000 - 0x000001c3ada74000 	H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\api-ms-win-crt-conio-l1-1-0.dll
0x000001c3ada80000 - 0x000001c3ada85000 	H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\api-ms-win-crt-convert-l1-1-0.dll
0x000001c3ada90000 - 0x000001c3ada94000 	H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\api-ms-win-crt-environment-l1-1-0.dll
0x000001c3adaa0000 - 0x000001c3adaa4000 	H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\api-ms-win-crt-filesystem-l1-1-0.dll
0x000001c3adab0000 - 0x000001c3adab4000 	H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\api-ms-win-crt-heap-l1-1-0.dll
0x000001c3adac0000 - 0x000001c3adac4000 	H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\api-ms-win-crt-locale-l1-1-0.dll
0x000001c3adad0000 - 0x000001c3adad6000 	H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\api-ms-win-crt-math-l1-1-0.dll
0x000001c3adae0000 - 0x000001c3adae6000 	H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\api-ms-win-crt-multibyte-l1-1-0.dll
0x000001c3adaf0000 - 0x000001c3adb01000 	H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\api-ms-win-crt-private-l1-1-0.dll
0x000001c3adb10000 - 0x000001c3adb14000 	H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\api-ms-win-crt-process-l1-1-0.dll
0x000001c3adb20000 - 0x000001c3adb25000 	H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\api-ms-win-crt-runtime-l1-1-0.dll
0x000001c3adb30000 - 0x000001c3adb35000 	H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\api-ms-win-crt-stdio-l1-1-0.dll
0x000001c3adb40000 - 0x000001c3adb45000 	H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\api-ms-win-crt-string-l1-1-0.dll
0x000001c3adb50000 - 0x000001c3adb54000 	H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\api-ms-win-crt-time-l1-1-0.dll
0x000001c3adb60000 - 0x000001c3adb64000 	H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\api-ms-win-crt-utility-l1-1-0.dll
0x00007ff848360000 - 0x00007ff848471000 	H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\ucrtbase.dll
0x00007ff849160000 - 0x00007ff84917b000 	H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\vcruntime140.dll
0x00007ff85c440000 - 0x00007ff85c44c000 	H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\vcruntime140_1.dll
0x00007ff8490d0000 - 0x00007ff84915e000 	H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\msvcp140.dll
0x00007ff84eb30000 - 0x00007ff84eb39000 	H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\msvcp140_1.dll
0x00007ff848f80000 - 0x00007ff848fc1000 	H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\msvcp140_2.dll
0x00007ff8490a0000 - 0x00007ff8490d0000 	H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\prism_d3d.dll
0x00007ff839b00000 - 0x00007ff839ccd000 	C:\Windows\system32\d3d9.dll
0x00007ff865500000 - 0x00007ff86552f000 	C:\Windows\SYSTEM32\dwmapi.dll
0x00007ff865400000 - 0x00007ff86549e000 	C:\Windows\system32\uxtheme.dll
0x00007fffe9880000 - 0x00007fffe9938000 	C:\Windows\SYSTEM32\d3d9on12.dll
0x00007ff838a80000 - 0x00007ff838aa5000 	C:\Windows\SYSTEM32\d3d12.dll
0x00007ff866310000 - 0x00007ff866403000 	C:\Windows\SYSTEM32\dxgi.dll
0x00007ff85f020000 - 0x00007ff85f05b000 	C:\Windows\SYSTEM32\dxcore.dll
0x00007ff867a80000 - 0x00007ff867ace000 	C:\Windows\System32\cfgmgr32.dll
0x00007fffe96b0000 - 0x00007fffe987d000 	C:\Windows\SYSTEM32\D3D12Core.dll
0x00007fffe9680000 - 0x00007fffe96a7000 	C:\Windows\System32\DriverStore\FileRepository\iigd_dch.inf_amd64_da775d7ecf291310\igd12umd64.dll
0x00007fffe7cb0000 - 0x00007fffe967c000 	C:\Windows\System32\DriverStore\FileRepository\iigd_dch.inf_amd64_da775d7ecf291310\igd12um64xel.dll
0x00007ff867c30000 - 0x00007ff867d8e000 	C:\Windows\System32\CRYPT32.dll
0x00007ff868b70000 - 0x00007ff868c9b000 	C:\Windows\System32\ole32.dll
0x00007ff841ff0000 - 0x00007ff842035000 	C:\Windows\SYSTEM32\ControlLib.dll
0x00007ff85c600000 - 0x00007ff85c690000 	C:\Windows\System32\DriverStore\FileRepository\iigd_dch.inf_amd64_da775d7ecf291310\IntelControlLib.dll
0x00007ff85b220000 - 0x00007ff85b65c000 	C:\Windows\System32\DriverStore\FileRepository\iigd_dch.inf_amd64_da775d7ecf291310\igdgmm64.dll
0x00007ff853150000 - 0x00007ff8571b6000 	C:\Windows\System32\DriverStore\FileRepository\iigd_dch.inf_amd64_da775d7ecf291310\igc64.dll
0x00007fffe7c80000 - 0x00007fffe7caa000 	C:\Windows\SYSTEM32\D3DSCache.dll
0x00007ff867930000 - 0x00007ff86795e000 	C:\Windows\SYSTEM32\USERENV.dll
0x00007fffe7910000 - 0x00007fffe7c11000 	C:\Windows\System32\DriverStore\FileRepository\iigd_dch.inf_amd64_da775d7ecf291310\igd12dxva64.dll
0x00007ff869540000 - 0x00007ff8699ae000 	C:\Windows\System32\SETUPAPI.dll
0x00007ff816210000 - 0x00007ff8173e2000 	C:\Windows\System32\DriverStore\FileRepository\iigd_dch.inf_amd64_da775d7ecf291310\igddxvacommon64.dll
0x00007ffff6d50000 - 0x00007ffff8a79000 	C:\Windows\System32\DriverStore\FileRepository\iigd_dch.inf_amd64_da775d7ecf291310\media_bin_64.dll
0x00007ff82ae90000 - 0x00007ff82aeb7000 	C:\Windows\System32\DriverStore\FileRepository\iigd_dch.inf_amd64_da775d7ecf291310\igdinfo64.dll
0x00007ff862340000 - 0x00007ff862543000 	C:\Windows\SYSTEM32\twinapi.appcore.dll
0x00007ff848f30000 - 0x00007ff848f75000 	H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin\glass.dll
0x00007ff869260000 - 0x00007ff86933a000 	C:\Windows\System32\COMDLG32.dll
0x00007ff868f90000 - 0x00007ff8690a5000 	C:\Windows\System32\MSCTF.dll
0x00007ff868d70000 - 0x00007ff868e19000 	C:\Windows\System32\clbcatq.dll
0x00007ff84deb0000 - 0x00007ff84dff1000 	C:\Windows\System32\Windows.UI.dll
0x00007ff862670000 - 0x00007ff862711000 	C:\Windows\System32\WindowManagementAPI.dll
0x00007ff84dc50000 - 0x00007ff84dda2000 	C:\Windows\System32\InputHost.dll
0x00007ff84ddb0000 - 0x00007ff84dea9000 	C:\Windows\System32\TextInputFramework.dll
0x00007ff863870000 - 0x00007ff8639c7000 	C:\Windows\SYSTEM32\wintypes.dll

dbghelp: loaded successfully - version: 4.0.5 - missing functions: none
symbol engine: initialized successfully - sym options: 0x614 - pdb path: .;C:\Users\CYTech Student\.p2\pool\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_21.0.3.v20240426-1530\jre\bin;C:\Windows\SYSTEM32;C:\Windows\WinSxS\amd64_microsoft.windows.common-controls_6595b64144ccf1df_6.0.19041.3636_none_60b6a03d71f818d5;C:\Users\CYTech Student\.p2\pool\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_21.0.3.v20240426-1530\jre\bin\server;H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\bin;C:\Windows\System32\DriverStore\FileRepository\iigd_dch.inf_amd64_da775d7ecf291310;C:\Program Files\Common Files\Microsoft Shared\Ink

VM Arguments:
jvm_args: --module-path=H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\lib --add-modules=javafx.controls,javafx.graphics,javafx.fxml -Dfile.encoding=UTF-8 -Dstdout.encoding=UTF-8 -Dstderr.encoding=UTF-8 --module-path=C:\Users\CYTech Student\.p2\pool\plugins\org.eclipse.fx.ide.css.jfx8_3.8.0.202204150904.jar;H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\lib\javafx.base.jar;H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\lib\javafx.controls.jar;H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\lib\javafx.fxml.jar;H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\lib\javafx.graphics.jar;H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\lib\javafx.media.jar;H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\lib\javafx.swing.jar;H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\lib\javafx.web.jar;H:\Users\CYTech Student\eclipse\lib\javafx-sdk-22.0.1\lib\javafx-swt.jar -XX:+ShowCodeDetailsInExceptionMessages 
java_command: main.Main
java_class_path (initial): H:\Users\CYTech Student\eclipse-workspace\Project\bin
Launcher Type: SUN_STANDARD

[Global flags]
     intx CICompilerCount                          = 4                                         {product} {ergonomic}
     uint ConcGCThreads                            = 3                                         {product} {ergonomic}
     uint G1ConcRefinementThreads                  = 10                                        {product} {ergonomic}
   size_t G1HeapRegionSize                         = 2097152                                   {product} {ergonomic}
    uintx GCDrainStackTargetSize                   = 64                                        {product} {ergonomic}
   size_t InitialHeapSize                          = 264241152                                 {product} {ergonomic}
   size_t MarkStackSize                            = 4194304                                   {product} {ergonomic}
   size_t MaxHeapSize                              = 4200595456                                {product} {ergonomic}
   size_t MaxNewSize                               = 2518679552                                {product} {ergonomic}
   size_t MinHeapDeltaBytes                        = 2097152                                   {product} {ergonomic}
   size_t MinHeapSize                              = 8388608                                   {product} {ergonomic}
    uintx NonNMethodCodeHeapSize                   = 5839372                                {pd product} {ergonomic}
    uintx NonProfiledCodeHeapSize                  = 122909434                              {pd product} {ergonomic}
    uintx ProfiledCodeHeapSize                     = 122909434                              {pd product} {ergonomic}
    uintx ReservedCodeCacheSize                    = 251658240                              {pd product} {ergonomic}
     bool SegmentedCodeCache                       = true                                      {product} {ergonomic}
     bool ShowCodeDetailsInExceptionMessages       = true                                   {manageable} {command line}
   size_t SoftMaxHeapSize                          = 4200595456                             {manageable} {ergonomic}
     bool UseCompressedOops                        = true                           {product lp64_product} {ergonomic}
     bool UseG1GC                                  = true                                      {product} {ergonomic}
     bool UseLargePagesIndividualAllocation        = false                                  {pd product} {ergonomic}

Logging:
Log output configuration:
 #0: stdout all=warning uptime,level,tags foldmultilines=false
 #1: stderr all=off uptime,level,tags foldmultilines=false

Environment Variables:
PATH=C:/Users/CYTech Student/.p2/pool/plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_21.0.3.v20240426-1530/jre/bin/server;C:/Users/CYTech Student/.p2/pool/plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_21.0.3.v20240426-1530/jre/bin;H:\Program Files\ImageMagick-7.1.1-Q16-HDRI;H:\Program Files\Eclipse Adoptium\jdk-21.0.3.9-hotspot\bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\java8path;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\PuTTY\;C:\Program Files\MATLAB\R2020a\bin;C:\Program Files\dotnet\;C:\Program Files\Git\cmd;H:\Program Files\nodejs\;H;H;C:\Users\CYTech Student\scoop\shims;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\CYTech Student\AppData\Local\Microsoft\WindowsApps;H:\Users\CYTech Student\AppData\Local\Programs\Microsoft VS Code\bin;C:\MinGW\bin;C:\Users\CYTech Student\AppData\Roaming\npm;C:\Users\CYTech Student\AppData\Local\GitHubDesktop\bin;H:\Program Files\Java\jdk-21\bin;;C:\Windows\system32;
USERNAME=CYTech Student
OS=Windows_NT
PROCESSOR_IDENTIFIER=Intel64 Family 6 Model 186 Stepping 3, GenuineIntel
TMP=C:\Users\CYTECH~1\AppData\Local\Temp
TEMP=C:\Users\CYTECH~1\AppData\Local\Temp




Periodic native trim disabled

---------------  S Y S T E M  ---------------

OS:
 Windows 10 , 64 bit Build 19041 (10.0.19041.3636)
OS uptime: 1 days 11:57 hours

CPU: total 12 (initial active 12) (6 cores per cpu, 2 threads per core) family 6 model 186 stepping 3 microcode 0x411d, cx8, cmov, fxsr, ht, mmx, 3dnowpref, sse, sse2, sse3, ssse3, sse4.1, sse4.2, popcnt, lzcnt, tsc, tscinvbit, avx, avx2, aes, erms, clmul, bmi1, bmi2, adx, sha, fma, vzeroupper, clflush, clflushopt, clwb, serialize, rdtscp, rdpid, fsrm, f16c, pku, cet_ibt, cet_ss
Processor Information for processor 0
  Max Mhz: 1300, Current Mhz: 1300, Mhz Limit: 897
Processor Information for processor 1
  Max Mhz: 1300, Current Mhz: 1300, Mhz Limit: 897
Processor Information for processor 2
  Max Mhz: 1300, Current Mhz: 1300, Mhz Limit: 1300
Processor Information for processor 3
  Max Mhz: 1300, Current Mhz: 1300, Mhz Limit: 1300
Processor Information for processor 4
  Max Mhz: 1300, Current Mhz: 900, Mhz Limit: 897
Processor Information for processor 5
  Max Mhz: 1300, Current Mhz: 900, Mhz Limit: 897
Processor Information for processor 6
  Max Mhz: 1300, Current Mhz: 900, Mhz Limit: 897
Processor Information for processor 7
  Max Mhz: 1300, Current Mhz: 900, Mhz Limit: 897
Processor Information for processor 8
  Max Mhz: 1300, Current Mhz: 900, Mhz Limit: 897
Processor Information for processor 9
  Max Mhz: 1300, Current Mhz: 900, Mhz Limit: 897
Processor Information for processor 10
  Max Mhz: 1300, Current Mhz: 900, Mhz Limit: 897
Processor Information for processor 11
  Max Mhz: 1300, Current Mhz: 900, Mhz Limit: 897

Memory: 4k page, system-wide physical 16016M (945M free)
TotalPageFile size 29841M (AvailPageFile size 1878M)
current process WorkingSet (physical memory assigned to process): 2018M, peak: 6217M
current process commit charge ("private bytes"): 9312M, peak: 9312M

vm_info: OpenJDK 64-Bit Server VM (21.0.3+9-LTS) for windows-amd64 JRE (21.0.3+9-LTS), built on 2024-04-16T00:00:00Z by "admin" with MS VC++ 17.7 (VS2022)

END.
